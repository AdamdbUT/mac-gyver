// servos.c //

#include "servos.h"

unsigned /*int*/ char positions[NB_SERVO];
unsigned char change_svocmd;
unsigned char event_count, next_event_svo;
/*Int*/ unsigned char svo_event[NB_SERVO];

unsigned char svo_order;

void init_servos(void)
{
    PR2 = 0xFF; //periode overflow Timer2 = 256
    T2CON = 0x7F; // timer2 conf = 0 1111 1 11 : nU, postscaler 1:16, on, prescaler 1:16
    T1CON = 0xA1; // timer1 conf = 1 0 10 0 0 0 1 : 16bits, vers proc = off, prescaler 1:4, oscillator off, Extclk input nU, internal clock, on
    PIE1bits.TMR1IE = 1; //Interrupt Timer1
    PIE1bits.TMR2IE = 1; //Interrupt Timer2
    positions[0]=POS_DEFAULT0;                // Positions par defaut
    TRIS_SVO0 = 0;
    #ifdef POS_DEFAULT1
        positions[1]=POS_DEFAULT1;
        TRIS_SVO1 = 0;
    #endif
    #ifdef POS_DEFAULT2
        positions[2]=POS_DEFAULT2;
        TRIS_SVO2 = 0;
    #endif
    #ifdef POS_DEFAULT3
        positions[3]=POS_DEFAULT3;
        TRIS_SVO3 = 0;
    #endif
    change_svocmd = 1; // Flag de changement de position a 1
    //TMR1H=0; // Timer1 n'interrompt pas avant Timer2
    //TMR1L=0; // ...
    TMR2 = 0;
}

unsigned char set_servo(unsigned char servo_id, unsigned /*int*/ char position)
{
     if(servo_id<NB_SERVO)
     {
         positions[servo_id]=position; // changer position
         change_svocmd = 1; // mise du Flag a 1
         return 1;
     }
     return 0;
}

void gestionservos_tmr2(void) // 1 avant
{
     #ifdef POS_DEFAULT1
     switch ((svo_order >> event_count) & 0x03)
     {
          case 0 : PIN_SVO0 = 0; break;
          case 1 : PIN_SVO1 = 0; break;
          #ifdef POS_DEFAULT2
          case 2 : PIN_SVO2 = 0; break;
          #endif
          #ifdef POS_DEFAULT3
          case 3 : PIN_SVO3 = 0; break;
          #endif
          default : break;
     }               // Mise a 0 de la sortie correspondant a l'evenement courant
     #else
     PIN_SVO0 = 0;
     #endif

     event_count++;  // On passe au prochain evenement

     if(event_count<NB_SERVO)
     {
         //TMR1H = -(svo_event[event_count].c[1].uc);    // Mise en place du timer1 pour le prochain evenement
         //TMR1L = -(svo_event[event_count].c[0].uc);    // ...
	 TMR2 = -(svo_event[event_count]);//.c[0].uc);
     }
     else
     {
         //TMR1H = 0; // Tous les evenements sont passes, on attends le prochain overflow de Timer2
         //TMR1L = 0; // ...
	 TMR2 = 0;
     }
}

void gestionservos_tmr1(void) // 2 avant
{
     if(change_svocmd) // si Flag = 1 (ie si on a ordonne un changement de position)
     {
         #ifdef POS_DEFAULT1
         /*if(positions[0]>=positions[1]) // On classe les evenements par ordre d'occurence.
         {                                // 0>=1
              #ifdef POS_DEFAULT2
              if(positions[1]>=positions[2])
              {                           // 0>=1>=2
                   #ifdef POS_DEFAULT3 
                   if(positions[2]>=positions[3])
                        svo_order = 0x1B; // 00 01 10 11 : 0>=1>=2>=3
                   else if(positions[1]>=positions[3])
                        svo_order = 0x1E; // 00 01 11 10 : 0>=1>=3>=2
                   else if(positions[0]>=positions[3])
                        svo_order = 0x36; // 00 11 01 10 : 0>=3>=1>=2
                   else
                        svo_order = 0xC6; // 11 00 01 10 : 3>=0>=1>=2
                   #else
                   svo_order = 0x06;      //    00 01 10 : 0>=1>=2
                   #endif
              }
              else if(positions[0]>=positions[2])
              {                           // 0>=2>=1
                   #ifdef POS_DEFAULT3 
                   if(positions[1]>=positions[3])
                        svo_order = 0x27; // 00 10 01 11 : 0>=2>=1>=3
                   else if(positions[2]>=positions[3])
                        svo_order = 0x2D; // 00 10 11 01 : 0>=2>=3>=1
                   else if(positions[0]>=positions[3])
                        svo_order = 0x39; // 00 11 10 01 : 0>=3>=2>=1
                   else
                        svo_order = 0xC9; // 11 00 10 01 : 3>=0>=2>=1
                   #else
                   svo_order = 0x09;      //    00 10 01 : 0>=2>=1
                   #endif
                   }
              else
              {                           // 2>=0>=1
                   #ifdef POS_DEFAULT3 
                   if(positions[1]>=positions[3])
                        svo_order = 0x87; // 10 00 01 11 : 2>=0>=1>=3
                   else if(positions[0]>=positions[3])
                        svo_order = 0x8D; // 10 00 11 01 : 2>=0>=3>=1
                   else if(positions[2]>=positions[3])
                        svo_order = 0xB1; // 10 11 00 01 : 2>=3>=0>=1
                   else
                        svo_order = 0xE1; // 11 10 00 01 : 3>=2>=0>=1
                   #else
                   svo_order = 0x21;      //    10 00 01 : 2>=0>=1
                   #endif
              }
              #else
              svo_order = 0x01;           //       00 01 : 0>=1
              #endif
         }
         else 
         {                                // 1>=0
              #ifdef POS_DEFAULT2
              if(positions[0]>=positions[2])
              {                           // 1>=0>=2
                   #ifdef POS_DEFAULT3 
                   if(positions[2]>=positions[3])
                        svo_order = 0x4B; // 01 00 10 11 : 1>=0>=2>=3
                   else if(positions[0]>=positions[3])
                        svo_order = 0x4E; // 01 00 11 10 : 1>=0>=3>=2
                   else if(positions[1]>=positions[3])
                        svo_order = 0x72; // 01 11 00 10 : 1>=3>=0>=2
                   else
                        svo_order = 0xD2; // 11 01 00 10 : 3>=1>=0>=2
                   #else
                   svo_order = 0x12;      //    01 00 10 : 1>=0>=2
                   #endif
              }
              else if(positions[1]>=positions[2])
              {                           // 1>=2>=0
                   #ifdef POS_DEFAULT3 
                   if(positions[0]>=positions[3])
                        svo_order = 0x63; // 01 10 00 11 : 1>=2>=0>=3
                   else if(positions[2]>=positions[3])
                        svo_order = 0x6C; // 01 10 11 00 : 1>=2>=3>=0
                   else if(positions[1]>=positions[3])
                        svo_order = 0x78; // 01 11 10 00 : 1>=3>=2>=0
                   else
                        svo_order = 0xD8; // 11 01 10 00 : 3>=1>=2>=0
                   #else
                   svo_order = 0x18;      //    01 10 00 : 1>=2>=0
                   #endif
                   }
              else
              {                           // 2>=1>=0
                   #ifdef POS_DEFAULT3 
                   if(positions[0]>=positions[3])
                        svo_order = 0x93; // 10 01 00 11 : 2>=1>=0>=3
                   else if(positions[1]>=positions[3])
                        svo_order = 0x9C; // 10 01 11 00 : 2>=1>=3>=0
                   else if(positions[2]>=positions[3])
                        svo_order = 0xB4; // 10 11 01 00 : 2>=3>=1>=0
                   else
                        svo_order = 0xE4; // 11 10 01 00 : 3>=2>=1>=0
                   #else
                   svo_order = 0x24;      //    10 01 00 : 2>=1>=0
                   #endif
              }
              #else
              svo_order = 0x04;           //       01 00 : 0>=1
              #endif
         }

	//	*((float*)mydata)=cosf(PI/4.0);
         svo_event[0].ui = positions[svo_order & 0x03]; // Calcul des dates des evenements
         svo_event[1].ui = positions[(svo_order >> 2) & 0x03]-positions[svo_order & 0x03];
         #ifdef POS_DEFAULT2
         svo_event[2].ui = positions[(svo_order >> 4) & 0x03]-positions[(svo_order >> 2) & 0x03];
         #endif
         #ifdef POS_DEFAULT3
         svo_event[3].ui = positions[svo_order >> 6]-positions[(svo_order >> 4) & 0x03];
         #endif*/
         #else // ifdef POS_DEFAULT1
         svo_event[0]/*.ui*/ = positions[0];
         #endif
         change_svocmd = 0; // Flag a 0
     }
     event_count=0;
     PIN_SVO0=1; // Mise a 1 des sorties
     #ifdef POS_DEFAULT1
     PIN_SVO1=1; // ...
     #endif
     #ifdef POS_DEFAULT2
     PIN_SVO2=1; // ...
     #endif
     #ifdef POS_DEFAULT3
     PIN_SVO3=1; // ...
     #endif
     
     //TMR1H=-(svo_event[0].c[1].uc); // Mise a place du timer1 pour le premier evenement
     //TMR1L=-(svo_event[0].c[0].uc); // ...
     TMR2 = - svo_event[0];
}
