gplink-0.13.4 alpha
Copyright (c) 1998-2005 gputils project
Listing File Generated: 5-20-2009  17:01:05
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue May 19 21:44:03 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _application_data
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _ep_bdt
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _ep2_num_bytes_to_send
                                           	extern _ep2_source_data
                                           	extern _an_data
                                           	extern _mydata
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _device_descriptor
                                           	extern _configuration_descriptor
                                           	extern _string_descriptor
                                           	extern _str0
                                           	extern _str1
                                           	extern _str2
                                           	extern _str3
                                           	extern _ep_init
                                           	extern _ep_in
                                           	extern _ep_out
                                           	extern _ep_setup
                                           	extern _application_main
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute Ival
                                           S_application_iface__application_data	code	0X002000
                                           _application_data:
002000   c200     movff	0x200, 0x20        	DB	0x00, LOW(_device_descriptor), HIGH(_device_descriptor), UPPER(_device_descriptor), LOW(_configuration_descriptor), HIGH(_configuration_descriptor), UPPER(_configuration_descriptor), LOW(_string_descriptor), HIGH(_string_descriptor), UPPER(_string_descriptor), LOW(_ep_init), HIGH(_ep_init)
002002   0020
002004   2126     addwfc	0x26, 0, 0x1      
002006   8c00     bsf	0, 0x6, 0            
002008   0021     dw	0x21  ;unknown opcode 
00200a   222e     addwfc	0x2e, 0x1, 0      
00200c   ca00     movff	0xa00, 0x22        	DB	UPPER(_ep_init), LOW(_ep_in), HIGH(_ep_in), UPPER(_ep_in), LOW(_ep_out), HIGH(_ep_out), UPPER(_ep_out), LOW(_ep_setup), HIGH(_ep_setup), UPPER(_ep_setup), LOW(_application_main), HIGH(_application_main)
00200e   0022
002010   2366     addwfc	0x66, 0x1, 0x1    
002012   a200     btfss	0, 0x1, 0          
002014   0023     dw	0x23  ;unknown opcode 
002016   2d22     decfsz	0x22, 0, 0x1      
002018   0000     nop                      	DB	UPPER(_application_main)
                                           
                                           ; I code from now on!
                                           
                                           
                                           ; Statistics:
                                           ; code size:	    6 (0x0006) bytes ( 0.00%)
                                           ;           	    3 (0x0003) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue May 19 21:44:03 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _application_main
                                           	global _high_priority_isr
                                           	global _low_priority_isr
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _ep2_num_bytes_to_send
                                           	extern _ep2_source_data
                                           	extern _an_data
                                           	extern _mydata
                                           	extern _etat_moteur
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _dispatch_usb_event
                                           	extern _usb_sleep
                                           	extern _init_servos
                                           	extern _gestionservos_tmr1
                                           	extern _gestionservos_tmr2
                                           	extern _init_adconversion
                                           	extern _maj_result
                                           	extern _init_moteursetjack
                                           	extern _moteursetjack_ints_tmr0
                                           	extern _moteursetjack_ints_RB_bas
                                           	extern _moteursetjack_ints_RB_haut
                                           	extern _moteursetjack_ints_INT0
                                           	extern _moteursetjack_ints_INT1
                                           	extern _moteursetjack_ints_INT2
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_main__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	62; main.c	void high_priority_isr(void) interrupt
002020   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
002022   ffe5
002024   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
002026   ffe5
002028   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00202a   ffe5
00202c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00202e   ffe5
002030   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
002032   ffe5
002034   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
002036   ffe5
002038   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00203a   ffe5
00203c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00203e   ffe5
002040   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
002042   ffe5
                                           ;	.line	65; main.c	if(INTCONbits.TMR0IF)
002044   a4f2     btfss	0xf2, 0x2, 0       	BTFSS	_INTCONbits, 2
002046   d003     bra	0x204e               	BRA	_00114_DS_
                                           ;	.line	67; main.c	moteursetjack_ints_tmr0();
002048   ec51     call	0x28a2, 0           	CALL	_moteursetjack_ints_tmr0
00204a   f014
                                           ;	.line	68; main.c	INTCONbits.TMR0IF = 0;
00204c   94f2     bcf	0xf2, 0x2, 0         	BCF	_INTCONbits, 2
                                           _00114_DS_:
                                           ;	.line	71; main.c	if(INTCONbits.RBIF)   // Fin de course moteur 1
00204e   a0f2     btfss	0xf2, 0, 0         	BTFSS	_INTCONbits, 0
                                           ; #	GOTO	_00120_DS_
                                           ; #	BTFSS	_PORTBbits, 3
                                           ; #	GOTO	_00116_DS_
                                           ; #	CALL	_moteursetjack_ints_RB_bas
                                           ; #	BTFSS	_PORTBbits, 4
                                           ; ;     peep 1 - test/jump to test/skip
                                           ;	.line	73; main.c	if(FIN_COURSE1_BAS) moteursetjack_ints_RB_bas();
002050   d007     bra	0x2060               	BRA	_00120_DS_
                                           ;	.line	74; main.c	if(FIN_COURSE1_HAUT) moteursetjack_ints_RB_haut();
002052   b681     btfsc	0x81, 0x3, 0       	BTFSC	_PORTBbits, 3
                                           ; #	CALL	_moteursetjack_ints_RB_bas
                                           ; #	BTFSS	_PORTBbits, 4
                                           ; #	GOTO	_00118_DS_
                                           ; #	CALL	_moteursetjack_ints_RB_haut
                                           ; #	BCF	_INTCONbits, 0
                                           ; ;     peep 1 - test/jump to test/skip
                                           ;	.line	75; main.c	INTCONbits.RBIF = 0;
002054   ec49     call	0x2c92, 0           	CALL	_moteursetjack_ints_RB_bas
002056   f016
002058   b881     btfsc	0x81, 0x4, 0       	BTFSC	_PORTBbits, 4
00205a   ecec     call	0x2bd8, 0           	CALL	_moteursetjack_ints_RB_haut
00205c   f015
00205e   90f2     bcf	0xf2, 0, 0           	BCF	_INTCONbits, 0
                                           _00120_DS_:
                                           ;	.line	77; main.c	if(INTCONbits.INT0IF) // Fin de course moteur 2-0 / Derriere
002060   a2f2     btfss	0xf2, 0x1, 0       	BTFSS	_INTCONbits, 1
002062   d003     bra	0x206a               	BRA	_00122_DS_
                                           ;	.line	79; main.c	moteursetjack_ints_INT0();
002064   ec2f     call	0x2e5e, 0           	CALL	_moteursetjack_ints_INT0
002066   f017
                                           ;	.line	80; main.c	INTCONbits.INT0IF = 0;
002068   92f2     bcf	0xf2, 0x1, 0         	BCF	_INTCONbits, 1
                                           _00122_DS_:
                                           ;	.line	82; main.c	if(INTCON3bits.INT1IF) // Fin de course moteur 2-1 / Median
00206a   a0f0     btfss	0xf0, 0, 0         	BTFSS	_INTCON3bits, 0
00206c   d003     bra	0x2074               	BRA	_00124_DS_
                                           ;	.line	84; main.c	moteursetjack_ints_INT1();
00206e   eced     call	0x2dda, 0           	CALL	_moteursetjack_ints_INT1
002070   f016
                                           ;	.line	85; main.c	INTCON3bits.INT1IF = 0;
002072   90f0     bcf	0xf0, 0, 0           	BCF	_INTCON3bits, 0
                                           _00124_DS_:
                                           ;	.line	87; main.c	if(INTCON3bits.INT2IF) // Fin de course moteur 2-2 / Devant
002074   a2f0     btfss	0xf0, 0x1, 0       	BTFSS	_INTCON3bits, 1
002076   d003     bra	0x207e               	BRA	_00126_DS_
                                           ;	.line	89; main.c	moteursetjack_ints_INT2();
002078   ecd8     call	0x2db0, 0           	CALL	_moteursetjack_ints_INT2
00207a   f016
                                           ;	.line	90; main.c	INTCON3bits.INT2IF = 0;
00207c   92f0     bcf	0xf0, 0x1, 0         	BCF	_INTCON3bits, 1
                                           _00126_DS_:
                                           ;	.line	93; main.c	if(PIR1bits.TMR1IF)
00207e   a09e     btfss	0x9e, 0, 0         	BTFSS	_PIR1bits, 0
002080   d003     bra	0x2088               	BRA	_00128_DS_
                                           ;	.line	95; main.c	gestionservos_tmr1();
002082   ec02     call	0x2e04, 0           	CALL	_gestionservos_tmr1
002084   f017
                                           ;	.line	96; main.c	PIR1bits.TMR1IF = 0;
002086   909e     bcf	0x9e, 0, 0           	BCF	_PIR1bits, 0
                                           _00128_DS_:
                                           ;	.line	98; main.c	if(PIR1bits.TMR2IF)
002088   a29e     btfss	0x9e, 0x1, 0       	BTFSS	_PIR1bits, 1
00208a   d003     bra	0x2092               	BRA	_00130_DS_
                                           ;	.line	100; main.c	gestionservos_tmr2();
00208c   ec75     call	0x2cea, 0           	CALL	_gestionservos_tmr2
00208e   f016
                                           ;	.line	101; main.c	PIR1bits.TMR2IF = 0;
002090   929e     bcf	0x9e, 0x1, 0         	BCF	_PIR1bits, 1
                                           _00130_DS_:
                                           ;	.line	104; main.c	if(PIR1bits.ADIF)
002092   ac9e     btfss	0x9e, 0x6, 0       	BTFSS	_PIR1bits, 6
002094   d003     bra	0x209c               	BRA	_00133_DS_
                                           ;	.line	106; main.c	maj_result();
002096   eca9     call	0x2b52, 0           	CALL	_maj_result
002098   f015
                                           ;	.line	107; main.c	PIR1bits.ADIF = 0;
00209a   9c9e     bcf	0x9e, 0x6, 0         	BCF	_PIR1bits, 6
                                           _00133_DS_:
00209c   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
00209e   fffb
0020a0   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
0020a2   fffa
0020a4   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
0020a6   ffea
0020a8   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
0020aa   ffe9
0020ac   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
0020ae   fff4
0020b0   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
0020b2   fff3
0020b4   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
0020b6   ffe0
0020b8   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
0020ba   ffd8
0020bc   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
0020be   ffe8
0020c0   0010     retfie	0                 	RETFIE	
                                           
                                           ; ; Starting pCode block
                                           S_main__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	112; main.c	void low_priority_isr(void) interrupt
004000   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
004002   ffe5
004004   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
004006   ffe5
004008   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00400a   ffe5
00400c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00400e   ffe5
004010   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
004012   ffe5
004014   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
004016   ffe5
004018   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00401a   ffe5
00401c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00401e   ffe5
004020   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
004022   ffe5
                                           ;	.line	114; main.c	}
004024   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
004026   fffb
004028   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00402a   fffa
00402c   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
00402e   ffea
004030   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
004032   ffe9
004034   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
004036   fff4
004038   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00403a   fff3
00403c   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
004042   ffd8
004044   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
004046   ffe8
004048   0010     retfie	0                 	RETFIE	
                                           
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_main__application_main	code
                                           _application_main:
                                           ;	.line	36; main.c	TRISA = 0xEF;
002d22   0eef     movlw	0xef               	MOVLW	0xef
002d24   6e92     movwf	0x92, 0            	MOVWF	_TRISA
                                           ;	.line	37; main.c	PORTA = 0x10;
002d26   0e10     movlw	0x10               	MOVLW	0x10
002d28   6e80     movwf	0x80, 0            	MOVWF	_PORTA
                                           ;	.line	40; main.c	TMR0H = 0;
002d2a   6ad7     clrf	0xd7, 0             	CLRF	_TMR0H
                                           ;	.line	41; main.c	TMR0L = 0;
002d2c   6ad6     clrf	0xd6, 0             	CLRF	_TMR0L
                                           ;	.line	43; main.c	init_moteursetjack();
002d2e   eca9     call	0x2d52, 0           	CALL	_init_moteursetjack
002d30   f016
                                           ;	.line	44; main.c	init_adconversion();
002d32   ecc1     call	0x2d82, 0           	CALL	_init_adconversion
002d34   f016
                                           ;	.line	45; main.c	init_servos();
002d36   ec12     call	0x2e24, 0           	CALL	_init_servos
002d38   f017
                                           ;	.line	48; main.c	PIE2bits.USBIE = 0; // Interrupt USB off : on ne touche pas a la gestion de l'USB !!
002d3a   9aa0     bcf	0xa0, 0x5, 0         	BCF	_PIE2bits, 5
                                           ;	.line	50; main.c	INTCONbits.PEIE = 1; // Interrupts peripheriques (usb, timer 1...)
002d3c   8cf2     bsf	0xf2, 0x6, 0         	BSF	_INTCONbits, 6
                                           ;	.line	51; main.c	INTCONbits.GIE = 1; // Interrupts global
002d3e   8ef2     bsf	0xf2, 0x7, 0         	BSF	_INTCONbits, 7
                                           _00105_DS_:
                                           ;	.line	53; main.c	while(usb_active_cfg > 2)
002d40   0e03     movlw	0x3                	MOVLW	0x03
002d42   5c5e     subwf	0x5e, 0, 0         	SUBWF	_usb_active_cfg, W
002d44   e305     bnc	0x2d50               	BNC	_00108_DS_
                                           ;	.line	55; main.c	usb_sleep();
002d46   ec13     call	0x26, 0             	CALL	_usb_sleep
002d48   f000
                                           ;	.line	56; main.c	dispatch_usb_event();
002d4a   ec0f     call	0x1e, 0             	CALL	_dispatch_usb_event
002d4c   f000
002d4e   d7f8     bra	0x2d40               	BRA	_00105_DS_
                                           _00108_DS_:
002d50   0012     return	0                 	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  284 (0x011c) bytes ( 0.22%)
                                           ;           	  142 (0x008e) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue May 19 21:44:03 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _null_function
                                           	global _device_descriptor
                                           	global _default_cfg
                                           	global _flash_cfg
                                           	global _application_cfg
                                           	global _configuration_descriptor
                                           	global _str0
                                           	global _str1
                                           	global _str2
                                           	global _str3
                                           	global _str4
                                           	global _str5
                                           	global _string_descriptor
                                           	global _ep_init
                                           	global _ep_in
                                           	global _ep_out
                                           	global _ep_setup
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _ep_bdt
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _ep2_num_bytes_to_send
                                           	extern _ep2_source_data
                                           	extern _an_data
                                           	extern _mydata
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _ep0_init
                                           	extern _ep1_init
                                           	extern _ep2_init
                                           	extern _my_ep1_init
                                           	extern _my_ep2_init
                                           	extern _ep0_in
                                           	extern _ep2_in
                                           	extern _my_ep2_in
                                           	extern _ep1_out
                                           	extern _my_ep1_out
                                           	extern _ep0_setup
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_usb_descriptors__null_function	code
                                           _null_function:
00201a   0012     return	0                 	return
                                           	
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _device_descriptor:
0020c2   0112     movlb	0x12               	DB	0x12, 0x01, 0x00, 0x02, 0xff, 0x00, 0xff, 0x08, 0xa5, 0xa5, 0x02, 0x00
0020c4   0200     mulwf	0, 0               
0020c6   00ff     reset                    
0020c8   08ff     sublw	0xff               
0020ca   a5a5     btfss	0xa5, 0x2, 0x1     
0020cc   0002     dw	0x2  ;unknown opcode  
0020ce   0100     movlb	0                  	DB	0x00, 0x01, 0x01, 0x02, 0x03, 0x03
0020d0   0201     mulwf	0x1, 0             
0020d2   0303     mulwf	0x3, 0x1           
                                           ; ; Starting pCode block for Ival
                                           _default_cfg:
0020d4   0209     mulwf	0x9, 0             	DB	0x09, 0x02, 0x12, 0x00, 0x01, 0x01, 0x04, 0xc0, 0x00, 0x09, 0x04, 0x00
0020d6   0012     return	0                 
0020d8   0101     movlb	0x1                
0020da   c004     movff	0x4, 0x900         
0020dc   0900
0020de   0004     clrwdt                   
0020e0   0000     nop                      	DB	0x00, 0x00, 0xff, 0xff, 0xff, 0x04
0020e2   ffff     dw	0xffff  ;unknown opcode 
0020e4   04ff     decf	0xff, 0, 0          
                                           ; ; Starting pCode block for Ival
                                           _flash_cfg:
0020e6   0209     mulwf	0x9, 0             	DB	0x09, 0x02, 0x20, 0x00, 0x01, 0x02, 0x05, 0xc0, 0x00, 0x09, 0x04, 0x00
0020e8   0020     dw	0x20  ;unknown opcode 
0020ea   0201     mulwf	0x1, 0             
0020ec   c005     movff	0x5, 0x900         
0020ee   0900
0020f0   0004     clrwdt                   
0020f2   0200     mulwf	0, 0               	DB	0x00, 0x02, 0xff, 0xff, 0xff, 0x05, 0x07, 0x05, 0x01, 0x02, 0x40, 0x00
0020f4   ffff     dw	0xffff  ;unknown opcode 
0020f6   05ff     decf	0xff, 0, 0x1        
0020f8   0507     decf	0x7, 0, 0x1         
0020fa   0201     mulwf	0x1, 0             
0020fc   0040     dw	0x40  ;unknown opcode 
0020fe   0700     decf	0, 0x1, 0x1         	DB	0x00, 0x07, 0x05, 0x82, 0x02, 0x40, 0x00, 0x00
002100   8205     bsf	0x5, 0x1, 0          
002102   4002     rrncf	0x2, 0, 0          
002104   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _application_cfg:
002106   0209     mulwf	0x9, 0             	DB	0x09, 0x02, 0x20, 0x00, 0x01, 0x03, 0x04, 0xc0, 0x00, 0x09, 0x04, 0x00
002108   0020     dw	0x20  ;unknown opcode 
00210a   0301     mulwf	0x1, 0x1           
00210c   c004     movff	0x4, 0x900         
00210e   0900
002110   0004     clrwdt                   
002112   0200     mulwf	0, 0               	DB	0x00, 0x02, 0xff, 0xff, 0xff, 0x04, 0x07, 0x05, 0x01, 0x02, 0x40, 0x00
002114   ffff     dw	0xffff  ;unknown opcode 
002116   04ff     decf	0xff, 0, 0          
002118   0507     decf	0x7, 0, 0x1         
00211a   0201     mulwf	0x1, 0             
00211c   0040     dw	0x40  ;unknown opcode 
00211e   0700     decf	0, 0x1, 0x1         	DB	0x00, 0x07, 0x05, 0x82, 0x02, 0x40, 0x00, 0x00
002120   8205     bsf	0x5, 0x1, 0          
002122   4002     rrncf	0x2, 0, 0          
002124   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _configuration_descriptor:
002126   20d4     addwfc	0xd4, 0, 0        	DB	LOW(_default_cfg), HIGH(_default_cfg), UPPER(_default_cfg), LOW(_flash_cfg), HIGH(_flash_cfg), UPPER(_flash_cfg), LOW(_application_cfg), HIGH(_application_cfg), UPPER(_application_cfg)
002128   e600     bn	0x212a                
00212a   0020     dw	0x20  ;unknown opcode 
00212c   2106     addwfc	0x6, 0, 0x1       
00212e   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _str0:
002130   0304     mulwf	0x4, 0x1           	DB	0x04, 0x03, 0x09, 0x04
002132   0409     decf	0x9, 0, 0           
                                           ; ; Starting pCode block for Ival
                                           _str1:
002134   031c     mulwf	0x1c, 0x1          	DB	0x1c, 0x03, 0x56, 0x00, 0x61, 0x00, 0x73, 0x00, 0x63, 0x00, 0x6f, 0x00
002136   0056     dw	0x56  ;unknown opcode 
002138   0061     dw	0x61  ;unknown opcode 
00213a   0073     dw	0x73  ;unknown opcode 
00213c   0063     dw	0x63  ;unknown opcode 
00213e   006f     dw	0x6f  ;unknown opcode 
002140   0020     dw	0x20  ;unknown opcode 	DB	0x20, 0x00, 0x50, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x6a, 0x00, 0x65, 0x00
002142   0050     dw	0x50  ;unknown opcode 
002144   0072     dw	0x72  ;unknown opcode 
002146   006f     dw	0x6f  ;unknown opcode 
002148   006a     dw	0x6a  ;unknown opcode 
00214a   0065     dw	0x65  ;unknown opcode 
00214c   0063     dw	0x63  ;unknown opcode 	DB	0x63, 0x00, 0x74, 0x00
00214e   0074     dw	0x74  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _str2:
002150   031c     mulwf	0x1c, 0x1          	DB	0x1c, 0x03, 0x54, 0x00, 0x6f, 0x00, 0x67, 0x00, 0x67, 0x00, 0x6c, 0x00
002152   0054     dw	0x54  ;unknown opcode 
002154   006f     dw	0x6f  ;unknown opcode 
002156   0067     dw	0x67  ;unknown opcode 
002158   0067     dw	0x67  ;unknown opcode 
00215a   006c     dw	0x6c  ;unknown opcode 
00215c   0065     dw	0x65  ;unknown opcode 	DB	0x65, 0x00, 0x20, 0x00, 0x6d, 0x00, 0x6f, 0x00, 0x64, 0x00, 0x75, 0x00
00215e   0020     dw	0x20  ;unknown opcode 
002160   006d     dw	0x6d  ;unknown opcode 
002162   006f     dw	0x6f  ;unknown opcode 
002164   0064     dw	0x64  ;unknown opcode 
002166   0075     dw	0x75  ;unknown opcode 
002168   006c     dw	0x6c  ;unknown opcode 	DB	0x6c, 0x00, 0x65, 0x00
00216a   0065     dw	0x65  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _str3:
00216c   0304     mulwf	0x4, 0x1           	DB	0x04, 0x03, 0x31, 0x00
00216e   0031     dw	0x31  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _str4:
002170   0310     mulwf	0x10, 0x1          	DB	0x10, 0x03, 0x44, 0x00, 0x65, 0x00, 0x66, 0x00, 0x61, 0x00, 0x75, 0x00
002172   0044     dw	0x44  ;unknown opcode 
002174   0065     dw	0x65  ;unknown opcode 
002176   0066     dw	0x66  ;unknown opcode 
002178   0061     dw	0x61  ;unknown opcode 
00217a   0075     dw	0x75  ;unknown opcode 
00217c   006c     dw	0x6c  ;unknown opcode 	DB	0x6c, 0x00, 0x74, 0x00
00217e   0074     dw	0x74  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _str5:
002180   030c     mulwf	0xc, 0x1           	DB	0x0c, 0x03, 0x46, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x73, 0x00, 0x68, 0x00
002182   0046     dw	0x46  ;unknown opcode 
002184   006c     dw	0x6c  ;unknown opcode 
002186   0061     dw	0x61  ;unknown opcode 
002188   0073     dw	0x73  ;unknown opcode 
00218a   0068     dw	0x68  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _string_descriptor:
00218c   2130     addwfc	0x30, 0, 0x1      	DB	LOW(_str0), HIGH(_str0), UPPER(_str0), LOW(_str1), HIGH(_str1), UPPER(_str1), LOW(_str2), HIGH(_str2), UPPER(_str2), LOW(_str3), HIGH(_str3), UPPER(_str3)
00218e   3400     rlcf	0, 0, 0             
002190   0021     dw	0x21  ;unknown opcode 
002192   2150     addwfc	0x50, 0, 0x1      
002194   6c00     negf	0, 0                
002196   0021     dw	0x21  ;unknown opcode 
002198   2170     addwfc	0x70, 0, 0x1      	DB	LOW(_str4), HIGH(_str4), UPPER(_str4), LOW(_str5), HIGH(_str5), UPPER(_str5)
00219a   8000     bsf	0, 0, 0              
00219c   0021     dw	0x21  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_init_cfg0:
00219e   002e     dw	0x2e  ;unknown opcode 	DB	LOW(_ep0_init), HIGH(_ep0_init), UPPER(_ep0_init), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0021a0   1a00     xorwf	0, 0x1, 0          
0021a2   0020     dw	0x20  ;unknown opcode 
0021a4   201a     addwfc	0x1a, 0, 0        
0021a6   1a00     xorwf	0, 0x1, 0          
0021a8   0020     dw	0x20  ;unknown opcode 
0021aa   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0021ac   1a00     xorwf	0, 0x1, 0          
0021ae   0020     dw	0x20  ;unknown opcode 
0021b0   201a     addwfc	0x1a, 0, 0        
0021b2   1a00     xorwf	0, 0x1, 0          
0021b4   0020     dw	0x20  ;unknown opcode 
0021b6   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0021b8   1a00     xorwf	0, 0x1, 0          
0021ba   0020     dw	0x20  ;unknown opcode 
0021bc   201a     addwfc	0x1a, 0, 0        
0021be   1a00     xorwf	0, 0x1, 0          
0021c0   0020     dw	0x20  ;unknown opcode 
0021c2   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0021c4   1a00     xorwf	0, 0x1, 0          
0021c6   0020     dw	0x20  ;unknown opcode 
0021c8   201a     addwfc	0x1a, 0, 0        
0021ca   1a00     xorwf	0, 0x1, 0          
0021cc   0020     dw	0x20  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_init_cfg1:
0021ce   002e     dw	0x2e  ;unknown opcode 	DB	LOW(_ep0_init), HIGH(_ep0_init), UPPER(_ep0_init), LOW(_ep1_init), HIGH(_ep1_init), UPPER(_ep1_init), LOW(_ep2_init), HIGH(_ep2_init), UPPER(_ep2_init), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0021d0   3a00     swapf	0, 0x1, 0          
0021d2   0000     nop                      
0021d4   0042     dw	0x42  ;unknown opcode 
0021d6   1a00     xorwf	0, 0x1, 0          
0021d8   0020     dw	0x20  ;unknown opcode 
0021da   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0021dc   1a00     xorwf	0, 0x1, 0          
0021de   0020     dw	0x20  ;unknown opcode 
0021e0   201a     addwfc	0x1a, 0, 0        
0021e2   1a00     xorwf	0, 0x1, 0          
0021e4   0020     dw	0x20  ;unknown opcode 
0021e6   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0021e8   1a00     xorwf	0, 0x1, 0          
0021ea   0020     dw	0x20  ;unknown opcode 
0021ec   201a     addwfc	0x1a, 0, 0        
0021ee   1a00     xorwf	0, 0x1, 0          
0021f0   0020     dw	0x20  ;unknown opcode 
0021f2   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0021f4   1a00     xorwf	0, 0x1, 0          
0021f6   0020     dw	0x20  ;unknown opcode 
0021f8   201a     addwfc	0x1a, 0, 0        
0021fa   1a00     xorwf	0, 0x1, 0          
0021fc   0020     dw	0x20  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_init_cfg2:
0021fe   002e     dw	0x2e  ;unknown opcode 	DB	LOW(_ep0_init), HIGH(_ep0_init), UPPER(_ep0_init), LOW(_my_ep1_init), HIGH(_my_ep1_init), UPPER(_my_ep1_init), LOW(_my_ep2_init), HIGH(_my_ep2_init), UPPER(_my_ep2_init), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002200   7600     btg	0, 0x3, 0            
002202   002e     dw	0x2e  ;unknown opcode 
002204   2e44     decfsz	0x44, 0x1, 0      
002206   1a00     xorwf	0, 0x1, 0          
002208   0020     dw	0x20  ;unknown opcode 
00220a   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00220c   1a00     xorwf	0, 0x1, 0          
00220e   0020     dw	0x20  ;unknown opcode 
002210   201a     addwfc	0x1a, 0, 0        
002212   1a00     xorwf	0, 0x1, 0          
002214   0020     dw	0x20  ;unknown opcode 
002216   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002218   1a00     xorwf	0, 0x1, 0          
00221a   0020     dw	0x20  ;unknown opcode 
00221c   201a     addwfc	0x1a, 0, 0        
00221e   1a00     xorwf	0, 0x1, 0          
002220   0020     dw	0x20  ;unknown opcode 
002222   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002224   1a00     xorwf	0, 0x1, 0          
002226   0020     dw	0x20  ;unknown opcode 
002228   201a     addwfc	0x1a, 0, 0        
00222a   1a00     xorwf	0, 0x1, 0          
00222c   0020     dw	0x20  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_init:
00222e   219e     addwfc	0x9e, 0, 0x1      	DB	LOW(_ep_init_cfg0), HIGH(_ep_init_cfg0), UPPER(_ep_init_cfg0), LOW(_ep_init_cfg0), HIGH(_ep_init_cfg0), UPPER(_ep_init_cfg0), LOW(_ep_init_cfg1), HIGH(_ep_init_cfg1), UPPER(_ep_init_cfg1), LOW(_ep_init_cfg2), HIGH(_ep_init_cfg2), UPPER(_ep_init_cfg2)
002230   9e00     bcf	0, 0x7, 0            
002232   0021     dw	0x21  ;unknown opcode 
002234   21ce     addwfc	0xce, 0, 0x1      
002236   fe00     dw	0xfe00  ;unknown opcode 
002238   0021     dw	0x21  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_in_cfg0:
00223a   0032     dw	0x32  ;unknown opcode 	DB	LOW(_ep0_in), HIGH(_ep0_in), UPPER(_ep0_in), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00223c   1a00     xorwf	0, 0x1, 0          
00223e   0020     dw	0x20  ;unknown opcode 
002240   201a     addwfc	0x1a, 0, 0        
002242   1a00     xorwf	0, 0x1, 0          
002244   0020     dw	0x20  ;unknown opcode 
002246   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002248   1a00     xorwf	0, 0x1, 0          
00224a   0020     dw	0x20  ;unknown opcode 
00224c   201a     addwfc	0x1a, 0, 0        
00224e   1a00     xorwf	0, 0x1, 0          
002250   0020     dw	0x20  ;unknown opcode 
002252   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002254   1a00     xorwf	0, 0x1, 0          
002256   0020     dw	0x20  ;unknown opcode 
002258   201a     addwfc	0x1a, 0, 0        
00225a   1a00     xorwf	0, 0x1, 0          
00225c   0020     dw	0x20  ;unknown opcode 
00225e   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002260   1a00     xorwf	0, 0x1, 0          
002262   0020     dw	0x20  ;unknown opcode 
002264   201a     addwfc	0x1a, 0, 0        
002266   1a00     xorwf	0, 0x1, 0          
002268   0020     dw	0x20  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_in_cfg1:
00226a   0032     dw	0x32  ;unknown opcode 	DB	LOW(_ep0_in), HIGH(_ep0_in), UPPER(_ep0_in), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_ep2_in), HIGH(_ep2_in), UPPER(_ep2_in), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00226c   1a00     xorwf	0, 0x1, 0          
00226e   0020     dw	0x20  ;unknown opcode 
002270   0046     dw	0x46  ;unknown opcode 
002272   1a00     xorwf	0, 0x1, 0          
002274   0020     dw	0x20  ;unknown opcode 
002276   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002278   1a00     xorwf	0, 0x1, 0          
00227a   0020     dw	0x20  ;unknown opcode 
00227c   201a     addwfc	0x1a, 0, 0        
00227e   1a00     xorwf	0, 0x1, 0          
002280   0020     dw	0x20  ;unknown opcode 
002282   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002284   1a00     xorwf	0, 0x1, 0          
002286   0020     dw	0x20  ;unknown opcode 
002288   201a     addwfc	0x1a, 0, 0        
00228a   1a00     xorwf	0, 0x1, 0          
00228c   0020     dw	0x20  ;unknown opcode 
00228e   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002290   1a00     xorwf	0, 0x1, 0          
002292   0020     dw	0x20  ;unknown opcode 
002294   201a     addwfc	0x1a, 0, 0        
002296   1a00     xorwf	0, 0x1, 0          
002298   0020     dw	0x20  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_in_cfg2:
00229a   0032     dw	0x32  ;unknown opcode 	DB	LOW(_ep0_in), HIGH(_ep0_in), UPPER(_ep0_in), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_my_ep2_in), HIGH(_my_ep2_in), UPPER(_my_ep2_in), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00229c   1a00     xorwf	0, 0x1, 0          
00229e   0020     dw	0x20  ;unknown opcode 
0022a0   2a0e     incf	0xe, 0x1, 0         
0022a2   1a00     xorwf	0, 0x1, 0          
0022a4   0020     dw	0x20  ;unknown opcode 
0022a6   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0022a8   1a00     xorwf	0, 0x1, 0          
0022aa   0020     dw	0x20  ;unknown opcode 
0022ac   201a     addwfc	0x1a, 0, 0        
0022ae   1a00     xorwf	0, 0x1, 0          
0022b0   0020     dw	0x20  ;unknown opcode 
0022b2   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0022b4   1a00     xorwf	0, 0x1, 0          
0022b6   0020     dw	0x20  ;unknown opcode 
0022b8   201a     addwfc	0x1a, 0, 0        
0022ba   1a00     xorwf	0, 0x1, 0          
0022bc   0020     dw	0x20  ;unknown opcode 
0022be   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0022c0   1a00     xorwf	0, 0x1, 0          
0022c2   0020     dw	0x20  ;unknown opcode 
0022c4   201a     addwfc	0x1a, 0, 0        
0022c6   1a00     xorwf	0, 0x1, 0          
0022c8   0020     dw	0x20  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_in:
0022ca   223a     addwfc	0x3a, 0x1, 0      	DB	LOW(_ep_in_cfg0), HIGH(_ep_in_cfg0), UPPER(_ep_in_cfg0), LOW(_ep_in_cfg0), HIGH(_ep_in_cfg0), UPPER(_ep_in_cfg0), LOW(_ep_in_cfg1), HIGH(_ep_in_cfg1), UPPER(_ep_in_cfg1), LOW(_ep_in_cfg2), HIGH(_ep_in_cfg2), UPPER(_ep_in_cfg2)
0022cc   3a00     swapf	0, 0x1, 0          
0022ce   0022     dw	0x22  ;unknown opcode 
0022d0   226a     addwfc	0x6a, 0x1, 0      
0022d2   9a00     bcf	0, 0x5, 0            
0022d4   0022     dw	0x22  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_out_cfg0:
0022d6   002e     dw	0x2e  ;unknown opcode 	DB	LOW(_ep0_init), HIGH(_ep0_init), UPPER(_ep0_init), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0022d8   1a00     xorwf	0, 0x1, 0          
0022da   0020     dw	0x20  ;unknown opcode 
0022dc   201a     addwfc	0x1a, 0, 0        
0022de   1a00     xorwf	0, 0x1, 0          
0022e0   0020     dw	0x20  ;unknown opcode 
0022e2   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0022e4   1a00     xorwf	0, 0x1, 0          
0022e6   0020     dw	0x20  ;unknown opcode 
0022e8   201a     addwfc	0x1a, 0, 0        
0022ea   1a00     xorwf	0, 0x1, 0          
0022ec   0020     dw	0x20  ;unknown opcode 
0022ee   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0022f0   1a00     xorwf	0, 0x1, 0          
0022f2   0020     dw	0x20  ;unknown opcode 
0022f4   201a     addwfc	0x1a, 0, 0        
0022f6   1a00     xorwf	0, 0x1, 0          
0022f8   0020     dw	0x20  ;unknown opcode 
0022fa   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0022fc   1a00     xorwf	0, 0x1, 0          
0022fe   0020     dw	0x20  ;unknown opcode 
002300   201a     addwfc	0x1a, 0, 0        
002302   1a00     xorwf	0, 0x1, 0          
002304   0020     dw	0x20  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_out_cfg1:
002306   002e     dw	0x2e  ;unknown opcode 	DB	LOW(_ep0_init), HIGH(_ep0_init), UPPER(_ep0_init), LOW(_ep1_out), HIGH(_ep1_out), UPPER(_ep1_out), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002308   3e00     incfsz	0, 0x1, 0         
00230a   0000     nop                      
00230c   201a     addwfc	0x1a, 0, 0        
00230e   1a00     xorwf	0, 0x1, 0          
002310   0020     dw	0x20  ;unknown opcode 
002312   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002314   1a00     xorwf	0, 0x1, 0          
002316   0020     dw	0x20  ;unknown opcode 
002318   201a     addwfc	0x1a, 0, 0        
00231a   1a00     xorwf	0, 0x1, 0          
00231c   0020     dw	0x20  ;unknown opcode 
00231e   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002320   1a00     xorwf	0, 0x1, 0          
002322   0020     dw	0x20  ;unknown opcode 
002324   201a     addwfc	0x1a, 0, 0        
002326   1a00     xorwf	0, 0x1, 0          
002328   0020     dw	0x20  ;unknown opcode 
00232a   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00232c   1a00     xorwf	0, 0x1, 0          
00232e   0020     dw	0x20  ;unknown opcode 
002330   201a     addwfc	0x1a, 0, 0        
002332   1a00     xorwf	0, 0x1, 0          
002334   0020     dw	0x20  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_out_cfg2:
002336   002e     dw	0x2e  ;unknown opcode 	DB	LOW(_ep0_init), HIGH(_ep0_init), UPPER(_ep0_init), LOW(_my_ep1_out), HIGH(_my_ep1_out), UPPER(_my_ep1_out), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002338   ae00     btfss	0, 0x7, 0          
00233a   0023     dw	0x23  ;unknown opcode 
00233c   201a     addwfc	0x1a, 0, 0        
00233e   1a00     xorwf	0, 0x1, 0          
002340   0020     dw	0x20  ;unknown opcode 
002342   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002344   1a00     xorwf	0, 0x1, 0          
002346   0020     dw	0x20  ;unknown opcode 
002348   201a     addwfc	0x1a, 0, 0        
00234a   1a00     xorwf	0, 0x1, 0          
00234c   0020     dw	0x20  ;unknown opcode 
00234e   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002350   1a00     xorwf	0, 0x1, 0          
002352   0020     dw	0x20  ;unknown opcode 
002354   201a     addwfc	0x1a, 0, 0        
002356   1a00     xorwf	0, 0x1, 0          
002358   0020     dw	0x20  ;unknown opcode 
00235a   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00235c   1a00     xorwf	0, 0x1, 0          
00235e   0020     dw	0x20  ;unknown opcode 
002360   201a     addwfc	0x1a, 0, 0        
002362   1a00     xorwf	0, 0x1, 0          
002364   0020     dw	0x20  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_out:
002366   22d6     addwfc	0xd6, 0x1, 0      	DB	LOW(_ep_out_cfg0), HIGH(_ep_out_cfg0), UPPER(_ep_out_cfg0), LOW(_ep_out_cfg0), HIGH(_ep_out_cfg0), UPPER(_ep_out_cfg0), LOW(_ep_out_cfg1), HIGH(_ep_out_cfg1), UPPER(_ep_out_cfg1), LOW(_ep_out_cfg2), HIGH(_ep_out_cfg2), UPPER(_ep_out_cfg2)
002368   d600     bra	0x1f6a               
00236a   0022     dw	0x22  ;unknown opcode 
00236c   2306     addwfc	0x6, 0x1, 0x1     
00236e   3600     rlcf	0, 0x1, 0           
002370   0023     dw	0x23  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_setup_cfg0:
002372   0036     dw	0x36  ;unknown opcode 	DB	LOW(_ep0_setup), HIGH(_ep0_setup), UPPER(_ep0_setup), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002374   1a00     xorwf	0, 0x1, 0          
002376   0020     dw	0x20  ;unknown opcode 
002378   201a     addwfc	0x1a, 0, 0        
00237a   1a00     xorwf	0, 0x1, 0          
00237c   0020     dw	0x20  ;unknown opcode 
00237e   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002380   1a00     xorwf	0, 0x1, 0          
002382   0020     dw	0x20  ;unknown opcode 
002384   201a     addwfc	0x1a, 0, 0        
002386   1a00     xorwf	0, 0x1, 0          
002388   0020     dw	0x20  ;unknown opcode 
00238a   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00238c   1a00     xorwf	0, 0x1, 0          
00238e   0020     dw	0x20  ;unknown opcode 
002390   201a     addwfc	0x1a, 0, 0        
002392   1a00     xorwf	0, 0x1, 0          
002394   0020     dw	0x20  ;unknown opcode 
002396   201a     addwfc	0x1a, 0, 0        	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
002398   1a00     xorwf	0, 0x1, 0          
00239a   0020     dw	0x20  ;unknown opcode 
00239c   201a     addwfc	0x1a, 0, 0        
00239e   1a00     xorwf	0, 0x1, 0          
0023a0   0020     dw	0x20  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _ep_setup:
0023a2   2372     addwfc	0x72, 0x1, 0x1    	DB	LOW(_ep_setup_cfg0), HIGH(_ep_setup_cfg0), UPPER(_ep_setup_cfg0), LOW(_ep_setup_cfg0), HIGH(_ep_setup_cfg0), UPPER(_ep_setup_cfg0), LOW(_ep_setup_cfg0), HIGH(_ep_setup_cfg0), UPPER(_ep_setup_cfg0), LOW(_ep_setup_cfg0), HIGH(_ep_setup_cfg0), UPPER(_ep_setup_cfg0)
0023a4   7200     btg	0, 0x1, 0            
0023a6   0023     dw	0x23  ;unknown opcode 
0023a8   2372     addwfc	0x72, 0x1, 0x1    
0023aa   7200     btg	0, 0x1, 0            
0023ac   0023     dw	0x23  ;unknown opcode 
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  142 (0x008e) bytes ( 0.11%)
                                           ;           	   71 (0x0047) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue May 19 21:44:04 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _i
                                           	global _checksum
                                           	global _my_ep1_init
                                           	global _my_ep1_out
                                           	global _ep1_OutBuffer
                                           	global _tetedelecture
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern __gptrput1
                                           	extern __gptrget1
                                           	extern _ep2_num_bytes_to_send
                                           	extern _ep2_source_data
                                           	extern _an_data
                                           	extern _mydata
                                           	extern _ep_bdt
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _etat_moteur
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _my_prepare_ep2_in
                                           	extern _set_servo
                                           	extern _ordre_moteur
                                           	extern _device_descriptor
                                           	extern _configuration_descriptor
                                           	extern _string_descriptor
                                           	extern _str0
                                           	extern _str1
                                           	extern _str2
                                           	extern _str3
                                           	extern _ep_init
                                           	extern _ep_in
                                           	extern _ep_out
                                           	extern _ep_setup
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PRODL	equ	0xff3
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           
                                           udata_my_ep1_0	udata
                                           _checksum	res	1
                                           
                                           udata_my_ep1_1	udata
                                           _i	res	1
                                           
                                           udata_my_ep1_2	udata
                                           _tetedelecture	res	1
                                           
                                           udata_my_ep1_3	udata
                                           iTemp0	res	1
                                           
                                           
                                           ustat_my_ep1_00	udata	0X0500
                                           _ep1_OutBuffer	res	64
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_my_ep1__my_ep1_out	code
                                           _my_ep1_out:
                                           ;	.line	29; my_ep1.c	void my_ep1_out(void)
0023ae   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0023b0   ffe5
0023b2   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0023b4   ffe5
0023b6   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0023b8   ffe5
0023ba   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0023bc   ffe5
0023be   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0023c0   ffe5
0023c2   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
0023c4   ffe5
                                           ;	.line	31; my_ep1.c	if(EP_OUT_BD(1).Cnt >= 1)
0023c6   c409     movff	0x409, 0x15a       	MOVFF	(_ep_bdt + 9), (iTemp0 + 1)
0023c8   f15a
0023ca   0e01     movlw	0x1                	MOVLW	0x01
0023cc   0101     movlb	0x1                	BANKSEL	(iTemp0 + 1)
0023ce   5d5a     subwf	0x5a, 0, 0x1       	SUBWF	(iTemp0 + 1), W, B
0023d0   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
0023d2   d14b     bra	0x266a               	BRA	_00124_DS_
                                           ;	.line	33; my_ep1.c	ep2_num_bytes_to_send = 1;
0023d4   0e01     movlw	0x1                	MOVLW	0x01
0023d6   0101     movlb	0x1                	BANKSEL	_ep2_num_bytes_to_send
0023d8   6f52     movwf	0x52, 0x1          	MOVWF	_ep2_num_bytes_to_send, B
                                           ; removed redundant BANKSEL
0023da   6b53     clrf	0x53, 0x1           	CLRF	(_ep2_num_bytes_to_send + 1), B
                                           ;	.line	34; my_ep1.c	ep2_source_data = mydata;
0023dc   c149     movff	0x149, 0x14c       	MOVFF	_mydata, _ep2_source_data
0023de   f14c
0023e0   c14a     movff	0x14a, 0x14d       	MOVFF	(_mydata + 1), (_ep2_source_data + 1)
0023e2   f14d
0023e4   c14b     movff	0x14b, 0x14e       	MOVFF	(_mydata + 2), (_ep2_source_data + 2)
0023e6   f14e
                                           ;	.line	35; my_ep1.c	mydata[0] =  RECU;
0023e8   c149     movff	0x149, 0           	MOVFF	_mydata, r0x00
0023ea   f000
0023ec   c14a     movff	0x14a, 0x1         	MOVFF	(_mydata + 1), r0x01
0023ee   f001
0023f0   c14b     movff	0x14b, 0x2         	MOVFF	(_mydata + 2), r0x02
0023f2   f002
0023f4   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0023f6   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0023f8   ffe9
0023fa   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0023fc   fff3
0023fe   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002400   ec31     call	0x62, 0             	CALL	__gptrput1
002402   f000
                                           ;	.line	36; my_ep1.c	tetedelecture = 1;
002404   0e01     movlw	0x1                	MOVLW	0x01
002406   0101     movlb	0x1                	BANKSEL	_tetedelecture
002408   6f58     movwf	0x58, 0x1          	MOVWF	_tetedelecture, B
00240a   0105     movlb	0x5                	BANKSEL	_ep1_OutBuffer
                                           ;	.line	38; my_ep1.c	if(ep1_OutBuffer[0] & ANALOGS)
00240c   af00     btfss	0, 0x7, 0x1        	BTFSS	_ep1_OutBuffer, 7, B
00240e   d019     bra	0x2442               	BRA	_00110_DS_
                                           ;	.line	40; my_ep1.c	ep2_num_bytes_to_send += 2 * NB_ANALOGS;
002410   0e09     movlw	0x9                	MOVLW	0x09
002412   0101     movlb	0x1                	BANKSEL	_ep2_num_bytes_to_send
002414   6f52     movwf	0x52, 0x1          	MOVWF	_ep2_num_bytes_to_send, B
                                           ; removed redundant BANKSEL
002416   6b53     clrf	0x53, 0x1           	CLRF	(_ep2_num_bytes_to_send + 1), B
                                           ;	.line	41; my_ep1.c	ep2_source_data = an_data;
002418   0e01     movlw	0x1                	MOVLW	HIGH(_an_data)
00241a   0101     movlb	0x1                	BANKSEL	(_ep2_source_data + 1)
00241c   6f4d     movwf	0x4d, 0x1          	MOVWF	(_ep2_source_data + 1), B
00241e   0e00     movlw	0                  	MOVLW	LOW(_an_data)
                                           ; removed redundant BANKSEL
002420   6f4c     movwf	0x4c, 0x1          	MOVWF	_ep2_source_data, B
002422   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
002424   6f4e     movwf	0x4e, 0x1          	MOVWF	(_ep2_source_data + 2), B
                                           ;	.line	42; my_ep1.c	ep2_source_data[0] = ANALOGS | RECU;
002426   c14c     movff	0x14c, 0           	MOVFF	_ep2_source_data, r0x00
002428   f000
00242a   c14d     movff	0x14d, 0x1         	MOVFF	(_ep2_source_data + 1), r0x01
00242c   f001
00242e   c14e     movff	0x14e, 0x2         	MOVFF	(_ep2_source_data + 2), r0x02
002430   f002
002432   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002434   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
002436   ffe9
002438   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
00243a   fff3
00243c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00243e   ec31     call	0x62, 0             	CALL	__gptrput1
002440   f000
                                           _00110_DS_:
002442   0105     movlb	0x5                	BANKSEL	_ep1_OutBuffer
                                           ;	.line	44; my_ep1.c	if(ep1_OutBuffer[0] & DIGITALS)
002444   ad00     btfss	0, 0x6, 0x1        	BTFSS	_ep1_OutBuffer, 6, B
002446   d03a     bra	0x24bc               	BRA	_00112_DS_
                                           ;	.line	46; my_ep1.c	ep2_source_data[ep2_num_bytes_to_send++] = PORTB & 0xEF;
002448   c152     movff	0x152, 0           	MOVFF	_ep2_num_bytes_to_send, r0x00
00244a   f000
00244c   c153     movff	0x153, 0x1         	MOVFF	(_ep2_num_bytes_to_send + 1), r0x01
00244e   f001
002450   0101     movlb	0x1                	BANKSEL	_ep2_num_bytes_to_send
002452   2b52     incf	0x52, 0x1, 0x1      	INCF	_ep2_num_bytes_to_send, F, B
002454   e301     bnc	0x2458               	BNC	_10109_DS_
                                           ; removed redundant BANKSEL
002456   2b53     incf	0x53, 0x1, 0x1      	INCF	(_ep2_num_bytes_to_send + 1), F, B
                                           _10109_DS_:
002458   0101     movlb	0x1                	BANKSEL	_ep2_source_data
00245a   514c     movf	0x4c, 0, 0x1        	MOVF	_ep2_source_data, W, B
00245c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
00245e   514d     movf	0x4d, 0, 0x1        	MOVF	(_ep2_source_data + 1), W, B
002460   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ; removed redundant BANKSEL
002462   514e     movf	0x4e, 0, 0x1        	MOVF	(_ep2_source_data + 2), W, B
002464   6a02     clrf	0x2, 0              	CLRF	r0x02
002466   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002468   0eef     movlw	0xef               	MOVLW	0xef
00246a   1481     andwf	0x81, 0, 0         	ANDWF	_PORTB, W
00246c   6e03     movwf	0x3, 0             	MOVWF	r0x03
00246e   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002470   ffe5
002472   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
002474   ffe9
002476   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
002478   fff3
00247a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00247c   ec31     call	0x62, 0             	CALL	__gptrput1
00247e   f000
                                           ;	.line	47; my_ep1.c	ep2_source_data[0] |= DIGITALS;
002480   c14c     movff	0x14c, 0           	MOVFF	_ep2_source_data, r0x00
002482   f000
002484   c14d     movff	0x14d, 0x1         	MOVFF	(_ep2_source_data + 1), r0x01
002486   f001
002488   c14e     movff	0x14e, 0x2         	MOVFF	(_ep2_source_data + 2), r0x02
00248a   f002
00248c   c14c     movff	0x14c, 0x3         	MOVFF	_ep2_source_data, r0x03
00248e   f003
002490   c14d     movff	0x14d, 0x4         	MOVFF	(_ep2_source_data + 1), r0x04
002492   f004
002494   c14e     movff	0x14e, 0x5         	MOVFF	(_ep2_source_data + 2), r0x05
002496   f005
002498   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
00249a   ffe9
00249c   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
00249e   fff3
0024a0   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0024a2   ec29     call	0x52, 0             	CALL	__gptrget1
0024a4   f000
0024a6   6e03     movwf	0x3, 0             	MOVWF	r0x03
0024a8   8c03     bsf	0x3, 0x6, 0          	BSF	r0x03, 6
0024aa   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0024ac   ffe5
0024ae   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0024b0   ffe9
0024b2   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0024b4   fff3
0024b6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0024b8   ec31     call	0x62, 0             	CALL	__gptrput1
0024ba   f000
                                           _00112_DS_:
0024bc   0105     movlb	0x5                	BANKSEL	_ep1_OutBuffer
                                           ;	.line	49; my_ep1.c	if(ep1_OutBuffer[0] & SERVO)
0024be   a900     btfss	0, 0x4, 0x1        	BTFSS	_ep1_OutBuffer, 4, B
0024c0   d04a     bra	0x2556               	BRA	_00117_DS_
                                           ; removed redundant BANKSEL
                                           ;	.line	51; my_ep1.c	if(set_servo(0, ep1_OutBuffer[tetedelecture]))
0024c2   5101     movf	0x1, 0, 0x1         	MOVF	(_ep1_OutBuffer + 1), W, B
0024c4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0024c6   0e00     movlw	0                  	MOVLW	0x00
0024c8   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0024ca   ec1d     call	0x2c3a, 0           	CALL	_set_servo
0024cc   f016
0024ce   6e00     movwf	0, 0               	MOVWF	r0x00
0024d0   0e02     movlw	0x2                	MOVLW	0x02
0024d2   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0024d4   5000     movf	0, 0, 0             	MOVF	r0x00, W
0024d6   e01f     bz	0x2516                	BZ	_00114_DS_
                                           ;	.line	52; my_ep1.c	ep2_source_data[0] |= SERVO;
0024d8   c14c     movff	0x14c, 0           	MOVFF	_ep2_source_data, r0x00
0024da   f000
0024dc   c14d     movff	0x14d, 0x1         	MOVFF	(_ep2_source_data + 1), r0x01
0024de   f001
0024e0   c14e     movff	0x14e, 0x2         	MOVFF	(_ep2_source_data + 2), r0x02
0024e2   f002
0024e4   c14c     movff	0x14c, 0x3         	MOVFF	_ep2_source_data, r0x03
0024e6   f003
0024e8   c14d     movff	0x14d, 0x4         	MOVFF	(_ep2_source_data + 1), r0x04
0024ea   f004
0024ec   c14e     movff	0x14e, 0x5         	MOVFF	(_ep2_source_data + 2), r0x05
0024ee   f005
0024f0   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
0024f2   ffe9
0024f4   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
0024f6   fff3
0024f8   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0024fa   ec29     call	0x52, 0             	CALL	__gptrget1
0024fc   f000
0024fe   6e03     movwf	0x3, 0             	MOVWF	r0x03
002500   8803     bsf	0x3, 0x4, 0          	BSF	r0x03, 4
002502   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002504   ffe5
002506   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
002508   ffe9
00250a   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
00250c   fff3
00250e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002510   ec31     call	0x62, 0             	CALL	__gptrput1
002512   f000
002514   d01e     bra	0x2552               	BRA	_00115_DS_
                                           _00114_DS_:
                                           ;	.line	54; my_ep1.c	ep2_source_data[0] |= ERREUR_SERVO;
002516   c14c     movff	0x14c, 0           	MOVFF	_ep2_source_data, r0x00
002518   f000
00251a   c14d     movff	0x14d, 0x1         	MOVFF	(_ep2_source_data + 1), r0x01
00251c   f001
00251e   c14e     movff	0x14e, 0x2         	MOVFF	(_ep2_source_data + 2), r0x02
002520   f002
002522   c14c     movff	0x14c, 0x3         	MOVFF	_ep2_source_data, r0x03
002524   f003
002526   c14d     movff	0x14d, 0x4         	MOVFF	(_ep2_source_data + 1), r0x04
002528   f004
00252a   c14e     movff	0x14e, 0x5         	MOVFF	(_ep2_source_data + 2), r0x05
00252c   f005
00252e   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
002530   ffe9
002532   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
002534   fff3
002536   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
002538   ec29     call	0x52, 0             	CALL	__gptrget1
00253a   f000
00253c   6e03     movwf	0x3, 0             	MOVWF	r0x03
00253e   8203     bsf	0x3, 0x1, 0          	BSF	r0x03, 1
002540   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002542   ffe5
002544   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
002546   ffe9
002548   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
00254a   fff3
00254c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00254e   ec31     call	0x62, 0             	CALL	__gptrput1
002550   f000
                                           _00115_DS_:
002552   0101     movlb	0x1                	BANKSEL	_tetedelecture
                                           ;	.line	55; my_ep1.c	tetedelecture ++;
002554   2b58     incf	0x58, 0x1, 0x1      	INCF	_tetedelecture, F, B
                                           _00117_DS_:
002556   0105     movlb	0x5                	BANKSEL	_ep1_OutBuffer
                                           ;	.line	57; my_ep1.c	if(ep1_OutBuffer[0] & MOTEURS)
002558   ab00     btfss	0, 0x5, 0x1        	BTFSS	_ep1_OutBuffer, 5, B
00255a   d079     bra	0x264e               	BRA	_00119_DS_
                                           ;	.line	59; my_ep1.c	ordre_moteur(ep1_OutBuffer[tetedelecture],ep1_OutBuffer[tetedelecture+1]);
00255c   0e00     movlw	0                  	MOVLW	LOW(_ep1_OutBuffer)
00255e   0101     movlb	0x1                	BANKSEL	_tetedelecture
002560   2558     addwf	0x58, 0, 0x1       	ADDWF	_tetedelecture, W, B
002562   6e00     movwf	0, 0               	MOVWF	r0x00
002564   6a01     clrf	0x1, 0              	CLRF	r0x01
002566   0e05     movlw	0x5                	MOVLW	HIGH(_ep1_OutBuffer)
002568   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00256a   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
00256c   ffe9
00256e   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
002570   ffea
002572   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
002574   f000
                                           ; removed redundant BANKSEL
002576   2958     incf	0x58, 0, 0x1        	INCF	_tetedelecture, W, B
002578   6e01     movwf	0x1, 0             	MOVWF	r0x01
00257a   0e00     movlw	0                  	MOVLW	LOW(_ep1_OutBuffer)
00257c   2601     addwf	0x1, 0x1, 0        	ADDWF	r0x01, F
00257e   0e05     movlw	0x5                	MOVLW	HIGH(_ep1_OutBuffer)
002580   6a02     clrf	0x2, 0              	CLRF	r0x02
002582   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002584   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
002586   ffe9
002588   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
00258a   ffea
00258c   cfef     movff	0xfef, 0x1         	MOVFF	INDF0, r0x01
00258e   f001
002590   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
002592   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002594   5000     movf	0, 0, 0             	MOVF	r0x00, W
002596   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002598   ec4a     call	0x2694, 0           	CALL	_ordre_moteur
00259a   f013
00259c   0e02     movlw	0x2                	MOVLW	0x02
00259e   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0025a0   0101     movlb	0x1                	BANKSEL	_tetedelecture
                                           ;	.line	60; my_ep1.c	tetedelecture+=2;
0025a2   2b58     incf	0x58, 0x1, 0x1      	INCF	_tetedelecture, F, B
0025a4   2b58     incf	0x58, 0x1, 0x1      	INCF	_tetedelecture, F, B
                                           ;	.line	61; my_ep1.c	ep2_source_data[0] |= MOTEURS;
0025a6   c14c     movff	0x14c, 0           	MOVFF	_ep2_source_data, r0x00
0025a8   f000
0025aa   c14d     movff	0x14d, 0x1         	MOVFF	(_ep2_source_data + 1), r0x01
0025ac   f001
0025ae   c14e     movff	0x14e, 0x2         	MOVFF	(_ep2_source_data + 2), r0x02
0025b0   f002
0025b2   c14c     movff	0x14c, 0x3         	MOVFF	_ep2_source_data, r0x03
0025b4   f003
0025b6   c14d     movff	0x14d, 0x4         	MOVFF	(_ep2_source_data + 1), r0x04
0025b8   f004
0025ba   c14e     movff	0x14e, 0x5         	MOVFF	(_ep2_source_data + 2), r0x05
0025bc   f005
0025be   c003     movff	0x3, 0xfe9         	MOVFF	r0x03, FSR0L
0025c0   ffe9
0025c2   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
0025c4   fff3
0025c6   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
0025c8   ec29     call	0x52, 0             	CALL	__gptrget1
0025ca   f000
0025cc   6e03     movwf	0x3, 0             	MOVWF	r0x03
0025ce   8a03     bsf	0x3, 0x5, 0          	BSF	r0x03, 5
0025d0   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0025d2   ffe5
0025d4   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0025d6   ffe9
0025d8   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0025da   fff3
0025dc   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0025de   ec31     call	0x62, 0             	CALL	__gptrput1
0025e0   f000
                                           ;	.line	62; my_ep1.c	ep2_source_data[ep2_num_bytes_to_send++] = etat_moteur[0];
0025e2   c152     movff	0x152, 0           	MOVFF	_ep2_num_bytes_to_send, r0x00
0025e4   f000
0025e6   c153     movff	0x153, 0x1         	MOVFF	(_ep2_num_bytes_to_send + 1), r0x01
0025e8   f001
0025ea   0101     movlb	0x1                	BANKSEL	_ep2_num_bytes_to_send
0025ec   2b52     incf	0x52, 0x1, 0x1      	INCF	_ep2_num_bytes_to_send, F, B
0025ee   e301     bnc	0x25f2               	BNC	_20110_DS_
                                           ; removed redundant BANKSEL
0025f0   2b53     incf	0x53, 0x1, 0x1      	INCF	(_ep2_num_bytes_to_send + 1), F, B
                                           _20110_DS_:
0025f2   0101     movlb	0x1                	BANKSEL	_ep2_source_data
0025f4   514c     movf	0x4c, 0, 0x1        	MOVF	_ep2_source_data, W, B
0025f6   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0025f8   514d     movf	0x4d, 0, 0x1        	MOVF	(_ep2_source_data + 1), W, B
0025fa   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ; removed redundant BANKSEL
0025fc   514e     movf	0x4e, 0, 0x1        	MOVF	(_ep2_source_data + 2), W, B
0025fe   6a02     clrf	0x2, 0              	CLRF	r0x02
002600   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002602   c154     movff	0x154, 0x3         	MOVFF	_etat_moteur, r0x03
002604   f003
002606   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002608   ffe5
00260a   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
00260c   ffe9
00260e   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
002610   fff3
002612   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002614   ec31     call	0x62, 0             	CALL	__gptrput1
002616   f000
                                           ;	.line	63; my_ep1.c	ep2_source_data[ep2_num_bytes_to_send++] = etat_moteur[1];
002618   c152     movff	0x152, 0           	MOVFF	_ep2_num_bytes_to_send, r0x00
00261a   f000
00261c   c153     movff	0x153, 0x1         	MOVFF	(_ep2_num_bytes_to_send + 1), r0x01
00261e   f001
002620   0101     movlb	0x1                	BANKSEL	_ep2_num_bytes_to_send
002622   2b52     incf	0x52, 0x1, 0x1      	INCF	_ep2_num_bytes_to_send, F, B
002624   e301     bnc	0x2628               	BNC	_30111_DS_
                                           ; removed redundant BANKSEL
002626   2b53     incf	0x53, 0x1, 0x1      	INCF	(_ep2_num_bytes_to_send + 1), F, B
                                           _30111_DS_:
002628   0101     movlb	0x1                	BANKSEL	_ep2_source_data
00262a   514c     movf	0x4c, 0, 0x1        	MOVF	_ep2_source_data, W, B
00262c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
00262e   514d     movf	0x4d, 0, 0x1        	MOVF	(_ep2_source_data + 1), W, B
002630   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ; removed redundant BANKSEL
002632   514e     movf	0x4e, 0, 0x1        	MOVF	(_ep2_source_data + 2), W, B
002634   6a02     clrf	0x2, 0              	CLRF	r0x02
002636   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002638   c155     movff	0x155, 0x3         	MOVFF	(_etat_moteur + 1), r0x03
00263a   f003
00263c   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00263e   ffe5
002640   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
002642   ffe9
002644   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
002646   fff3
002648   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00264a   ec31     call	0x62, 0             	CALL	__gptrput1
00264c   f000
                                           _00119_DS_:
                                           ;	.line	67; my_ep1.c	my_prepare_ep2_in(); // Envoi
00264e   ec5a     call	0x2ab4, 0           	CALL	_my_prepare_ep2_in
002650   f015
                                           ;	.line	69; my_ep1.c	EP_OUT_BD(1).Cnt = MY_EP1_BUFFER_SIZE;
002652   0e40     movlw	0x40               	MOVLW	0x40
002654   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 9)
002656   6f09     movwf	0x9, 0x1           	MOVWF	(_ep_bdt + 9), B
                                           ; removed redundant BANKSEL
                                           ;	.line	70; my_ep1.c	if(EP_OUT_BD(1).Stat.DTS == 0)
002658   bd08     btfsc	0x8, 0x6, 0x1      	BTFSC	(_ep_bdt + 8), 6, B
00265a   d003     bra	0x2662               	BRA	_00121_DS_
                                           ;	.line	72; my_ep1.c	EP_OUT_BD(1).Stat.uc = BDS_USIE | BDS_DAT1 | BDS_DTSEN;
00265c   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
00265e   6f08     movwf	0x8, 0x1           	MOVWF	(_ep_bdt + 8), B
002660   d00c     bra	0x267a               	BRA	_00126_DS_
                                           _00121_DS_:
                                           ;	.line	76; my_ep1.c	EP_OUT_BD(1).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
002662   0e88     movlw	0x88               	MOVLW	0x88
002664   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 8)
002666   6f08     movwf	0x8, 0x1           	MOVWF	(_ep_bdt + 8), B
002668   d008     bra	0x267a               	BRA	_00126_DS_
                                           _00124_DS_:
                                           ;	.line	81; my_ep1.c	EP_OUT_BD(1).Cnt = MY_EP1_BUFFER_SIZE;
00266a   0e40     movlw	0x40               	MOVLW	0x40
00266c   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 9)
00266e   6f09     movwf	0x9, 0x1           	MOVWF	(_ep_bdt + 9), B
                                           ; removed redundant BANKSEL
                                           ;	.line	82; my_ep1.c	EP_OUT_BD(1).ADR = (uchar __data *)&ep1_OutBuffer;
002670   6b0a     clrf	0xa, 0x1            	CLRF	(_ep_bdt + 10), B
002672   0e05     movlw	0x5                	MOVLW	0x05
                                           ; removed redundant BANKSEL
002674   6f0b     movwf	0xb, 0x1           	MOVWF	(_ep_bdt + 11), B
                                           ;	.line	83; my_ep1.c	EP_OUT_BD(1).Stat.uc = BDS_USIE | BDS_BSTALL;
002676   0e84     movlw	0x84               	MOVLW	0x84
                                           ; removed redundant BANKSEL
002678   6f08     movwf	0x8, 0x1           	MOVWF	(_ep_bdt + 8), B
                                           _00126_DS_:
00267a   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
00267c   f005
00267e   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002680   f004
002682   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002684   f003
002686   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002688   f002
00268a   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00268c   f001
00268e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002690   f000
002692   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_my_ep1__my_ep1_init	code
                                           _my_ep1_init:
                                           ;	.line	23; my_ep1.c	EP_OUT_BD(1).Cnt = MY_EP1_BUFFER_SIZE;
002e76   0e40     movlw	0x40               	MOVLW	0x40
002e78   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 9)
002e7a   6f09     movwf	0x9, 0x1           	MOVWF	(_ep_bdt + 9), B
                                           ; removed redundant BANKSEL
                                           ;	.line	24; my_ep1.c	EP_OUT_BD(1).ADR = (uchar __data *)&ep1_OutBuffer;
002e7c   6b0a     clrf	0xa, 0x1            	CLRF	(_ep_bdt + 10), B
002e7e   0e05     movlw	0x5                	MOVLW	0x05
                                           ; removed redundant BANKSEL
002e80   6f0b     movwf	0xb, 0x1           	MOVWF	(_ep_bdt + 11), B
                                           ;	.line	25; my_ep1.c	EP_OUT_BD(1).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
002e82   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
002e84   6f08     movwf	0x8, 0x1           	MOVWF	(_ep_bdt + 8), B
                                           ;	.line	26; my_ep1.c	UEP1 = EPHSHK_EN | EPOUTEN_EN | EPCONDIS_EN;       // Init EP1 as an OUT EP
002e86   0e1c     movlw	0x1c               	MOVLW	0x1c
002e88   6e71     movwf	0x71, 0            	MOVWF	_UEP1
002e8a   0012     return	0                 	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  764 (0x02fc) bytes ( 0.58%)
                                           ;           	  382 (0x017e) words
                                           ; udata size:	   68 (0x0044) bytes ( 3.79%)
                                           ; access size:	    6 (0x0006) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue May 19 21:44:04 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _mydata
                                           	global _my_ep2_init
                                           	global _my_prepare_ep2_in
                                           	global _my_ep2_in
                                           	global _an_data
                                           	global _ep2_num_bytes_to_send
                                           	global _ep2_source_data
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _ep_bdt
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _fill_in_buffer
                                           	extern _device_descriptor
                                           	extern _configuration_descriptor
                                           	extern _string_descriptor
                                           	extern _str0
                                           	extern _str1
                                           	extern _str2
                                           	extern _str3
                                           	extern _ep_init
                                           	extern _ep_in
                                           	extern _ep_out
                                           	extern _ep_setup
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           
                                           udata_my_ep2_0	udata
                                           _last_send_was_null	res	1
                                           
                                           udata_my_ep2_1	udata
                                           _mydata	res	3
                                           
                                           udata_my_ep2_2	udata
                                           _an_data	res	64
                                           
                                           udata_my_ep2_3	udata
                                           _ep2_num_bytes_to_send	res	2
                                           
                                           udata_my_ep2_4	udata
                                           _ep2_source_data	res	3
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_my_ep2__my_ep2_in	code
                                           _my_ep2_in:
                                           ;	.line	51; my_ep2.c	void my_ep2_in(void)
002a0e   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002a10   ffe5
002a12   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002a14   ffe5
002a16   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002a18   ffe5
002a1a   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002a1c   ffe5
002a1e   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002a20   ffe5
002a22   0101     movlb	0x1                	BANKSEL	_ep2_num_bytes_to_send
                                           ;	.line	53; my_ep2.c	if((ep2_num_bytes_to_send == 0) && last_send_was_null)
002a24   5152     movf	0x52, 0, 0x1        	MOVF	_ep2_num_bytes_to_send, W, B
                                           ; removed redundant BANKSEL
002a26   1153     iorwf	0x53, 0, 0x1       	IORWF	(_ep2_num_bytes_to_send + 1), W, B
002a28   e104     bnz	0x2a32               	BNZ	_00122_DS_
                                           ; #	MOVF	_last_send_was_null, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00122_DS_
                                           ; #	GOTO	_00127_DS_
                                           ; #	MOVLW	0x00
                                           ; ;     peep 1 - test/jump to test/skip
002a2a   0101     movlb	0x1                	BANKSEL	_last_send_was_null
                                           ;	.line	57; my_ep2.c	return;
002a2c   515a     movf	0x5a, 0, 0x1        	MOVF	_last_send_was_null, W, B
                                           ;	.line	59; my_ep2.c	last_send_was_null = (ep2_num_bytes_to_send < MY_EP2_BUFFER_SIZE);
002a2e   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
002a30   d036     bra	0x2a9e               	BRA	_00127_DS_
                                           _00122_DS_:
002a32   0e00     movlw	0                  	MOVLW	0x00
002a34   0101     movlb	0x1                	BANKSEL	(_ep2_num_bytes_to_send + 1)
002a36   5d53     subwf	0x53, 0, 0x1       	SUBWF	(_ep2_num_bytes_to_send + 1), W, B
002a38   e102     bnz	0x2a3e               	BNZ	_00133_DS_
002a3a   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
002a3c   5d52     subwf	0x52, 0, 0x1       	SUBWF	_ep2_num_bytes_to_send, W, B
                                           _00133_DS_:
002a3e   70d8     btg	0xd8, 0, 0           	BTG	STATUS, 0
002a40   0101     movlb	0x1                	BANKSEL	_last_send_was_null
002a42   6b5a     clrf	0x5a, 0x1           	CLRF	_last_send_was_null, B
002a44   375a     rlcf	0x5a, 0x1, 0x1      	RLCF	_last_send_was_null, F, B
                                           ; #	MOVF	_ep2_num_bytes_to_send, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 9c - Removed redundant move
002a46   0101     movlb	0x1                	BANKSEL	_ep2_num_bytes_to_send
                                           ;	.line	60; my_ep2.c	EP_IN_BD(2).Cnt = ep2_num_bytes_to_send;
002a48   5152     movf	0x52, 0, 0x1        	MOVF	_ep2_num_bytes_to_send, W, B
002a4a   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 21)
002a4c   6f15     movwf	0x15, 0x1          	MOVWF	(_ep_bdt + 21), B
                                           ;	.line	61; my_ep2.c	fill_in_buffer(2, &ep2_source_data, MY_EP2_BUFFER_SIZE, &ep2_num_bytes_to_send);
002a4e   0e01     movlw	0x1                	MOVLW	HIGH(_ep2_source_data)
002a50   6e01     movwf	0x1, 0             	MOVWF	r0x01
002a52   0e4c     movlw	0x4c               	MOVLW	LOW(_ep2_source_data)
002a54   6e00     movwf	0, 0               	MOVWF	r0x00
002a56   0e80     movlw	0x80               	MOVLW	0x80
002a58   6e02     movwf	0x2, 0             	MOVWF	r0x02
002a5a   0e01     movlw	0x1                	MOVLW	HIGH(_ep2_num_bytes_to_send)
002a5c   6e04     movwf	0x4, 0             	MOVWF	r0x04
002a5e   0e52     movlw	0x52               	MOVLW	LOW(_ep2_num_bytes_to_send)
002a60   6e03     movwf	0x3, 0             	MOVWF	r0x03
002a62   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ; ;     peep 2 - Removed redundant move
002a64   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a66   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002a68   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a6a   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
002a6c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a6e   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002a70   0e40     movlw	0x40               	MOVLW	0x40
002a72   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a74   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002a76   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a78   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
002a7a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a7c   5000     movf	0, 0, 0             	MOVF	r0x00, W
002a7e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a80   0e02     movlw	0x2                	MOVLW	0x02
002a82   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002a84   ec15     call	0x2a, 0             	CALL	_fill_in_buffer
002a86   f000
002a88   0e09     movlw	0x9                	MOVLW	0x09
002a8a   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002a8c   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 20)
                                           ;	.line	62; my_ep2.c	if(EP_IN_BD(2).Stat.DTS == 0)
002a8e   bd14     btfsc	0x14, 0x6, 0x1     	BTFSC	(_ep_bdt + 20), 6, B
002a90   d003     bra	0x2a98               	BRA	_00125_DS_
                                           ;	.line	64; my_ep2.c	EP_IN_BD(2).Stat.uc = BDS_USIE | BDS_DAT1 | BDS_DTSEN;
002a92   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
002a94   6f14     movwf	0x14, 0x1          	MOVWF	(_ep_bdt + 20), B
002a96   d003     bra	0x2a9e               	BRA	_00127_DS_
                                           _00125_DS_:
                                           ;	.line	68; my_ep2.c	EP_IN_BD(2).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
002a98   0e88     movlw	0x88               	MOVLW	0x88
002a9a   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 20)
002a9c   6f14     movwf	0x14, 0x1          	MOVWF	(_ep_bdt + 20), B
                                           _00127_DS_:
002a9e   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002aa0   f004
002aa2   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002aa4   f003
002aa6   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002aa8   f002
002aaa   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002aac   f001
002aae   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002ab0   f000
002ab2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_my_ep2__my_prepare_ep2_in	code
                                           _my_prepare_ep2_in:
                                           ;	.line	35; my_ep2.c	void my_prepare_ep2_in(void)
002ab4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002ab6   ffe5
002ab8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002aba   ffe5
002abc   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002abe   ffe5
002ac0   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
002ac2   ffe5
002ac4   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
002ac6   ffe5
                                           ;	.line	37; my_ep2.c	last_send_was_null = (ep2_num_bytes_to_send < MY_EP2_BUFFER_SIZE);
002ac8   0e00     movlw	0                  	MOVLW	0x00
002aca   0101     movlb	0x1                	BANKSEL	(_ep2_num_bytes_to_send + 1)
002acc   5d53     subwf	0x53, 0, 0x1       	SUBWF	(_ep2_num_bytes_to_send + 1), W, B
002ace   e102     bnz	0x2ad4               	BNZ	_00116_DS_
002ad0   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
002ad2   5d52     subwf	0x52, 0, 0x1       	SUBWF	_ep2_num_bytes_to_send, W, B
                                           _00116_DS_:
002ad4   70d8     btg	0xd8, 0, 0           	BTG	STATUS, 0
002ad6   0101     movlb	0x1                	BANKSEL	_last_send_was_null
002ad8   6b5a     clrf	0x5a, 0x1           	CLRF	_last_send_was_null, B
002ada   375a     rlcf	0x5a, 0x1, 0x1      	RLCF	_last_send_was_null, F, B
                                           ; #	MOVF	_ep2_num_bytes_to_send, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 9c - Removed redundant move
002adc   0101     movlb	0x1                	BANKSEL	_ep2_num_bytes_to_send
                                           ;	.line	38; my_ep2.c	EP_IN_BD(2).Cnt = ep2_num_bytes_to_send;
002ade   5152     movf	0x52, 0, 0x1        	MOVF	_ep2_num_bytes_to_send, W, B
002ae0   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 21)
002ae2   6f15     movwf	0x15, 0x1          	MOVWF	(_ep_bdt + 21), B
                                           ;	.line	39; my_ep2.c	EP_IN_BD(2).ADR = (uchar __data *)&ep2_InBuffer;
002ae4   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
002ae6   6f16     movwf	0x16, 0x1          	MOVWF	(_ep_bdt + 22), B
002ae8   0e05     movlw	0x5                	MOVLW	0x05
                                           ; removed redundant BANKSEL
002aea   6f17     movwf	0x17, 0x1          	MOVWF	(_ep_bdt + 23), B
                                           ;	.line	40; my_ep2.c	fill_in_buffer(2, &ep2_source_data, MY_EP2_BUFFER_SIZE, &ep2_num_bytes_to_send);
002aec   0e01     movlw	0x1                	MOVLW	HIGH(_ep2_source_data)
002aee   6e01     movwf	0x1, 0             	MOVWF	r0x01
002af0   0e4c     movlw	0x4c               	MOVLW	LOW(_ep2_source_data)
002af2   6e00     movwf	0, 0               	MOVWF	r0x00
002af4   0e80     movlw	0x80               	MOVLW	0x80
002af6   6e02     movwf	0x2, 0             	MOVWF	r0x02
002af8   0e01     movlw	0x1                	MOVLW	HIGH(_ep2_num_bytes_to_send)
002afa   6e04     movwf	0x4, 0             	MOVWF	r0x04
002afc   0e52     movlw	0x52               	MOVLW	LOW(_ep2_num_bytes_to_send)
002afe   6e03     movwf	0x3, 0             	MOVWF	r0x03
002b00   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ; ;     peep 2 - Removed redundant move
002b02   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002b04   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
002b06   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002b08   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
002b0a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002b0c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
002b0e   0e40     movlw	0x40               	MOVLW	0x40
002b10   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002b12   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002b14   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002b16   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
002b18   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002b1a   5000     movf	0, 0, 0             	MOVF	r0x00, W
002b1c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002b1e   0e02     movlw	0x2                	MOVLW	0x02
002b20   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
002b22   ec15     call	0x2a, 0             	CALL	_fill_in_buffer
002b24   f000
002b26   0e09     movlw	0x9                	MOVLW	0x09
002b28   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
002b2a   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 20)
                                           ;	.line	41; my_ep2.c	if(EP_IN_BD(2).Stat.DTS == 0)
002b2c   bd14     btfsc	0x14, 0x6, 0x1     	BTFSC	(_ep_bdt + 20), 6, B
002b2e   d003     bra	0x2b36               	BRA	_00110_DS_
                                           ;	.line	43; my_ep2.c	EP_IN_BD(2).Stat.uc = BDS_USIE | BDS_DAT1 | BDS_DTSEN;
002b30   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
002b32   6f14     movwf	0x14, 0x1          	MOVWF	(_ep_bdt + 20), B
002b34   d003     bra	0x2b3c               	BRA	_00112_DS_
                                           _00110_DS_:
                                           ;	.line	47; my_ep2.c	EP_IN_BD(2).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
002b36   0e88     movlw	0x88               	MOVLW	0x88
002b38   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 20)
002b3a   6f14     movwf	0x14, 0x1          	MOVWF	(_ep_bdt + 20), B
                                           _00112_DS_:
002b3c   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
002b3e   f004
002b40   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
002b42   f003
002b44   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002b46   f002
002b48   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002b4a   f001
002b4c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002b4e   f000
002b50   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_my_ep2__my_ep2_init	code
                                           _my_ep2_init:
                                           ;	.line	30; my_ep2.c	mydata = &an_data[2 * NB_ANALOGS +1];
002e44   0e01     movlw	0x1                	MOVLW	HIGH(_an_data + 9)
002e46   0101     movlb	0x1                	BANKSEL	(_mydata + 1)
002e48   6f4a     movwf	0x4a, 0x1          	MOVWF	(_mydata + 1), B
002e4a   0e09     movlw	0x9                	MOVLW	LOW(_an_data + 9)
                                           ; removed redundant BANKSEL
002e4c   6f49     movwf	0x49, 0x1          	MOVWF	_mydata, B
002e4e   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
002e50   6f4b     movwf	0x4b, 0x1          	MOVWF	(_mydata + 2), B
                                           ;	.line	31; my_ep2.c	EP_IN_BD(2).Stat.uc = BDS_UCPU | BDS_DAT1 | BDS_DTSEN;
002e52   0e48     movlw	0x48               	MOVLW	0x48
002e54   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 20)
002e56   6f14     movwf	0x14, 0x1          	MOVWF	(_ep_bdt + 20), B
                                           ;	.line	32; my_ep2.c	UEP2 = EPHSHK_EN | EPINEN_EN | EPCONDIS_EN;       // Init EP2 as an IN EP
002e58   0e1a     movlw	0x1a               	MOVLW	0x1a
002e5a   6e72     movwf	0x72, 0            	MOVWF	_UEP2
002e5c   0012     return	0                 	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  350 (0x015e) bytes ( 0.27%)
                                           ;           	  175 (0x00af) words
                                           ; udata size:	   73 (0x0049) bytes ( 4.07%)
                                           ; access size:	    5 (0x0005) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue May 19 21:44:04 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _svo_order
                                           	global _next_event_svo
                                           	global _init_servos
                                           	global _set_servo
                                           	global _gestionservos_tmr2
                                           	global _gestionservos_tmr1
                                           	global _positions
                                           	global _change_svocmd
                                           	global _event_count
                                           	global _svo_event
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           
                                           udata_servos_0	udata
                                           _next_event_svo	res	1
                                           
                                           udata_servos_1	udata
                                           _svo_order	res	1
                                           
                                           udata_servos_2	udata
                                           _change_svocmd	res	1
                                           
                                           udata_servos_3	udata
                                           _positions	res	1
                                           
                                           udata_servos_4	udata
                                           _event_count	res	1
                                           
                                           udata_servos_5	udata
                                           _svo_event	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_servos__gestionservos_tmr1	code
                                           _gestionservos_tmr1:
002e04   0101     movlb	0x1                	BANKSEL	_change_svocmd
                                           ;	.line	51; servos.c	if(change_svocmd) // si Flag = 1 (ie si on a ordonne un changement de position)
002e06   515d     movf	0x5d, 0, 0x1        	MOVF	_change_svocmd, W, B
002e08   e006     bz	0x2e16                	BZ	_00124_DS_
002e0a   0101     movlb	0x1                	BANKSEL	_positions
                                           ;	.line	53; servos.c	svo_event[0] = positions[0];
002e0c   515e     movf	0x5e, 0, 0x1        	MOVF	_positions, W, B
002e0e   0101     movlb	0x1                	BANKSEL	_svo_event
002e10   6f60     movwf	0x60, 0x1          	MOVWF	_svo_event, B
002e12   0101     movlb	0x1                	BANKSEL	_change_svocmd
                                           ;	.line	54; servos.c	change_svocmd = 0; // Flag a 0
002e14   6b5d     clrf	0x5d, 0x1           	CLRF	_change_svocmd, B
                                           _00124_DS_:
002e16   0101     movlb	0x1                	BANKSEL	_event_count
                                           ;	.line	56; servos.c	event_count=0;
002e18   6b5f     clrf	0x5f, 0x1           	CLRF	_event_count, B
                                           ;	.line	57; servos.c	PIN_SVO0=1; // Mise a 1 des sorties
002e1a   8e83     bsf	0x83, 0x7, 0         	BSF	_PORTDbits, 7
                                           ;	.line	59; servos.c	PR2 = svo_event[0];
002e1c   c160     movff	0x160, 0xfcb       	MOVFF	_svo_event, _PR2
002e1e   ffcb
                                           ;	.line	60; servos.c	TMR2 = 0;
002e20   6acc     clrf	0xcc, 0             	CLRF	_TMR2
002e22   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_servos__gestionservos_tmr2	code
                                           _gestionservos_tmr2:
                                           ;	.line	36; servos.c	void gestionservos_tmr2(void) // 1 avant
002cea   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002cec   ffe5
002cee   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002cf0   ffe5
                                           ;	.line	38; servos.c	PIN_SVO0 = 0;
002cf2   9e83     bcf	0x83, 0x7, 0         	BCF	_PORTDbits, 7
002cf4   0101     movlb	0x1                	BANKSEL	_event_count
                                           ;	.line	40; servos.c	event_count++;  // On passe au prochain evenement
002cf6   2b5f     incf	0x5f, 0x1, 0x1      	INCF	_event_count, F, B
                                           ;	.line	42; servos.c	if(event_count<NB_SERVO)
002cf8   0e01     movlw	0x1                	MOVLW	0x01
                                           ; removed redundant BANKSEL
002cfa   5d5f     subwf	0x5f, 0, 0x1       	SUBWF	_event_count, W, B
002cfc   e20d     bc	0x2d18                	BC	_00118_DS_
                                           ;	.line	44; servos.c	PR2 = svo_event[event_count];
002cfe   0e60     movlw	0x60               	MOVLW	LOW(_svo_event)
                                           ; removed redundant BANKSEL
002d00   255f     addwf	0x5f, 0, 0x1       	ADDWF	_event_count, W, B
002d02   6e00     movwf	0, 0               	MOVWF	r0x00
002d04   6a01     clrf	0x1, 0              	CLRF	r0x01
002d06   0e01     movlw	0x1                	MOVLW	HIGH(_svo_event)
002d08   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
002d0a   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
002d0c   ffe9
002d0e   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
002d10   ffea
002d12   cfef     movff	0xfef, 0xfcb       	MOVFF	INDF0, _PR2
002d14   ffcb
                                           ;	.line	45; servos.c	TMR2 = 0;
002d16   6acc     clrf	0xcc, 0             	CLRF	_TMR2
                                           _00118_DS_:
002d18   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002d1a   f001
002d1c   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002d1e   f000
002d20   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_servos__set_servo	code
                                           _set_servo:
                                           ;	.line	25; servos.c	unsigned char set_servo(unsigned char servo_id, unsigned /*int*/ char position)
002c3a   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002c3c   ffe5
002c3e   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
002c40   ffd9
002c42   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002c44   ffe5
002c46   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002c48   ffe5
002c4a   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002c4c   ffe5
002c4e   0e02     movlw	0x2                	MOVLW	0x02
002c50   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
002c52   f000
002c54   0e03     movlw	0x3                	MOVLW	0x03
002c56   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
002c58   f001
                                           ;	.line	27; servos.c	if(servo_id<NB_SERVO)
002c5a   0e01     movlw	0x1                	MOVLW	0x01
002c5c   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
002c5e   e20f     bc	0x2c7e                	BC	_00110_DS_
                                           ;	.line	29; servos.c	positions[servo_id]=position; // changer position
002c60   0e5e     movlw	0x5e               	MOVLW	LOW(_positions)
002c62   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
002c64   0e01     movlw	0x1                	MOVLW	HIGH(_positions)
002c66   6a02     clrf	0x2, 0              	CLRF	r0x02
002c68   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002c6a   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
002c6c   ffe9
002c6e   c002     movff	0x2, 0xfea         	MOVFF	r0x02, FSR0H
002c70   ffea
002c72   c001     movff	0x1, 0xfef         	MOVFF	r0x01, INDF0
002c74   ffef
                                           ; #	MOVLW	0x01
                                           ; #	MOVWF	_change_svocmd, B
                                           ; #	MOVLW	0x01
                                           ; ;     peep 5 - Removed redundant move
                                           ;	.line	30; servos.c	change_svocmd = 1; // mise du Flag a 1
002c76   0e01     movlw	0x1                	MOVLW	0x01
002c78   0101     movlb	0x1                	BANKSEL	_change_svocmd
                                           ;	.line	31; servos.c	return 1;
002c7a   6f5d     movwf	0x5d, 0x1          	MOVWF	_change_svocmd, B
002c7c   d001     bra	0x2c80               	BRA	_00111_DS_
                                           _00110_DS_:
                                           ;	.line	33; servos.c	return 0;
002c7e   6ae8     clrf	0xe8, 0             	CLRF	WREG
                                           _00111_DS_:
002c80   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002c82   f002
002c84   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002c86   f001
002c88   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002c8a   f000
002c8c   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
002c8e   ffd9
002c90   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_servos__init_servos	code
                                           _init_servos:
                                           ;	.line	14; servos.c	PR2 = 0xFF; //periode overflow Timer2 = 256
002e24   68cb     setf	0xcb, 0             	SETF	_PR2
                                           ;	.line	15; servos.c	T2CON = 0x3F; // timer2 conf = 0 0111 1 11 : nU, postscaler 1:8, on, prescaler 1:16
002e26   0e3f     movlw	0x3f               	MOVLW	0x3f
002e28   6eca     movwf	0xca, 0            	MOVWF	_T2CON
                                           ;	.line	16; servos.c	T1CON = 0xA1; // timer1 conf = 1 0 10 0 0 0 1 : 16bits, vers proc = off, prescaler 1:4, oscillator off, Extclk input nU, internal clock, on
002e2a   0ea1     movlw	0xa1               	MOVLW	0xa1
002e2c   6ecd     movwf	0xcd, 0            	MOVWF	_T1CON
                                           ;	.line	17; servos.c	PIE1bits.TMR1IE = 1; //Interrupt Timer1
002e2e   809d     bsf	0x9d, 0, 0           	BSF	_PIE1bits, 0
                                           ;	.line	18; servos.c	PIE1bits.TMR2IE = 1; //Interrupt Timer2
002e30   829d     bsf	0x9d, 0x1, 0         	BSF	_PIE1bits, 1
                                           ;	.line	19; servos.c	positions[0]=POS_DEFAULT0;                // Positions par defaut
002e32   0e40     movlw	0x40               	MOVLW	0x40
002e34   0101     movlb	0x1                	BANKSEL	_positions
002e36   6f5e     movwf	0x5e, 0x1          	MOVWF	_positions, B
                                           ;	.line	20; servos.c	TRIS_SVO0 = 0;
002e38   9e95     bcf	0x95, 0x7, 0         	BCF	_TRISDbits, 7
                                           ;	.line	21; servos.c	change_svocmd = 1; // Flag de changement de position a 1
002e3a   0e01     movlw	0x1                	MOVLW	0x01
002e3c   0101     movlb	0x1                	BANKSEL	_change_svocmd
002e3e   6f5d     movwf	0x5d, 0x1          	MOVWF	_change_svocmd, B
                                           ;	.line	22; servos.c	TMR2 = 0;
002e40   6acc     clrf	0xcc, 0             	CLRF	_TMR2
002e42   0012     return	0                 	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  208 (0x00d0) bytes ( 0.16%)
                                           ;           	  104 (0x0068) words
                                           ; udata size:	    6 (0x0006) bytes ( 0.33%)
                                           ; access size:	    3 (0x0003) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue May 19 21:44:04 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _init_adconversion
                                           	global _maj_result
                                           	global _an
                                           	global _compteur_an
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern __gptrput1
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _ep2_num_bytes_to_send
                                           	extern _ep2_source_data
                                           	extern _an_data
                                           	extern _mydata
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           FSR0L	equ	0xfe9
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PRODL	equ	0xff3
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           
                                           udata_analogs_0	udata
                                           _compteur_an	res	1
                                           
                                           udata_analogs_1	udata
                                           _an	res	3
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_analogs__maj_result	code
                                           _maj_result:
                                           ;	.line	27; analogs.c	void maj_result(void)
002b52   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002b54   ffe5
002b56   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
002b58   ffe5
002b5a   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
002b5c   ffe5
002b5e   0101     movlb	0x1                	BANKSEL	_compteur_an
                                           ;	.line	29; analogs.c	an[compteur_an] = ADRESH;
002b60   5161     movf	0x61, 0, 0x1        	MOVF	_compteur_an, W, B
002b62   0101     movlb	0x1                	BANKSEL	_an
002b64   254f     addwf	0x4f, 0, 0x1       	ADDWF	_an, W, B
002b66   6e00     movwf	0, 0               	MOVWF	r0x00
002b68   6ae8     clrf	0xe8, 0             	CLRF	WREG
                                           ; removed redundant BANKSEL
002b6a   2150     addwfc	0x50, 0, 0x1      	ADDWFC	(_an + 1), W, B
002b6c   6e01     movwf	0x1, 0             	MOVWF	r0x01
002b6e   6ae8     clrf	0xe8, 0             	CLRF	WREG
                                           ; removed redundant BANKSEL
002b70   2151     addwfc	0x51, 0, 0x1      	ADDWFC	(_an + 2), W, B
002b72   cfc4     movff	0xfc4, 0xfe5       	MOVFF	_ADRESH, POSTDEC1
002b74   ffe5
002b76   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
002b78   ffe9
002b7a   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
002b7c   fff3
002b7e   ec31     call	0x62, 0             	CALL	__gptrput1
002b80   f000
                                           ;	.line	30; analogs.c	an[compteur_an + 1] = ADRESL;
002b82   c161     movff	0x161, 0           	MOVFF	_compteur_an, r0x00
002b84   f000
002b86   6a01     clrf	0x1, 0              	CLRF	r0x01
002b88   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
002b8a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
002b8c   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
002b8e   0101     movlb	0x1                	BANKSEL	_an
002b90   514f     movf	0x4f, 0, 0x1        	MOVF	_an, W, B
002b92   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
002b94   5150     movf	0x50, 0, 0x1        	MOVF	(_an + 1), W, B
002b96   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ; removed redundant BANKSEL
002b98   5151     movf	0x51, 0, 0x1        	MOVF	(_an + 2), W, B
002b9a   6a02     clrf	0x2, 0              	CLRF	r0x02
002b9c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
002b9e   6802     setf	0x2, 0              	SETF	r0x02
002ba0   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
002ba2   cfc3     movff	0xfc3, 0xfe5       	MOVFF	_ADRESL, POSTDEC1
002ba4   ffe5
002ba6   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
002ba8   ffe9
002baa   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
002bac   fff3
002bae   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002bb0   ec31     call	0x62, 0             	CALL	__gptrput1
002bb2   f000
002bb4   0101     movlb	0x1                	BANKSEL	_compteur_an
                                           ;	.line	31; analogs.c	compteur_an += 2;
002bb6   2b61     incf	0x61, 0x1, 0x1      	INCF	_compteur_an, F, B
002bb8   2b61     incf	0x61, 0x1, 0x1      	INCF	_compteur_an, F, B
                                           ;	.line	32; analogs.c	compteur_an %= 2 * NB_ANALOGS;
002bba   0e07     movlw	0x7                	MOVLW	0x07
                                           ; removed redundant BANKSEL
002bbc   1761     andwf	0x61, 0x1, 0x1     	ANDWF	_compteur_an, F, B
                                           ;	.line	33; analogs.c	ADCON0 = (compteur_an << 1) + 1;
002bbe   5161     movf	0x61, 0, 0x1        	MOVF	_compteur_an, W, B
002bc0   2561     addwf	0x61, 0, 0x1       	ADDWF	_compteur_an, W, B
002bc2   6e00     movwf	0, 0               	MOVWF	r0x00
002bc4   2800     incf	0, 0, 0             	INCF	r0x00, W
002bc6   6ec2     movwf	0xc2, 0            	MOVWF	_ADCON0
                                           ;	.line	34; analogs.c	ADCON0bits.GO = 1;
002bc8   82c2     bsf	0xc2, 0x1, 0         	BSF	_ADCON0bits, 1
002bca   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002bcc   f002
002bce   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002bd0   f001
002bd2   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002bd4   f000
002bd6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_analogs__init_adconversion	code
                                           _init_adconversion:
                                           ;	.line	13; analogs.c	OSCCON |= 0x80; // 10000000 : IDLEN = 1 : pas de SLEEP (pour AD conversion)
002d82   8ed3     bsf	0xd3, 0x7, 0         	BSF	_OSCCON, 7
                                           ;	.line	14; analogs.c	OSCCON &= 0xfc; // 11111100 : SCS = 0 : primary clock source (on ne sait jamais !)
002d84   0efc     movlw	0xfc               	MOVLW	0xfc
002d86   16d3     andwf	0xd3, 0x1, 0       	ANDWF	_OSCCON, F
                                           ;	.line	15; analogs.c	TRISA |= TRISA_CONF; // bons ports en input
002d88   0ecf     movlw	0xcf               	MOVLW	0xcf
002d8a   1292     iorwf	0x92, 0x1, 0       	IORWF	_TRISA, F
                                           ;	.line	17; analogs.c	ADCON1 = NB_DIG; // 00 0 0 xxxx : nU, Vref- = VSS, Vref+ = VDD, nb d'analogs
002d8c   0e0c     movlw	0xc                	MOVLW	0x0c
002d8e   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	18; analogs.c	ADCON0 = 0x00; // 00 0000 0 0 : nU, ANinput = AN0, idle, ADOFF
002d90   6ac2     clrf	0xc2, 0             	CLRF	_ADCON0
                                           ;	.line	19; analogs.c	ADCON2 = 0x2E; // 0 0 101 110 : left justified, nU, 12 Tac d'acquisition, freq de Fosc/64
002d92   0e2e     movlw	0x2e               	MOVLW	0x2e
002d94   6ec0     movwf	0xc0, 0            	MOVWF	_ADCON2
                                           ;	.line	20; analogs.c	ADCON0 |= 0x01; // xx xxxx x 1 : ADON
002d96   80c2     bsf	0xc2, 0, 0           	BSF	_ADCON0, 0
002d98   0101     movlb	0x1                	BANKSEL	_compteur_an
                                           ;	.line	21; analogs.c	compteur_an = 0;
002d9a   6b61     clrf	0x61, 0x1           	CLRF	_compteur_an, B
                                           ;	.line	22; analogs.c	PIE1bits.ADIE = 1;
002d9c   8c9d     bsf	0x9d, 0x6, 0         	BSF	_PIE1bits, 6
                                           ;	.line	23; analogs.c	an = &(an_data[1]);
002d9e   0e01     movlw	0x1                	MOVLW	HIGH(_an_data + 1)
002da0   0101     movlb	0x1                	BANKSEL	(_an + 1)
002da2   6f50     movwf	0x50, 0x1          	MOVWF	(_an + 1), B
002da4   0e01     movlw	0x1                	MOVLW	LOW(_an_data + 1)
                                           ; removed redundant BANKSEL
002da6   6f4f     movwf	0x4f, 0x1          	MOVWF	_an, B
002da8   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
002daa   6f51     movwf	0x51, 0x1          	MOVWF	(_an + 2), B
                                           ;	.line	24; analogs.c	ADCON0bits.GO = 1; //commence la conversion
002dac   82c2     bsf	0xc2, 0x1, 0         	BSF	_ADCON0bits, 1
002dae   0012     return	0                 	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  180 (0x00b4) bytes ( 0.14%)
                                           ;           	   90 (0x005a) words
                                           ; udata size:	    4 (0x0004) bytes ( 0.22%)
                                           ; access size:	    3 (0x0003) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Wed May 20 17:01:05 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _init_moteursetjack
                                           	global _ordre_moteur
                                           	global _moteursetjack_ints_RB_bas
                                           	global _moteursetjack_ints_RB_haut
                                           	global _moteursetjack_ints_INT0
                                           	global _moteursetjack_ints_INT1
                                           	global _moteursetjack_ints_INT2
                                           	global _moteursetjack_ints_tmr0
                                           	global _depart
                                           	global _ticoutac
                                           	global _mot1_phase
                                           	global _mot1_sens
                                           	global _etat_moteur
                                           	global _mot1_position
                                           	global _mot2_position
                                           	global _mot1_pos_visee
                                           	global _mot2_pos_visee
                                           	global _compteur_mot
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _ep2_num_bytes_to_send
                                           	extern _ep2_source_data
                                           	extern _an_data
                                           	extern _mydata
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           WREG	equ	0xfe8
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODH	equ	0xff4
                                           
                                           
                                           	idata
                                           _depart	db	0x00
                                           _ticoutac	db	0x00
                                           _mot1_sens	db	0x00
                                           _mot1_position	db	0x00
                                           _mot2_position	db	0x00
                                           _mot1_pos_visee	db	0x00
                                           _mot2_pos_visee	db	0x00
                                           _compteur_mot	db	0x00, 0x00
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           
                                           udata_moteursetjack_0	udata
                                           _etat_moteur	res	2
                                           
                                           udata_moteursetjack_1	udata
                                           _mot1_phase	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_moteursetjack__moteursetjack_ints_tmr0	code
                                           _moteursetjack_ints_tmr0:
                                           ;	.line	192; moteursetjack.c	void moteursetjack_ints_tmr0(void)
0028a2   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0028a4   ffe5
0028a6   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0028a8   ffe5
0028aa   0101     movlb	0x1                	BANKSEL	_depart
                                           ;	.line	194; moteursetjack.c	if((!depart)&&(etat_moteur[0] & ACTIV_MOTEUR_1))
0028ac   5140     movf	0x40, 0, 0x1        	MOVF	_depart, W, B
0028ae   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
0028b0   d09e     bra	0x29ee               	BRA	_00240_DS_
0028b2   c154     movff	0x154, 0           	MOVFF	_etat_moteur, r0x00
0028b4   f000
0028b6   ae00     btfss	0, 0x7, 0          	BTFSS	r0x00, 7
0028b8   d09a     bra	0x29ee               	BRA	_00240_DS_
0028ba   0101     movlb	0x1                	BANKSEL	_ticoutac
                                           ;	.line	196; moteursetjack.c	if(ticoutac)
0028bc   5141     movf	0x41, 0, 0x1        	MOVF	_ticoutac, W, B
0028be   e026     bz	0x290c                	BZ	_00224_DS_
                                           ;	.line	198; moteursetjack.c	PIN_MOT1_1 = !PIN_MOT1_1;
0028c0   6a01     clrf	0x1, 0              	CLRF	r0x01
0028c2   b483     btfsc	0x83, 0x2, 0       	BTFSC	_PORTDbits, 2
0028c4   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
0028c6   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0028c8   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
0028ca   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
0028cc   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
0028ce   6a01     clrf	0x1, 0              	CLRF	r0x01
0028d0   3601     rlcf	0x1, 0x1, 0         	RLCF	r0x01, F
0028d2   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0028d4   0b01     andlw	0x1                	ANDLW	0x01
0028d6   44e8     rlncf	0xe8, 0, 0         	RLNCF	WREG, W
0028d8   44e8     rlncf	0xe8, 0, 0         	RLNCF	WREG, W
0028da   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
0028dc   5083     movf	0x83, 0, 0          	MOVF	_PORTDbits, W
0028de   0bfb     andlw	0xfb               	ANDLW	0xfb
0028e0   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
0028e2   6e83     movwf	0x83, 0            	MOVWF	_PORTDbits
                                           ;	.line	199; moteursetjack.c	PIN_MOT1_2 = !PIN_MOT1_2;
0028e4   6a01     clrf	0x1, 0              	CLRF	r0x01
0028e6   b683     btfsc	0x83, 0x3, 0       	BTFSC	_PORTDbits, 3
0028e8   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
0028ea   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0028ec   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
0028ee   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
0028f0   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
0028f2   6a01     clrf	0x1, 0              	CLRF	r0x01
0028f4   3601     rlcf	0x1, 0x1, 0         	RLCF	r0x01, F
0028f6   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0028f8   0b01     andlw	0x1                	ANDLW	0x01
0028fa   38e8     swapf	0xe8, 0, 0         	SWAPF	WREG, W
0028fc   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
0028fe   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
002900   5083     movf	0x83, 0, 0          	MOVF	_PORTDbits, W
002902   0bf7     andlw	0xf7               	ANDLW	0xf7
002904   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
002906   6e83     movwf	0x83, 0            	MOVWF	_PORTDbits
                                           ; removed redundant BANKSEL
                                           ;	.line	200; moteursetjack.c	ticoutac = 0;
002908   6b41     clrf	0x41, 0x1           	CLRF	_ticoutac, B
00290a   d026     bra	0x2958               	BRA	_00225_DS_
                                           _00224_DS_:
                                           ;	.line	204; moteursetjack.c	PIN_MOT1_3 = !PIN_MOT1_3;
00290c   6a01     clrf	0x1, 0              	CLRF	r0x01
00290e   bc82     btfsc	0x82, 0x6, 0       	BTFSC	_PORTCbits, 6
002910   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
002912   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
002914   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
002916   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
002918   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
00291a   6a01     clrf	0x1, 0              	CLRF	r0x01
00291c   3601     rlcf	0x1, 0x1, 0         	RLCF	r0x01, F
00291e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
002920   0b01     andlw	0x1                	ANDLW	0x01
002922   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
002924   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
002926   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
002928   5082     movf	0x82, 0, 0          	MOVF	_PORTCbits, W
00292a   0bbf     andlw	0xbf               	ANDLW	0xbf
00292c   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
00292e   6e82     movwf	0x82, 0            	MOVWF	_PORTCbits
                                           ;	.line	205; moteursetjack.c	PIN_MOT1_4 = !PIN_MOT1_4;
002930   6a01     clrf	0x1, 0              	CLRF	r0x01
002932   be82     btfsc	0x82, 0x7, 0       	BTFSC	_PORTCbits, 7
002934   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
002936   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
002938   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
00293a   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
00293c   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
00293e   6a01     clrf	0x1, 0              	CLRF	r0x01
002940   3601     rlcf	0x1, 0x1, 0         	RLCF	r0x01, F
002942   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
002944   0b01     andlw	0x1                	ANDLW	0x01
002946   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
002948   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
00294a   5082     movf	0x82, 0, 0          	MOVF	_PORTCbits, W
00294c   0b7f     andlw	0x7f               	ANDLW	0x7f
00294e   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
002950   6e82     movwf	0x82, 0            	MOVWF	_PORTCbits
                                           ;	.line	206; moteursetjack.c	ticoutac = 1;
002952   0e01     movlw	0x1                	MOVLW	0x01
002954   0101     movlb	0x1                	BANKSEL	_ticoutac
002956   6f41     movwf	0x41, 0x1          	MOVWF	_ticoutac, B
                                           _00225_DS_:
002958   0101     movlb	0x1                	BANKSEL	_compteur_mot
                                           ;	.line	208; moteursetjack.c	compteur_mot++;
00295a   2b47     incf	0x47, 0x1, 0x1      	INCF	_compteur_mot, F, B
00295c   e301     bnc	0x2960               	BNC	_10223_DS_
                                           ; removed redundant BANKSEL
00295e   2b48     incf	0x48, 0x1, 0x1      	INCF	(_compteur_mot + 1), F, B
                                           _10223_DS_:
                                           ;	.line	209; moteursetjack.c	if(compteur_mot >= PAS_PAR_ETAGE)
002960   0e00     movlw	0                  	MOVLW	0x00
002962   0101     movlb	0x1                	BANKSEL	(_compteur_mot + 1)
002964   5d48     subwf	0x48, 0, 0x1       	SUBWF	(_compteur_mot + 1), W, B
002966   e102     bnz	0x296c               	BNZ	_00253_DS_
002968   0e32     movlw	0x32               	MOVLW	0x32
                                           ; removed redundant BANKSEL
00296a   5d47     subwf	0x47, 0, 0x1       	SUBWF	_compteur_mot, W, B
                                           _00253_DS_:
00296c   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
00296e   d04a     bra	0x2a04               	BRA	_00243_DS_
002970   0101     movlb	0x1                	BANKSEL	_mot1_sens
                                           ;	.line	211; moteursetjack.c	if(mot1_sens) mot1_position++;
002972   5142     movf	0x42, 0, 0x1        	MOVF	_mot1_sens, W, B
002974   e003     bz	0x297c                	BZ	_00227_DS_
002976   0101     movlb	0x1                	BANKSEL	_mot1_position
002978   2b43     incf	0x43, 0x1, 0x1      	INCF	_mot1_position, F, B
00297a   d002     bra	0x2980               	BRA	_00228_DS_
                                           _00227_DS_:
00297c   0101     movlb	0x1                	BANKSEL	_mot1_position
                                           ;	.line	212; moteursetjack.c	else mot1_position--;
00297e   0743     decf	0x43, 0x1, 0x1      	DECF	_mot1_position, F, B
                                           _00228_DS_:
                                           ;	.line	214; moteursetjack.c	etat_moteur[0] &= ~POSITION_MOTEUR_1;                // Maj position
002980   0ec0     movlw	0xc0               	MOVLW	0xc0
002982   1600     andwf	0, 0x1, 0          	ANDWF	r0x00, F
002984   5000     movf	0, 0, 0             	MOVF	r0x00, W
002986   0101     movlb	0x1                	BANKSEL	_etat_moteur
002988   6f54     movwf	0x54, 0x1          	MOVWF	_etat_moteur, B
                                           ;	.line	215; moteursetjack.c	etat_moteur[0] |= mot1_position & POSITION_MOTEUR_1; // ...
00298a   0e3f     movlw	0x3f               	MOVLW	0x3f
00298c   0101     movlb	0x1                	BANKSEL	_mot1_position
00298e   1543     andwf	0x43, 0, 0x1       	ANDWF	_mot1_position, W, B
002990   6e00     movwf	0, 0               	MOVWF	r0x00
002992   0101     movlb	0x1                	BANKSEL	_etat_moteur
002994   5154     movf	0x54, 0, 0x1        	MOVF	_etat_moteur, W, B
002996   1200     iorwf	0, 0x1, 0          	IORWF	r0x00, F
002998   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00299a   6f54     movwf	0x54, 0x1          	MOVWF	_etat_moteur, B
00299c   0101     movlb	0x1                	BANKSEL	_mot1_position
                                           ;	.line	217; moteursetjack.c	if(mot1_position == mot1_pos_visee)
00299e   5143     movf	0x43, 0, 0x1        	MOVF	_mot1_position, W, B
0029a0   0101     movlb	0x1                	BANKSEL	_mot1_pos_visee
0029a2   1945     xorwf	0x45, 0, 0x1       	XORWF	_mot1_pos_visee, W, B
0029a4   e120     bnz	0x29e6               	BNZ	_00230_DS_
                                           ;	.line	219; moteursetjack.c	T0CON = CONFIG_TMR0_MOTEUR & 0x7f; // TMR0OFF
0029a6   0e06     movlw	0x6                	MOVLW	0x06
0029a8   6ed5     movwf	0xd5, 0            	MOVWF	_T0CON
                                           ;	.line	220; moteursetjack.c	etat_moteur[0] &= ~ACTIV_MOTEUR_1; // Inactif
0029aa   0e7f     movlw	0x7f               	MOVLW	0x7f
0029ac   0101     movlb	0x1                	BANKSEL	_etat_moteur
0029ae   1554     andwf	0x54, 0, 0x1       	ANDWF	_etat_moteur, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
0029b0   6f54     movwf	0x54, 0x1          	MOVWF	_etat_moteur, B
                                           ;	.line	222; moteursetjack.c	mot1_phase.b0 = PIN_MOT1_1;
0029b2   6a00     clrf	0, 0                	CLRF	r0x00
0029b4   b483     btfsc	0x83, 0x2, 0       	BTFSC	_PORTDbits, 2
0029b6   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0029b8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0029ba   0b01     andlw	0x1                	ANDLW	0x01
0029bc   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
0029be   0101     movlb	0x1                	BANKSEL	_mot1_phase
0029c0   5162     movf	0x62, 0, 0x1        	MOVF	_mot1_phase, W, B
0029c2   0bfe     andlw	0xfe               	ANDLW	0xfe
0029c4   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
0029c6   6f62     movwf	0x62, 0x1          	MOVWF	_mot1_phase, B
                                           ;	.line	223; moteursetjack.c	mot1_phase.b1 = PIN_MOT1_3;
0029c8   6a00     clrf	0, 0                	CLRF	r0x00
0029ca   bc82     btfsc	0x82, 0x6, 0       	BTFSC	_PORTCbits, 6
0029cc   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0029ce   5000     movf	0, 0, 0             	MOVF	r0x00, W
0029d0   0b01     andlw	0x1                	ANDLW	0x01
0029d2   44e8     rlncf	0xe8, 0, 0         	RLNCF	WREG, W
0029d4   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
                                           ; removed redundant BANKSEL
0029d6   5162     movf	0x62, 0, 0x1        	MOVF	_mot1_phase, W, B
0029d8   0bfd     andlw	0xfd               	ANDLW	0xfd
0029da   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
0029dc   6f62     movwf	0x62, 0x1          	MOVWF	_mot1_phase, B
                                           ;	.line	224; moteursetjack.c	PIN_MOT1_1 = 0;
0029de   9483     bcf	0x83, 0x2, 0         	BCF	_PORTDbits, 2
                                           ;	.line	225; moteursetjack.c	PIN_MOT1_2 = 0;
0029e0   9683     bcf	0x83, 0x3, 0         	BCF	_PORTDbits, 3
                                           ;	.line	226; moteursetjack.c	PIN_MOT1_3 = 0;
0029e2   9c82     bcf	0x82, 0x6, 0         	BCF	_PORTCbits, 6
                                           ;	.line	227; moteursetjack.c	PIN_MOT1_4 = 0;
0029e4   9e82     bcf	0x82, 0x7, 0         	BCF	_PORTCbits, 7
                                           _00230_DS_:
0029e6   0101     movlb	0x1                	BANKSEL	_compteur_mot
                                           ;	.line	229; moteursetjack.c	compteur_mot = 0;
0029e8   6b47     clrf	0x47, 0x1           	CLRF	_compteur_mot, B
                                           ; removed redundant BANKSEL
0029ea   6b48     clrf	0x48, 0x1           	CLRF	(_compteur_mot + 1), B
0029ec   d00b     bra	0x2a04               	BRA	_00243_DS_
                                           _00240_DS_:
                                           ;	.line	234; moteursetjack.c	if(depart < 3)
0029ee   0e03     movlw	0x3                	MOVLW	0x03
0029f0   0101     movlb	0x1                	BANKSEL	_depart
0029f2   5d40     subwf	0x40, 0, 0x1       	SUBWF	_depart, W, B
0029f4   e205     bc	0x2a00                	BC	_00237_DS_
                                           ;	.line	236; moteursetjack.c	if(PIN_JACK)
0029f6   be81     btfsc	0x81, 0x7, 0       	BTFSC	_PORTBbits, 7
0029f8   d005     bra	0x2a04               	BRA	_00243_DS_
                                           ;	.line	249; moteursetjack.c	else depart = 1;
0029fa   0e01     movlw	0x1                	MOVLW	0x01
                                           ; removed redundant BANKSEL
0029fc   6f40     movwf	0x40, 0x1          	MOVWF	_depart, B
0029fe   d002     bra	0x2a04               	BRA	_00243_DS_
                                           _00237_DS_:
002a00   0101     movlb	0x1                	BANKSEL	_depart
                                           ;	.line	251; moteursetjack.c	else depart++; // Pour les tempos au changement de sens...
002a02   2b40     incf	0x40, 0x1, 0x1      	INCF	_depart, F, B
                                           _00243_DS_:
002a04   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002a06   f001
002a08   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002a0a   f000
002a0c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_moteursetjack__moteursetjack_ints_INT2	code
                                           _moteursetjack_ints_INT2:
                                           ;	.line	182; moteursetjack.c	void moteursetjack_ints_INT2(void) // position avant
002db0   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002db2   ffe5
                                           ;	.line	184; moteursetjack.c	PIN_MOT2_1 = 0;
002db4   9283     bcf	0x83, 0x1, 0         	BCF	_PORTDbits, 1
                                           ;	.line	185; moteursetjack.c	PIN_MOT2_2 = 0;
002db6   9083     bcf	0x83, 0, 0           	BCF	_PORTDbits, 0
                                           ;	.line	186; moteursetjack.c	mot2_position = 2;
002db8   0e02     movlw	0x2                	MOVLW	0x02
002dba   0101     movlb	0x1                	BANKSEL	_mot2_position
002dbc   6f44     movwf	0x44, 0x1          	MOVWF	_mot2_position, B
                                           ;	.line	187; moteursetjack.c	etat_moteur[1] &= ~POSITION_MOTEUR_2; // Maj position
002dbe   0efc     movlw	0xfc               	MOVLW	0xfc
002dc0   0101     movlb	0x1                	BANKSEL	(_etat_moteur + 1)
002dc2   1555     andwf	0x55, 0, 0x1       	ANDWF	(_etat_moteur + 1), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
002dc4   6f55     movwf	0x55, 0x1          	MOVWF	(_etat_moteur + 1), B
                                           ;	.line	188; moteursetjack.c	etat_moteur[1] |= 0x02;               // ..
002dc6   0e02     movlw	0x2                	MOVLW	0x02
                                           ; removed redundant BANKSEL
002dc8   1155     iorwf	0x55, 0, 0x1       	IORWF	(_etat_moteur + 1), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
002dca   6e00     movwf	0, 0               	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002dcc   6f55     movwf	0x55, 0x1          	MOVWF	(_etat_moteur + 1), B
                                           ;	.line	189; moteursetjack.c	etat_moteur[1] &= ~ACTIV_MOTEUR_2;    // Inactif !
002dce   9600     bcf	0, 0x3, 0            	BCF	r0x00, 3
002dd0   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002dd2   6f55     movwf	0x55, 0x1          	MOVWF	(_etat_moteur + 1), B
002dd4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002dd6   f000
002dd8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_moteursetjack__moteursetjack_ints_INT1	code
                                           _moteursetjack_ints_INT1:
002dda   0101     movlb	0x1                	BANKSEL	_mot2_pos_visee
                                           ;	.line	172; moteursetjack.c	if(mot2_pos_visee == 1)
002ddc   5146     movf	0x46, 0, 0x1        	MOVF	_mot2_pos_visee, W, B
002dde   0a01     xorlw	0x1                	XORLW	0x01
002de0   e106     bnz	0x2dee               	BNZ	_00209_DS_
                                           ;	.line	174; moteursetjack.c	PIN_MOT2_1 = 0;
002de2   9283     bcf	0x83, 0x1, 0         	BCF	_PORTDbits, 1
                                           ;	.line	175; moteursetjack.c	PIN_MOT2_2 = 0;
002de4   9083     bcf	0x83, 0, 0           	BCF	_PORTDbits, 0
                                           ;	.line	176; moteursetjack.c	etat_moteur[1] &= ~ACTIV_MOTEUR_2;// Inactif !
002de6   0ef7     movlw	0xf7               	MOVLW	0xf7
002de8   0101     movlb	0x1                	BANKSEL	(_etat_moteur + 1)
002dea   1555     andwf	0x55, 0, 0x1       	ANDWF	(_etat_moteur + 1), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
002dec   6f55     movwf	0x55, 0x1          	MOVWF	(_etat_moteur + 1), B
                                           _00209_DS_:
                                           ;	.line	178; moteursetjack.c	mot2_position = 1;
002dee   0e01     movlw	0x1                	MOVLW	0x01
002df0   0101     movlb	0x1                	BANKSEL	_mot2_position
002df2   6f44     movwf	0x44, 0x1          	MOVWF	_mot2_position, B
                                           ;	.line	179; moteursetjack.c	etat_moteur[1] &= ~POSITION_MOTEUR_2; // Maj position
002df4   0efc     movlw	0xfc               	MOVLW	0xfc
002df6   0101     movlb	0x1                	BANKSEL	(_etat_moteur + 1)
002df8   1555     andwf	0x55, 0, 0x1       	ANDWF	(_etat_moteur + 1), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
002dfa   6f55     movwf	0x55, 0x1          	MOVWF	(_etat_moteur + 1), B
                                           ;	.line	180; moteursetjack.c	etat_moteur[1] |= 0x01;               // ..
002dfc   0e01     movlw	0x1                	MOVLW	0x01
                                           ; removed redundant BANKSEL
002dfe   1155     iorwf	0x55, 0, 0x1       	IORWF	(_etat_moteur + 1), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
002e00   6f55     movwf	0x55, 0x1          	MOVWF	(_etat_moteur + 1), B
002e02   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_moteursetjack__moteursetjack_ints_INT0	code
                                           _moteursetjack_ints_INT0:
                                           ;	.line	163; moteursetjack.c	PIN_MOT2_1 = 0;
002e5e   9283     bcf	0x83, 0x1, 0         	BCF	_PORTDbits, 1
                                           ;	.line	164; moteursetjack.c	PIN_MOT2_2 = 0;
002e60   9083     bcf	0x83, 0, 0           	BCF	_PORTDbits, 0
002e62   0101     movlb	0x1                	BANKSEL	_mot2_position
                                           ;	.line	165; moteursetjack.c	mot2_position = 0;
002e64   6b44     clrf	0x44, 0x1           	CLRF	_mot2_position, B
                                           ;	.line	166; moteursetjack.c	etat_moteur[1] &= ~POSITION_MOTEUR_2; // Maj position
002e66   0efc     movlw	0xfc               	MOVLW	0xfc
002e68   0101     movlb	0x1                	BANKSEL	(_etat_moteur + 1)
002e6a   1555     andwf	0x55, 0, 0x1       	ANDWF	(_etat_moteur + 1), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
002e6c   6f55     movwf	0x55, 0x1          	MOVWF	(_etat_moteur + 1), B
                                           ;	.line	168; moteursetjack.c	etat_moteur[1] &= ~ACTIV_MOTEUR_2;    // Inactif !
002e6e   0ef7     movlw	0xf7               	MOVLW	0xf7
                                           ; removed redundant BANKSEL
002e70   1555     andwf	0x55, 0, 0x1       	ANDWF	(_etat_moteur + 1), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
002e72   6f55     movwf	0x55, 0x1          	MOVWF	(_etat_moteur + 1), B
002e74   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_moteursetjack__moteursetjack_ints_RB_haut	code
                                           _moteursetjack_ints_RB_haut:
                                           ;	.line	140; moteursetjack.c	void moteursetjack_ints_RB_haut(void)
002bd8   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002bda   ffe5
                                           ; #	MOVLW	0x3f
                                           ; #	MOVWF	_mot1_pos_visee, B
                                           ; #	MOVLW	0x3f
                                           ; ;     peep 5 - Removed redundant move
                                           ;	.line	146; moteursetjack.c	mot1_pos_visee = POSITION_MAX_1;
002bdc   0e3f     movlw	0x3f               	MOVLW	0x3f
002bde   0101     movlb	0x1                	BANKSEL	_mot1_pos_visee
                                           ;	.line	147; moteursetjack.c	mot1_position = POSITION_MAX_1;
002be0   6f45     movwf	0x45, 0x1          	MOVWF	_mot1_pos_visee, B
002be2   0101     movlb	0x1                	BANKSEL	_mot1_position
002be4   6f43     movwf	0x43, 0x1          	MOVWF	_mot1_position, B
                                           ;	.line	148; moteursetjack.c	etat_moteur[0] &= ~POSITION_MOTEUR_1; // Maj position
002be6   0ec0     movlw	0xc0               	MOVLW	0xc0
002be8   0101     movlb	0x1                	BANKSEL	_etat_moteur
002bea   1554     andwf	0x54, 0, 0x1       	ANDWF	_etat_moteur, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
002bec   6f54     movwf	0x54, 0x1          	MOVWF	_etat_moteur, B
                                           ;	.line	149; moteursetjack.c	etat_moteur[0] |= POSITION_MAX_1;     // ..
002bee   0e3f     movlw	0x3f               	MOVLW	0x3f
                                           ; removed redundant BANKSEL
002bf0   1154     iorwf	0x54, 0, 0x1       	IORWF	_etat_moteur, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
002bf2   6e00     movwf	0, 0               	MOVWF	r0x00
                                           ; removed redundant BANKSEL
002bf4   6f54     movwf	0x54, 0x1          	MOVWF	_etat_moteur, B
                                           ;	.line	151; moteursetjack.c	T0CON = CONFIG_TMR0_MOTEUR & 0x7f; // TMR0OFF
002bf6   0e06     movlw	0x6                	MOVLW	0x06
002bf8   6ed5     movwf	0xd5, 0            	MOVWF	_T0CON
                                           ;	.line	152; moteursetjack.c	etat_moteur[0] &= ~ACTIV_MOTEUR_1; // Inactif
002bfa   9e00     bcf	0, 0x7, 0            	BCF	r0x00, 7
002bfc   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
002bfe   6f54     movwf	0x54, 0x1          	MOVWF	_etat_moteur, B
                                           ;	.line	154; moteursetjack.c	mot1_phase.b0 = PIN_MOT1_1;
002c00   6a00     clrf	0, 0                	CLRF	r0x00
002c02   b483     btfsc	0x83, 0x2, 0       	BTFSC	_PORTDbits, 2
002c04   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
002c06   5000     movf	0, 0, 0             	MOVF	r0x00, W
002c08   0b01     andlw	0x1                	ANDLW	0x01
002c0a   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
002c0c   0101     movlb	0x1                	BANKSEL	_mot1_phase
002c0e   5162     movf	0x62, 0, 0x1        	MOVF	_mot1_phase, W, B
002c10   0bfe     andlw	0xfe               	ANDLW	0xfe
002c12   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
002c14   6f62     movwf	0x62, 0x1          	MOVWF	_mot1_phase, B
                                           ;	.line	155; moteursetjack.c	mot1_phase.b1 = PIN_MOT1_3;
002c16   6a00     clrf	0, 0                	CLRF	r0x00
002c18   bc82     btfsc	0x82, 0x6, 0       	BTFSC	_PORTCbits, 6
002c1a   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
002c1c   5000     movf	0, 0, 0             	MOVF	r0x00, W
002c1e   0b01     andlw	0x1                	ANDLW	0x01
002c20   44e8     rlncf	0xe8, 0, 0         	RLNCF	WREG, W
002c22   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
                                           ; removed redundant BANKSEL
002c24   5162     movf	0x62, 0, 0x1        	MOVF	_mot1_phase, W, B
002c26   0bfd     andlw	0xfd               	ANDLW	0xfd
002c28   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
002c2a   6f62     movwf	0x62, 0x1          	MOVWF	_mot1_phase, B
                                           ;	.line	156; moteursetjack.c	PIN_MOT1_1 = 0;
002c2c   9483     bcf	0x83, 0x2, 0         	BCF	_PORTDbits, 2
                                           ;	.line	157; moteursetjack.c	PIN_MOT1_2 = 0;
002c2e   9683     bcf	0x83, 0x3, 0         	BCF	_PORTDbits, 3
                                           ;	.line	158; moteursetjack.c	PIN_MOT1_3 = 0;
002c30   9c82     bcf	0x82, 0x6, 0         	BCF	_PORTCbits, 6
                                           ;	.line	159; moteursetjack.c	PIN_MOT1_4 = 0;
002c32   9e82     bcf	0x82, 0x7, 0         	BCF	_PORTCbits, 7
002c34   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002c36   f000
002c38   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_moteursetjack__moteursetjack_ints_RB_bas	code
                                           _moteursetjack_ints_RB_bas:
                                           ;	.line	119; moteursetjack.c	void moteursetjack_ints_RB_bas(void)
002c92   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
002c94   ffe5
002c96   0101     movlb	0x1                	BANKSEL	_mot1_pos_visee
                                           ;	.line	125; moteursetjack.c	mot1_pos_visee = 0;
002c98   6b45     clrf	0x45, 0x1           	CLRF	_mot1_pos_visee, B
002c9a   0101     movlb	0x1                	BANKSEL	_mot1_position
                                           ;	.line	126; moteursetjack.c	mot1_position = 0;
002c9c   6b43     clrf	0x43, 0x1           	CLRF	_mot1_position, B
                                           ;	.line	127; moteursetjack.c	etat_moteur[0] &= ~POSITION_MOTEUR_1; // Maj position
002c9e   0ec0     movlw	0xc0               	MOVLW	0xc0
002ca0   0101     movlb	0x1                	BANKSEL	_etat_moteur
002ca2   1554     andwf	0x54, 0, 0x1       	ANDWF	_etat_moteur, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
002ca4   6f54     movwf	0x54, 0x1          	MOVWF	_etat_moteur, B
                                           ;	.line	130; moteursetjack.c	T0CON = CONFIG_TMR0_MOTEUR & 0x7f; // TMR0OFF
002ca6   0e06     movlw	0x6                	MOVLW	0x06
002ca8   6ed5     movwf	0xd5, 0            	MOVWF	_T0CON
                                           ;	.line	131; moteursetjack.c	etat_moteur[0] &= ~ACTIV_MOTEUR_1; // Inactif
002caa   0e7f     movlw	0x7f               	MOVLW	0x7f
                                           ; removed redundant BANKSEL
002cac   1554     andwf	0x54, 0, 0x1       	ANDWF	_etat_moteur, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
002cae   6f54     movwf	0x54, 0x1          	MOVWF	_etat_moteur, B
                                           ;	.line	133; moteursetjack.c	mot1_phase.b0 = PIN_MOT1_1;
002cb0   6a00     clrf	0, 0                	CLRF	r0x00
002cb2   b483     btfsc	0x83, 0x2, 0       	BTFSC	_PORTDbits, 2
002cb4   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
002cb6   5000     movf	0, 0, 0             	MOVF	r0x00, W
002cb8   0b01     andlw	0x1                	ANDLW	0x01
002cba   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
002cbc   0101     movlb	0x1                	BANKSEL	_mot1_phase
002cbe   5162     movf	0x62, 0, 0x1        	MOVF	_mot1_phase, W, B
002cc0   0bfe     andlw	0xfe               	ANDLW	0xfe
002cc2   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
002cc4   6f62     movwf	0x62, 0x1          	MOVWF	_mot1_phase, B
                                           ;	.line	134; moteursetjack.c	mot1_phase.b1 = PIN_MOT1_3;
002cc6   6a00     clrf	0, 0                	CLRF	r0x00
002cc8   bc82     btfsc	0x82, 0x6, 0       	BTFSC	_PORTCbits, 6
002cca   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
002ccc   5000     movf	0, 0, 0             	MOVF	r0x00, W
002cce   0b01     andlw	0x1                	ANDLW	0x01
002cd0   44e8     rlncf	0xe8, 0, 0         	RLNCF	WREG, W
002cd2   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
                                           ; removed redundant BANKSEL
002cd4   5162     movf	0x62, 0, 0x1        	MOVF	_mot1_phase, W, B
002cd6   0bfd     andlw	0xfd               	ANDLW	0xfd
002cd8   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
                                           ; removed redundant BANKSEL
002cda   6f62     movwf	0x62, 0x1          	MOVWF	_mot1_phase, B
                                           ;	.line	135; moteursetjack.c	PIN_MOT1_1 = 0;
002cdc   9483     bcf	0x83, 0x2, 0         	BCF	_PORTDbits, 2
                                           ;	.line	136; moteursetjack.c	PIN_MOT1_2 = 0;
002cde   9683     bcf	0x83, 0x3, 0         	BCF	_PORTDbits, 3
                                           ;	.line	137; moteursetjack.c	PIN_MOT1_3 = 0;
002ce0   9c82     bcf	0x82, 0x6, 0         	BCF	_PORTCbits, 6
                                           ;	.line	138; moteursetjack.c	PIN_MOT1_4 = 0;
002ce2   9e82     bcf	0x82, 0x7, 0         	BCF	_PORTCbits, 7
002ce4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
002ce6   f000
002ce8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_moteursetjack__ordre_moteur	code
                                           _ordre_moteur:
                                           ;	.line	35; moteursetjack.c	void ordre_moteur(unsigned char ordre1, unsigned char ordre2)
002694   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
002696   ffe5
002698   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00269a   ffd9
00269c   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00269e   ffe5
0026a0   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0026a2   ffe5
0026a4   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0026a6   ffe5
0026a8   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0026aa   ffe5
0026ac   0e02     movlw	0x2                	MOVLW	0x02
0026ae   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
0026b0   f000
0026b2   0e03     movlw	0x3                	MOVLW	0x03
0026b4   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
0026b6   f001
                                           ;	.line	38; moteursetjack.c	if(ordre1 & ACTIV_MOTEUR_1)
0026b8   ae00     btfss	0, 0x7, 0          	BTFSS	r0x00, 7
0026ba   d0a0     bra	0x27fc               	BRA	_00133_DS_
                                           ;	.line	40; moteursetjack.c	if(ordre1 & INITIALISATION_1) 
0026bc   ac00     btfss	0, 0x6, 0          	BTFSS	r0x00, 6
0026be   d00e     bra	0x26dc               	BRA	_00113_DS_
                                           ;	.line	42; moteursetjack.c	dest = 0;
0026c0   6a02     clrf	0x2, 0              	CLRF	r0x02
                                           ;	.line	43; moteursetjack.c	if(FIN_COURSE1_BAS)
0026c2   a681     btfss	0x81, 0x3, 0       	BTFSS	_PORTBbits, 3
0026c4   d003     bra	0x26cc               	BRA	_00110_DS_
0026c6   0101     movlb	0x1                	BANKSEL	_mot1_position
                                           ;	.line	44; moteursetjack.c	mot1_position = 0;
0026c8   6b43     clrf	0x43, 0x1           	CLRF	_mot1_position, B
0026ca   d003     bra	0x26d2               	BRA	_00111_DS_
                                           _00110_DS_:
                                           ;	.line	46; moteursetjack.c	mot1_position = 255;
0026cc   0eff     movlw	0xff               	MOVLW	0xff
0026ce   0101     movlb	0x1                	BANKSEL	_mot1_position
0026d0   6f43     movwf	0x43, 0x1          	MOVWF	_mot1_position, B
                                           _00111_DS_:
                                           ;	.line	47; moteursetjack.c	etat_moteur[0] &= ~INITIALISATION_1;
0026d2   0ebf     movlw	0xbf               	MOVLW	0xbf
0026d4   0101     movlb	0x1                	BANKSEL	_etat_moteur
0026d6   1554     andwf	0x54, 0, 0x1       	ANDWF	_etat_moteur, W, B
                                           ; #	MOVWF	r0x03
                                           ; #	MOVF	r0x03, W
                                           ; ;     peep 2 - Removed redundant move
0026d8   6f54     movwf	0x54, 0x1          	MOVWF	_etat_moteur, B
0026da   d003     bra	0x26e2               	BRA	_00114_DS_
                                           _00113_DS_:
                                           ;	.line	49; moteursetjack.c	else dest = (ordre1 & POSITION_MOTEUR_1);
0026dc   0e3f     movlw	0x3f               	MOVLW	0x3f
0026de   1400     andwf	0, 0, 0            	ANDWF	r0x00, W
0026e0   6e02     movwf	0x2, 0             	MOVWF	r0x02
                                           _00114_DS_:
                                           ;	.line	50; moteursetjack.c	if((dest != mot1_position) || (etat_moteur[0] & ACTIV_MOTEUR_1))
0026e2   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0026e4   0101     movlb	0x1                	BANKSEL	_mot1_position
0026e6   1943     xorwf	0x43, 0, 0x1       	XORWF	_mot1_position, W, B
0026e8   e103     bnz	0x26f0               	BNZ	_00129_DS_
                                           _00175_DS_:
0026ea   0101     movlb	0x1                	BANKSEL	_etat_moteur
0026ec   af54     btfss	0x54, 0x7, 0x1     	BTFSS	_etat_moteur, 7, B
0026ee   d086     bra	0x27fc               	BRA	_00133_DS_
                                           _00129_DS_:
                                           ;	.line	52; moteursetjack.c	if(etat_moteur[0] & ACTIV_MOTEUR_1)
0026f0   c154     movff	0x154, 0           	MOVFF	_etat_moteur, r0x00
0026f2   f000
0026f4   ae00     btfss	0, 0x7, 0          	BTFSS	r0x00, 7
0026f6   d022     bra	0x273c               	BRA	_00124_DS_
                                           ;	.line	54; moteursetjack.c	if(((dest > mot1_position)&&(!mot1_sens))||((dest < mot1_position)&&(mot1_sens))) // ie si on change de sens
0026f8   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0026fa   0101     movlb	0x1                	BANKSEL	_mot1_position
0026fc   5d43     subwf	0x43, 0, 0x1       	SUBWF	_mot1_position, W, B
0026fe   e203     bc	0x2706                	BC	_00122_DS_
002700   0101     movlb	0x1                	BANKSEL	_mot1_sens
002702   5142     movf	0x42, 0, 0x1        	MOVF	_mot1_sens, W, B
002704   e009     bz	0x2718                	BZ	_00118_DS_
                                           _00122_DS_:
002706   0101     movlb	0x1                	BANKSEL	_mot1_position
002708   5143     movf	0x43, 0, 0x1        	MOVF	_mot1_position, W, B
00270a   5c02     subwf	0x2, 0, 0          	SUBWF	r0x02, W
00270c   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00270e   d059     bra	0x27c2               	BRA	_00125_DS_
002710   0101     movlb	0x1                	BANKSEL	_mot1_sens
002712   5142     movf	0x42, 0, 0x1        	MOVF	_mot1_sens, W, B
002714   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
002716   d055     bra	0x27c2               	BRA	_00125_DS_
                                           _00118_DS_:
002718   0101     movlb	0x1                	BANKSEL	_compteur_mot
                                           ;	.line	56; moteursetjack.c	compteur_mot = PAS_PAR_ETAGE - compteur_mot;
00271a   5147     movf	0x47, 0, 0x1        	MOVF	_compteur_mot, W, B
00271c   0832     sublw	0x32               	SUBLW	0x32
                                           ; removed redundant BANKSEL
00271e   6f47     movwf	0x47, 0x1          	MOVWF	_compteur_mot, B
002720   0e00     movlw	0                  	MOVLW	0x00
                                           ; removed redundant BANKSEL
002722   5748     subfwb	0x48, 0x1, 0x1    	SUBFWB	(_compteur_mot + 1), F, B
                                           ;	.line	57; moteursetjack.c	depart = -TEMPS_ATTENTE; // Attend TEMPS_ATTENTE interruptions du timer0 avant de repartir dans l'autre sens
002724   0eec     movlw	0xec               	MOVLW	0xec
002726   0101     movlb	0x1                	BANKSEL	_depart
002728   6f40     movwf	0x40, 0x1          	MOVWF	_depart, B
00272a   0101     movlb	0x1                	BANKSEL	_mot1_sens
                                           ;	.line	58; moteursetjack.c	if(mot1_sens) mot1_position++;
00272c   5142     movf	0x42, 0, 0x1        	MOVF	_mot1_sens, W, B
00272e   e003     bz	0x2736                	BZ	_00116_DS_
002730   0101     movlb	0x1                	BANKSEL	_mot1_position
002732   2b43     incf	0x43, 0x1, 0x1      	INCF	_mot1_position, F, B
002734   d046     bra	0x27c2               	BRA	_00125_DS_
                                           _00116_DS_:
002736   0101     movlb	0x1                	BANKSEL	_mot1_position
                                           ;	.line	59; moteursetjack.c	else mot1_position--;
002738   0743     decf	0x43, 0x1, 0x1      	DECF	_mot1_position, F, B
00273a   d043     bra	0x27c2               	BRA	_00125_DS_
                                           _00124_DS_:
                                           ;	.line	64; moteursetjack.c	etat_moteur[0] |= ACTIV_MOTEUR_1;
00273c   8e00     bsf	0, 0x7, 0            	BSF	r0x00, 7
00273e   5000     movf	0, 0, 0             	MOVF	r0x00, W
002740   0101     movlb	0x1                	BANKSEL	_etat_moteur
002742   6f54     movwf	0x54, 0x1          	MOVWF	_etat_moteur, B
002744   0101     movlb	0x1                	BANKSEL	_compteur_mot
                                           ;	.line	65; moteursetjack.c	compteur_mot = 0;
002746   6b47     clrf	0x47, 0x1           	CLRF	_compteur_mot, B
                                           ; removed redundant BANKSEL
002748   6b48     clrf	0x48, 0x1           	CLRF	(_compteur_mot + 1), B
                                           ;	.line	66; moteursetjack.c	PIN_MOT1_1 = mot1_phase.b0;
00274a   6a00     clrf	0, 0                	CLRF	r0x00
00274c   0101     movlb	0x1                	BANKSEL	_mot1_phase
00274e   b162     btfsc	0x62, 0, 0x1       	BTFSC	_mot1_phase, 0, B
002750   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
002752   5000     movf	0, 0, 0             	MOVF	r0x00, W
002754   0b01     andlw	0x1                	ANDLW	0x01
002756   44e8     rlncf	0xe8, 0, 0         	RLNCF	WREG, W
002758   44e8     rlncf	0xe8, 0, 0         	RLNCF	WREG, W
00275a   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
00275c   5083     movf	0x83, 0, 0          	MOVF	_PORTDbits, W
00275e   0bfb     andlw	0xfb               	ANDLW	0xfb
002760   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
002762   6e83     movwf	0x83, 0            	MOVWF	_PORTDbits
                                           ;	.line	67; moteursetjack.c	PIN_MOT1_2 = !mot1_phase.b0;
002764   6a00     clrf	0, 0                	CLRF	r0x00
                                           ; removed redundant BANKSEL
002766   b162     btfsc	0x62, 0, 0x1       	BTFSC	_mot1_phase, 0, B
002768   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
00276a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00276c   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
00276e   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
002770   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
002772   6a00     clrf	0, 0                	CLRF	r0x00
002774   3600     rlcf	0, 0x1, 0           	RLCF	r0x00, F
002776   5000     movf	0, 0, 0             	MOVF	r0x00, W
002778   0b01     andlw	0x1                	ANDLW	0x01
00277a   38e8     swapf	0xe8, 0, 0         	SWAPF	WREG, W
00277c   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
00277e   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
002780   5083     movf	0x83, 0, 0          	MOVF	_PORTDbits, W
002782   0bf7     andlw	0xf7               	ANDLW	0xf7
002784   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
002786   6e83     movwf	0x83, 0            	MOVWF	_PORTDbits
                                           ;	.line	68; moteursetjack.c	PIN_MOT1_3 = mot1_phase.b1;
002788   6a00     clrf	0, 0                	CLRF	r0x00
                                           ; removed redundant BANKSEL
00278a   b362     btfsc	0x62, 0x1, 0x1     	BTFSC	_mot1_phase, 1, B
00278c   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
00278e   5000     movf	0, 0, 0             	MOVF	r0x00, W
002790   0b01     andlw	0x1                	ANDLW	0x01
002792   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
002794   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
002796   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
002798   5082     movf	0x82, 0, 0          	MOVF	_PORTCbits, W
00279a   0bbf     andlw	0xbf               	ANDLW	0xbf
00279c   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
00279e   6e82     movwf	0x82, 0            	MOVWF	_PORTCbits
                                           ;	.line	69; moteursetjack.c	PIN_MOT1_4 = !mot1_phase.b1;
0027a0   6a00     clrf	0, 0                	CLRF	r0x00
                                           ; removed redundant BANKSEL
0027a2   b362     btfsc	0x62, 0x1, 0x1     	BTFSC	_mot1_phase, 1, B
0027a4   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0027a6   5000     movf	0, 0, 0             	MOVF	r0x00, W
0027a8   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
0027aa   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
0027ac   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
0027ae   6a00     clrf	0, 0                	CLRF	r0x00
0027b0   3600     rlcf	0, 0x1, 0           	RLCF	r0x00, F
0027b2   5000     movf	0, 0, 0             	MOVF	r0x00, W
0027b4   0b01     andlw	0x1                	ANDLW	0x01
0027b6   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
0027b8   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
0027ba   5082     movf	0x82, 0, 0          	MOVF	_PORTCbits, W
0027bc   0b7f     andlw	0x7f               	ANDLW	0x7f
0027be   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
0027c0   6e82     movwf	0x82, 0            	MOVWF	_PORTCbits
                                           _00125_DS_:
                                           ;	.line	71; moteursetjack.c	T0CON = CONFIG_TMR0_MOTEUR;
0027c2   0e86     movlw	0x86               	MOVLW	0x86
0027c4   6ed5     movwf	0xd5, 0            	MOVWF	_T0CON
                                           ;	.line	72; moteursetjack.c	mot1_sens = (dest > mot1_position);
0027c6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0027c8   0101     movlb	0x1                	BANKSEL	_mot1_position
0027ca   5d43     subwf	0x43, 0, 0x1       	SUBWF	_mot1_position, W, B
0027cc   70d8     btg	0xd8, 0, 0           	BTG	STATUS, 0
0027ce   0101     movlb	0x1                	BANKSEL	_mot1_sens
0027d0   6b42     clrf	0x42, 0x1           	CLRF	_mot1_sens, B
0027d2   3742     rlcf	0x42, 0x1, 0x1      	RLCF	_mot1_sens, F, B
                                           ;	.line	73; moteursetjack.c	if(PIN_MOT1_1 == PIN_MOT1_3) ticoutac = mot1_sens; // A modifier si mauvais sens
0027d4   6a00     clrf	0, 0                	CLRF	r0x00
0027d6   b483     btfsc	0x83, 0x2, 0       	BTFSC	_PORTDbits, 2
0027d8   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0027da   6a03     clrf	0x3, 0              	CLRF	r0x03
0027dc   bc82     btfsc	0x82, 0x6, 0       	BTFSC	_PORTCbits, 6
0027de   2a03     incf	0x3, 0x1, 0         	INCF	r0x03, F
0027e0   5000     movf	0, 0, 0             	MOVF	r0x00, W
0027e2   1803     xorwf	0x3, 0, 0          	XORWF	r0x03, W
0027e4   e103     bnz	0x27ec               	BNZ	_00127_DS_
0027e6   c142     movff	0x142, 0x141       	MOVFF	_mot1_sens, _ticoutac
0027e8   f141
0027ea   d008     bra	0x27fc               	BRA	_00133_DS_
                                           _00127_DS_:
0027ec   0101     movlb	0x1                	BANKSEL	_mot1_sens
                                           ;	.line	74; moteursetjack.c	else ticoutac = !mot1_sens;
0027ee   5142     movf	0x42, 0, 0x1        	MOVF	_mot1_sens, W, B
0027f0   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
0027f2   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
0027f4   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
0027f6   0101     movlb	0x1                	BANKSEL	_ticoutac
0027f8   6b41     clrf	0x41, 0x1           	CLRF	_ticoutac, B
0027fa   3741     rlcf	0x41, 0x1, 0x1      	RLCF	_ticoutac, F, B
                                           _00133_DS_:
                                           ;	.line	77; moteursetjack.c	if(ordre2 & ACTIV_MOTEUR_2)
0027fc   a601     btfss	0x1, 0x3, 0        	BTFSS	r0x01, 3
0027fe   d01f     bra	0x283e               	BRA	_00145_DS_
                                           ;	.line	79; moteursetjack.c	if(ordre2 & INITIALISATION_2)
002800   a401     btfss	0x1, 0x2, 0        	BTFSS	r0x01, 2
002802   d008     bra	0x2814               	BRA	_00138_DS_
                                           ;	.line	81; moteursetjack.c	if(FIN_COURSE2_ARRIERE) mot2_position = 0; else mot2_position = 2;
002804   a081     btfss	0x81, 0, 0         	BTFSS	_PORTBbits, 0
002806   d003     bra	0x280e               	BRA	_00135_DS_
002808   0101     movlb	0x1                	BANKSEL	_mot2_position
00280a   6b44     clrf	0x44, 0x1           	CLRF	_mot2_position, B
00280c   d003     bra	0x2814               	BRA	_00138_DS_
                                           _00135_DS_:
00280e   0e02     movlw	0x2                	MOVLW	0x02
002810   0101     movlb	0x1                	BANKSEL	_mot2_position
002812   6f44     movwf	0x44, 0x1          	MOVWF	_mot2_position, B
                                           _00138_DS_:
                                           ;	.line	84; moteursetjack.c	dest = (ordre2 & POSITION_MOTEUR_2);
002814   0e03     movlw	0x3                	MOVLW	0x03
002816   1401     andwf	0x1, 0, 0          	ANDWF	r0x01, W
                                           ; #	MOVWF	r0x02
                                           ; #	MOVF	r0x02, W
                                           ; ;     peep 2 - Removed redundant move
                                           ;	.line	85; moteursetjack.c	if(dest != mot2_position)
002818   6e02     movwf	0x2, 0             	MOVWF	r0x02
00281a   0101     movlb	0x1                	BANKSEL	_mot2_position
00281c   1944     xorwf	0x44, 0, 0x1       	XORWF	_mot2_position, W, B
00281e   e00f     bz	0x283e                	BZ	_00145_DS_
                                           ;	.line	87; moteursetjack.c	mot2_pos_visee = dest;
002820   c002     movff	0x2, 0x146         	MOVFF	r0x02, _mot2_pos_visee
002822   f146
                                           ;	.line	88; moteursetjack.c	if(dest > mot2_position)
002824   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
002826   0101     movlb	0x1                	BANKSEL	_mot2_position
002828   5d44     subwf	0x44, 0, 0x1       	SUBWF	_mot2_position, W, B
00282a   e203     bc	0x2832                	BC	_00140_DS_
                                           ;	.line	90; moteursetjack.c	PIN_MOT2_1 = 1;
00282c   8283     bsf	0x83, 0x1, 0         	BSF	_PORTDbits, 1
                                           ;	.line	91; moteursetjack.c	PIN_MOT2_2 = 0;
00282e   9083     bcf	0x83, 0, 0           	BCF	_PORTDbits, 0
002830   d002     bra	0x2836               	BRA	_00141_DS_
                                           _00140_DS_:
                                           ;	.line	95; moteursetjack.c	PIN_MOT2_1 = 0;
002832   9283     bcf	0x83, 0x1, 0         	BCF	_PORTDbits, 1
                                           ;	.line	96; moteursetjack.c	PIN_MOT2_2 = 1;
002834   8083     bsf	0x83, 0, 0           	BSF	_PORTDbits, 0
                                           _00141_DS_:
                                           ;	.line	98; moteursetjack.c	etat_moteur[1] |= ACTIV_MOTEUR_2;
002836   0e08     movlw	0x8                	MOVLW	0x08
002838   0101     movlb	0x1                	BANKSEL	(_etat_moteur + 1)
00283a   1155     iorwf	0x55, 0, 0x1       	IORWF	(_etat_moteur + 1), W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
00283c   6f55     movwf	0x55, 0x1          	MOVWF	(_etat_moteur + 1), B
                                           _00145_DS_:
                                           ;	.line	101; moteursetjack.c	if(ordre2 & ACTIV_MOTEUR_3)
00283e   ac01     btfss	0x1, 0x6, 0        	BTFSS	r0x01, 6
002840   d025     bra	0x288c               	BRA	_00152_DS_
                                           ;	.line	103; moteursetjack.c	ftoggle_A4();
002842   6a00     clrf	0, 0                	CLRF	r0x00
002844   b880     btfsc	0x80, 0x4, 0       	BTFSC	_PORTAbits, 4
002846   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
002848   5000     movf	0, 0, 0             	MOVF	r0x00, W
00284a   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
00284c   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
00284e   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
002850   6a00     clrf	0, 0                	CLRF	r0x00
002852   3600     rlcf	0, 0x1, 0           	RLCF	r0x00, F
002854   5000     movf	0, 0, 0             	MOVF	r0x00, W
002856   0b01     andlw	0x1                	ANDLW	0x01
002858   38e8     swapf	0xe8, 0, 0         	SWAPF	WREG, W
00285a   6ef4     movwf	0xf4, 0            	MOVWF	PRODH
00285c   5080     movf	0x80, 0, 0          	MOVF	_PORTAbits, W
00285e   0bef     andlw	0xef               	ANDLW	0xef
002860   10f4     iorwf	0xf4, 0, 0         	IORWF	PRODH, W
002862   6e80     movwf	0x80, 0            	MOVWF	_PORTAbits
                                           ;	.line	104; moteursetjack.c	switch (ordre2 & MOTEUR_3)
002864   0e30     movlw	0x30               	MOVLW	0x30
002866   1401     andwf	0x1, 0, 0          	ANDWF	r0x01, W
002868   6e00     movwf	0, 0               	MOVWF	r0x00
00286a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00286c   e007     bz	0x287c                	BZ	_00146_DS_
00286e   5000     movf	0, 0, 0             	MOVF	r0x00, W
002870   0a10     xorlw	0x10               	XORLW	0x10
002872   e007     bz	0x2882                	BZ	_00147_DS_
002874   5000     movf	0, 0, 0             	MOVF	r0x00, W
002876   0a20     xorlw	0x20               	XORLW	0x20
002878   e007     bz	0x2888                	BZ	_00148_DS_
00287a   d008     bra	0x288c               	BRA	_00152_DS_
                                           _00146_DS_:
                                           ;	.line	106; moteursetjack.c	case 0x00: PIN_MOT3_1 = 0;
00287c   9082     bcf	0x82, 0, 0           	BCF	_PORTCbits, 0
                                           ;	.line	107; moteursetjack.c	PIN_MOT3_2 = 0;
00287e   9282     bcf	0x82, 0x1, 0         	BCF	_PORTCbits, 1
                                           ;	.line	108; moteursetjack.c	break;
002880   d005     bra	0x288c               	BRA	_00152_DS_
                                           _00147_DS_:
                                           ;	.line	109; moteursetjack.c	case 0x10: PIN_MOT3_1 = 1;
002882   8082     bsf	0x82, 0, 0           	BSF	_PORTCbits, 0
                                           ;	.line	110; moteursetjack.c	PIN_MOT3_2 = 0;
002884   9282     bcf	0x82, 0x1, 0         	BCF	_PORTCbits, 1
                                           ;	.line	111; moteursetjack.c	break;
002886   d002     bra	0x288c               	BRA	_00152_DS_
                                           _00148_DS_:
                                           ;	.line	112; moteursetjack.c	case 0x20: PIN_MOT3_1 = 0;
002888   9082     bcf	0x82, 0, 0           	BCF	_PORTCbits, 0
                                           ;	.line	113; moteursetjack.c	PIN_MOT3_2 = 1;
00288a   8282     bsf	0x82, 0x1, 0         	BSF	_PORTCbits, 1
                                           _00152_DS_:
                                           ;	.line	115; moteursetjack.c	}
00288c   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00288e   f003
002890   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
002892   f002
002894   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
002896   f001
002898   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00289a   f000
00289c   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00289e   ffd9
0028a0   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_moteursetjack__init_moteursetjack	code
                                           _init_moteursetjack:
                                           ;	.line	22; moteursetjack.c	T0CON = CONFIG_TMR0_MOTEUR & 0x7F;// TMR0 off...    //| 0x08; // PSA off
002d52   0e06     movlw	0x6                	MOVLW	0x06
002d54   6ed5     movwf	0xd5, 0            	MOVWF	_T0CON
                                           ;	.line	23; moteursetjack.c	etat_moteur[0] = INITIALISATION_1;
002d56   0e40     movlw	0x40               	MOVLW	0x40
002d58   0101     movlb	0x1                	BANKSEL	_etat_moteur
002d5a   6f54     movwf	0x54, 0x1          	MOVWF	_etat_moteur, B
                                           ;	.line	24; moteursetjack.c	etat_moteur[1] = INITIALISATION_2;
002d5c   0e04     movlw	0x4                	MOVLW	0x04
                                           ; removed redundant BANKSEL
002d5e   6f55     movwf	0x55, 0x1          	MOVWF	(_etat_moteur + 1), B
                                           ;	.line	25; moteursetjack.c	INTCON |= 0x38;                    // INT0, TMR0, RB on...
002d60   0e38     movlw	0x38               	MOVLW	0x38
002d62   12f2     iorwf	0xf2, 0x1, 0       	IORWF	_INTCON, F
                                           ;	.line	26; moteursetjack.c	INTCON &= 0xf8;                    // ...
002d64   0ef8     movlw	0xf8               	MOVLW	0xf8
002d66   16f2     andwf	0xf2, 0x1, 0       	ANDWF	_INTCON, F
                                           ;	.line	27; moteursetjack.c	INTCON2 = 0x85;                    // Rising edge for INT0,1,2. High priority for RB.
002d68   0e85     movlw	0x85               	MOVLW	0x85
002d6a   6ef1     movwf	0xf1, 0            	MOVWF	_INTCON2
                                           ;	.line	28; moteursetjack.c	INTCON3 = 0xD8;                    // INT1,2 on, High priority.
002d6c   0ed8     movlw	0xd8               	MOVLW	0xd8
002d6e   6ef0     movwf	0xf0, 0            	MOVWF	_INTCON3
                                           ;	.line	29; moteursetjack.c	TRISD &= 0xF0;                     // RD0..3 en sorties
002d70   0ef0     movlw	0xf0               	MOVLW	0xf0
002d72   1695     andwf	0x95, 0x1, 0       	ANDWF	_TRISD, F
                                           ;	.line	30; moteursetjack.c	TRISC &= 0x3C;                     // RC0, 1, 6, 7 en sorties
002d74   0e3c     movlw	0x3c               	MOVLW	0x3c
002d76   1694     andwf	0x94, 0x1, 0       	ANDWF	_TRISC, F
                                           ;	.line	31; moteursetjack.c	PORTD &= 0xF0;
002d78   0ef0     movlw	0xf0               	MOVLW	0xf0
002d7a   1683     andwf	0x83, 0x1, 0       	ANDWF	_PORTD, F
                                           ;	.line	32; moteursetjack.c	PORTC &= 0x3C;
002d7c   0e3c     movlw	0x3c               	MOVLW	0x3c
002d7e   1682     andwf	0x82, 0x1, 0       	ANDWF	_PORTC, F
002d80   0012     return	0                 	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 1232 (0x04d0) bytes ( 0.94%)
                                           ;           	  616 (0x0268) words
                                           ; udata size:	    3 (0x0003) bytes ( 0.17%)
                                           ; access size:	    4 (0x0004) bytes
                                           
                                           
                                           	end
