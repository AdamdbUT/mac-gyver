gplink-0.13.4 alpha
Copyright (c) 1998-2005 gputils project
Listing File Generated: 4-14-2009  19:33:59
 
 
Address  Value    Disassembly              Source
-------  -----    -----------              ------
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue Apr 14 19:33:59 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _application_data
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _section_descriptor
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block for absolute Ival
                                           S_application_iface__application_data	code	0X002000
                                           _application_data:
002000   00ff     reset                    	DB	0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
002002   0000     nop                      
002004   0000     nop                      
002006   0000     nop                      
002008   0000     nop                      
00200a   0000     nop                      
00200c   0000     nop                      	DB	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00200e   0000     nop                      
002010   0000     nop                      
002012   0000     nop                      
002014   0000     nop                      
002016   0000     nop                      
002018   0000     nop                      	DB	0x00
                                           
                                           ; I code from now on!
                                           
                                           
                                           ; Statistics:
                                           ; code size:	    6 (0x0006) bytes ( 0.00%)
                                           ;           	    3 (0x0003) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue Apr 14 19:33:59 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _stack
                                           	global _stack_end
                                           	global _init_boot
                                           	global _main
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _ep_bdt
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _device_descriptor
                                           	extern _configuration_descriptor
                                           	extern _string_descriptor
                                           	extern _ep_init
                                           	extern _ep_in
                                           	extern _ep_out
                                           	extern _ep_setup
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _init_usb
                                           	extern _usb_sleep
                                           	extern _dispatch_usb_event
                                           	extern _section_descriptor
                                           	extern _boot_device_descriptor
                                           	extern _boot_configuration_descriptor
                                           	extern _boot_string_descriptor
                                           	extern _str0
                                           	extern _str1
                                           	extern _str2
                                           	extern _str3
                                           	extern _boot_ep_init
                                           	extern _boot_ep_in
                                           	extern _boot_ep_out
                                           	extern _boot_ep_setup
                                           	extern _application_data
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           INTCON	equ	0xff2
                                           TOSL	equ	0xffd
                                           TOSH	equ	0xffe
                                           TOSU	equ	0xfff
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           
                                           udata_boot_main_0	udata
                                           _init_boot_count_1_1	res	4
                                           
                                           
                                           ustat_boot_main_00	udata	0X0200
                                           _stack	res	254
                                           _stack_end	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; interrupt vector 
                                           ;--------------------------------------------------------
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_boot_main__main	code
                                           _main:
                                           ;	.line	84; boot_main.c	init_boot();
0015e8   ecfb     call	0x11f6, 0           	CALL	_init_boot
0015ea   f008
                                           ;	.line	86; boot_main.c	init_usb();
0015ec   ecee     call	0x17dc, 0           	CALL	_init_usb
0015ee   f00b
                                           _00119_DS_:
                                           ;	.line	90; boot_main.c	usb_sleep();
0015f0   ec0b     call	0x1816, 0           	CALL	_usb_sleep
0015f2   f00c
                                           ;	.line	91; boot_main.c	dispatch_usb_event();
0015f4   ec3d     call	0x7a, 0             	CALL	_dispatch_usb_event
0015f6   f000
                                           ;	.line	92; boot_main.c	if((application_data.invalid == 0) &&
0015f8   0e00     movlw	0                  	MOVLW	LOW(_application_data)
0015fa   6ef6     movwf	0xf6, 0            	MOVWF	TBLPTRL
0015fc   0e20     movlw	0x20               	MOVLW	HIGH(_application_data)
0015fe   6ef7     movwf	0xf7, 0            	MOVWF	TBLPTRH
001600   0e00     movlw	0                  	MOVLW	UPPER(_application_data)
001602   6ef8     movwf	0xf8, 0            	MOVWF	TBLPTRU
001604   0009     tblrd	*+                 	TBLRD*+	
001606   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
001608   f000
00160a   5000     movf	0, 0, 0             	MOVF	r0x00, W
00160c   e1f1     bnz	0x15f0               	BNZ	_00119_DS_
                                           ;	.line	93; boot_main.c	(GET_ACTIVE_CONFIGURATION() > FLASH_CONFIGURATION))
00160e   0e03     movlw	0x3                	MOVLW	0x03
001610   5c5e     subwf	0x5e, 0, 0         	SUBWF	_usb_active_cfg, W
001612   e3ee     bnc	0x15f0               	BNC	_00119_DS_
                                           ;	.line	96; boot_main.c	application_data.main();
001614   0e16     movlw	0x16               	MOVLW	LOW(_application_data + 22)
001616   6ef6     movwf	0xf6, 0            	MOVWF	TBLPTRL
001618   0e20     movlw	0x20               	MOVLW	HIGH(_application_data + 22)
00161a   6ef7     movwf	0xf7, 0            	MOVWF	TBLPTRH
00161c   0e00     movlw	0                  	MOVLW	UPPER(_application_data + 22)
00161e   6ef8     movwf	0xf8, 0            	MOVWF	TBLPTRU
001620   0009     tblrd	*+                 	TBLRD*+	
001622   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
001624   f000
001626   0009     tblrd	*+                 	TBLRD*+	
001628   cff5     movff	0xff5, 0x1         	MOVFF	TABLAT, r0x01
00162a   f001
00162c   0009     tblrd	*+                 	TBLRD*+	
00162e   cff5     movff	0xff5, 0x2         	MOVFF	TABLAT, r0x02
001630   f002
001632   cff2     movff	0xff2, 0xfe5       	MOVFF	INTCON, POSTDEC1
001634   ffe5
001636   9ef2     bcf	0xf2, 0x7, 0         	BCF	INTCON, 7
001638   0005     push                     	PUSH	
00163a   0e56     movlw	0x56               	MOVLW	LOW(_00127_DS_)
00163c   6efd     movwf	0xfd, 0            	MOVWF	TOSL
00163e   0e16     movlw	0x16               	MOVLW	HIGH(_00127_DS_)
001640   6efe     movwf	0xfe, 0            	MOVWF	TOSH
001642   0e00     movlw	0                  	MOVLW	UPPER(_00127_DS_)
001644   6eff     movwf	0xff, 0            	MOVWF	TOSU
001646   50e4     movf	0xe4, 0, 0          	MOVF	PREINC1, W
001648   6ef2     movwf	0xf2, 0            	MOVWF	INTCON
00164a   c002     movff	0x2, 0xffb         	MOVFF	r0x02, PCLATU
00164c   fffb
00164e   c001     movff	0x1, 0xffa         	MOVFF	r0x01, PCLATH
001650   fffa
001652   5000     movf	0, 0, 0             	MOVF	r0x00, W
001654   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00127_DS_:
                                           ;	.line	98; boot_main.c	INTCON = 0; // Forbid interrupts
001656   6af2     clrf	0xf2, 0             	CLRF	_INTCON
001658   d7cb     bra	0x15f0               	BRA	_00119_DS_
00165a   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_boot_main__init_boot	code
                                           _init_boot:
                                           ;	.line	33; boot_main.c	void init_boot(void)
0011f6   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0011f8   ffe5
                                           ;	.line	37; boot_main.c	ADCON1 = 0x0F;
0011fa   0e0f     movlw	0xf                	MOVLW	0x0f
0011fc   6ec1     movwf	0xc1, 0            	MOVWF	_ADCON1
                                           ;	.line	38; boot_main.c	CMCON  = 0x07;
0011fe   0e07     movlw	0x7                	MOVLW	0x07
001200   6eb4     movwf	0xb4, 0            	MOVWF	_CMCON
                                           ;	.line	39; boot_main.c	TRISA  = 0xEF;
001202   0eef     movlw	0xef               	MOVLW	0xef
001204   6e92     movwf	0x92, 0            	MOVWF	_TRISA
                                           ;	.line	40; boot_main.c	TRISB  = 0xFF;
001206   6893     setf	0x93, 0             	SETF	_TRISB
                                           ;	.line	41; boot_main.c	PORTA  = 0x10;
001208   0e10     movlw	0x10               	MOVLW	0x10
00120a   6e80     movwf	0x80, 0            	MOVWF	_PORTA
00120c   0100     movlb	0                  	BANKSEL	_init_boot_count_1_1
                                           ;	.line	43; boot_main.c	count = 0x80000;
00120e   6b60     clrf	0x60, 0x1           	CLRF	_init_boot_count_1_1, B
                                           ; removed redundant BANKSEL
001210   6b61     clrf	0x61, 0x1           	CLRF	(_init_boot_count_1_1 + 1), B
001212   0e08     movlw	0x8                	MOVLW	0x08
                                           ; removed redundant BANKSEL
001214   6f62     movwf	0x62, 0x1          	MOVWF	(_init_boot_count_1_1 + 2), B
                                           ; removed redundant BANKSEL
001216   6b63     clrf	0x63, 0x1           	CLRF	(_init_boot_count_1_1 + 3), B
                                           _00105_DS_:
001218   0100     movlb	0                  	BANKSEL	_init_boot_count_1_1
                                           ;	.line	44; boot_main.c	while(count)
00121a   5160     movf	0x60, 0, 0x1        	MOVF	_init_boot_count_1_1, W, B
                                           ; removed redundant BANKSEL
00121c   1161     iorwf	0x61, 0, 0x1       	IORWF	(_init_boot_count_1_1 + 1), W, B
                                           ; removed redundant BANKSEL
00121e   1162     iorwf	0x62, 0, 0x1       	IORWF	(_init_boot_count_1_1 + 2), W, B
                                           ; removed redundant BANKSEL
001220   1163     iorwf	0x63, 0, 0x1       	IORWF	(_init_boot_count_1_1 + 3), W, B
001222   e006     bz	0x1230                	BZ	_00107_DS_
                                           ;	.line	46; boot_main.c	count--;
001224   0eff     movlw	0xff               	MOVLW	0xff
                                           ; removed redundant BANKSEL
001226   2760     addwf	0x60, 0x1, 0x1     	ADDWF	_init_boot_count_1_1, F, B
                                           ; removed redundant BANKSEL
001228   2361     addwfc	0x61, 0x1, 0x1    	ADDWFC	(_init_boot_count_1_1 + 1), F, B
                                           ; removed redundant BANKSEL
00122a   2362     addwfc	0x62, 0x1, 0x1    	ADDWFC	(_init_boot_count_1_1 + 2), F, B
                                           ; removed redundant BANKSEL
00122c   2363     addwfc	0x63, 0x1, 0x1    	ADDWFC	(_init_boot_count_1_1 + 3), F, B
00122e   d7f4     bra	0x1218               	BRA	_00105_DS_
                                           _00107_DS_:
                                           ;	.line	49; boot_main.c	PORTA  = 0x00;
001230   6a80     clrf	0x80, 0             	CLRF	_PORTA
                                           ;	.line	52; boot_main.c	if((application_data.invalid == 0) && !PORTBbits.RB7)
001232   0e00     movlw	0                  	MOVLW	LOW(_application_data)
001234   6ef6     movwf	0xf6, 0            	MOVWF	TBLPTRL
001236   0e20     movlw	0x20               	MOVLW	HIGH(_application_data)
001238   6ef7     movwf	0xf7, 0            	MOVWF	TBLPTRH
00123a   0e00     movlw	0                  	MOVLW	UPPER(_application_data)
00123c   6ef8     movwf	0xf8, 0            	MOVWF	TBLPTRU
00123e   0009     tblrd	*+                 	TBLRD*+	
001240   cff5     movff	0xff5, 0           	MOVFF	TABLAT, r0x00
001242   f000
001244   5000     movf	0, 0, 0             	MOVF	r0x00, W
001246   e130     bnz	0x12a8               	BNZ	_00109_DS_
001248   be81     btfsc	0x81, 0x7, 0       	BTFSC	_PORTBbits, 7
00124a   d02e     bra	0x12a8               	BRA	_00109_DS_
                                           ;	.line	56; boot_main.c	device_descriptor        = application_data.device_descriptor;
00124c   0e01     movlw	0x1                	MOVLW	LOW(_application_data + 1)
00124e   6ef6     movwf	0xf6, 0            	MOVWF	TBLPTRL
001250   0e20     movlw	0x20               	MOVLW	HIGH(_application_data + 1)
001252   6ef7     movwf	0xf7, 0            	MOVWF	TBLPTRH
001254   0e00     movlw	0                  	MOVLW	UPPER(_application_data + 1)
001256   6ef8     movwf	0xf8, 0            	MOVWF	TBLPTRU
001258   0009     tblrd	*+                 	TBLRD*+	
00125a   cff5     movff	0xff5, 0x78        	MOVFF	TABLAT, _device_descriptor
00125c   f078
00125e   0009     tblrd	*+                 	TBLRD*+	
001260   cff5     movff	0xff5, 0x79        	MOVFF	TABLAT, (_device_descriptor + 1)
001262   f079
001264   0009     tblrd	*+                 	TBLRD*+	
001266   cff5     movff	0xff5, 0x7a        	MOVFF	TABLAT, (_device_descriptor + 2)
001268   f07a
                                           ;	.line	57; boot_main.c	configuration_descriptor = application_data.configuration_descriptor;
00126a   0e04     movlw	0x4                	MOVLW	LOW(_application_data + 4)
00126c   6ef6     movwf	0xf6, 0            	MOVWF	TBLPTRL
00126e   0e20     movlw	0x20               	MOVLW	HIGH(_application_data + 4)
001270   6ef7     movwf	0xf7, 0            	MOVWF	TBLPTRH
001272   0e00     movlw	0                  	MOVLW	UPPER(_application_data + 4)
001274   6ef8     movwf	0xf8, 0            	MOVWF	TBLPTRU
001276   0009     tblrd	*+                 	TBLRD*+	
001278   cff5     movff	0xff5, 0x7b        	MOVFF	TABLAT, _configuration_descriptor
00127a   f07b
00127c   0009     tblrd	*+                 	TBLRD*+	
00127e   cff5     movff	0xff5, 0x7c        	MOVFF	TABLAT, (_configuration_descriptor + 1)
001280   f07c
001282   0009     tblrd	*+                 	TBLRD*+	
001284   cff5     movff	0xff5, 0x7d        	MOVFF	TABLAT, (_configuration_descriptor + 2)
001286   f07d
                                           ;	.line	58; boot_main.c	string_descriptor        = application_data.string_descriptor;
001288   0e07     movlw	0x7                	MOVLW	LOW(_application_data + 7)
00128a   6ef6     movwf	0xf6, 0            	MOVWF	TBLPTRL
00128c   0e20     movlw	0x20               	MOVLW	HIGH(_application_data + 7)
00128e   6ef7     movwf	0xf7, 0            	MOVWF	TBLPTRH
001290   0e00     movlw	0                  	MOVLW	UPPER(_application_data + 7)
001292   6ef8     movwf	0xf8, 0            	MOVWF	TBLPTRU
001294   0009     tblrd	*+                 	TBLRD*+	
001296   cff5     movff	0xff5, 0x7e        	MOVFF	TABLAT, _string_descriptor
001298   f07e
00129a   0009     tblrd	*+                 	TBLRD*+	
00129c   cff5     movff	0xff5, 0x7f        	MOVFF	TABLAT, (_string_descriptor + 1)
00129e   f07f
0012a0   0009     tblrd	*+                 	TBLRD*+	
0012a2   cff5     movff	0xff5, 0x80        	MOVFF	TABLAT, (_string_descriptor + 2)
0012a4   f080
0012a6   d015     bra	0x12d2               	BRA	_00110_DS_
                                           _00109_DS_:
                                           ;	.line	64; boot_main.c	device_descriptor        = &boot_device_descriptor;
0012a8   0e84     movlw	0x84               	MOVLW	LOW(_boot_device_descriptor)
0012aa   0100     movlb	0                  	BANKSEL	_device_descriptor
0012ac   6f78     movwf	0x78, 0x1          	MOVWF	_device_descriptor, B
0012ae   0e03     movlw	0x3                	MOVLW	HIGH(_boot_device_descriptor)
                                           ; removed redundant BANKSEL
0012b0   6f79     movwf	0x79, 0x1          	MOVWF	(_device_descriptor + 1), B
0012b2   0e00     movlw	0                  	MOVLW	UPPER(_boot_device_descriptor)
                                           ; removed redundant BANKSEL
0012b4   6f7a     movwf	0x7a, 0x1          	MOVWF	(_device_descriptor + 2), B
                                           ;	.line	65; boot_main.c	configuration_descriptor = boot_configuration_descriptor;
0012b6   0ec8     movlw	0xc8               	MOVLW	LOW(_boot_configuration_descriptor)
0012b8   0100     movlb	0                  	BANKSEL	_configuration_descriptor
0012ba   6f7b     movwf	0x7b, 0x1          	MOVWF	_configuration_descriptor, B
0012bc   0e03     movlw	0x3                	MOVLW	HIGH(_boot_configuration_descriptor)
                                           ; removed redundant BANKSEL
0012be   6f7c     movwf	0x7c, 0x1          	MOVWF	(_configuration_descriptor + 1), B
0012c0   0e00     movlw	0                  	MOVLW	UPPER(_boot_configuration_descriptor)
                                           ; removed redundant BANKSEL
0012c2   6f7d     movwf	0x7d, 0x1          	MOVWF	(_configuration_descriptor + 2), B
                                           ;	.line	66; boot_main.c	string_descriptor        = boot_string_descriptor;
0012c4   0e32     movlw	0x32               	MOVLW	LOW(_boot_string_descriptor)
0012c6   0100     movlb	0                  	BANKSEL	_string_descriptor
0012c8   6f7e     movwf	0x7e, 0x1          	MOVWF	_string_descriptor, B
0012ca   0e04     movlw	0x4                	MOVLW	HIGH(_boot_string_descriptor)
                                           ; removed redundant BANKSEL
0012cc   6f7f     movwf	0x7f, 0x1          	MOVWF	(_string_descriptor + 1), B
0012ce   0e00     movlw	0                  	MOVLW	UPPER(_boot_string_descriptor)
                                           ; removed redundant BANKSEL
0012d0   6f80     movwf	0x80, 0x1          	MOVWF	(_string_descriptor + 2), B
                                           _00110_DS_:
                                           ;	.line	73; boot_main.c	ep_init  = boot_ep_init;
0012d2   0ea4     movlw	0xa4               	MOVLW	LOW(_boot_ep_init)
0012d4   0100     movlb	0                  	BANKSEL	_ep_init
0012d6   6f84     movwf	0x84, 0x1          	MOVWF	_ep_init, B
0012d8   0e04     movlw	0x4                	MOVLW	HIGH(_boot_ep_init)
                                           ; removed redundant BANKSEL
0012da   6f85     movwf	0x85, 0x1          	MOVWF	(_ep_init + 1), B
0012dc   0e00     movlw	0                  	MOVLW	UPPER(_boot_ep_init)
                                           ; removed redundant BANKSEL
0012de   6f86     movwf	0x86, 0x1          	MOVWF	(_ep_init + 2), B
                                           ;	.line	74; boot_main.c	ep_in    = boot_ep_in;
0012e0   0e0e     movlw	0xe                	MOVLW	LOW(_boot_ep_in)
0012e2   0100     movlb	0                  	BANKSEL	_ep_in
0012e4   6f8d     movwf	0x8d, 0x1          	MOVWF	_ep_in, B
0012e6   0e05     movlw	0x5                	MOVLW	HIGH(_boot_ep_in)
                                           ; removed redundant BANKSEL
0012e8   6f8e     movwf	0x8e, 0x1          	MOVWF	(_ep_in + 1), B
0012ea   0e00     movlw	0                  	MOVLW	UPPER(_boot_ep_in)
                                           ; removed redundant BANKSEL
0012ec   6f8f     movwf	0x8f, 0x1          	MOVWF	(_ep_in + 2), B
                                           ;	.line	75; boot_main.c	ep_out   = boot_ep_out;
0012ee   0e78     movlw	0x78               	MOVLW	LOW(_boot_ep_out)
0012f0   0100     movlb	0                  	BANKSEL	_ep_out
0012f2   6f8a     movwf	0x8a, 0x1          	MOVWF	_ep_out, B
0012f4   0e05     movlw	0x5                	MOVLW	HIGH(_boot_ep_out)
                                           ; removed redundant BANKSEL
0012f6   6f8b     movwf	0x8b, 0x1          	MOVWF	(_ep_out + 1), B
0012f8   0e00     movlw	0                  	MOVLW	UPPER(_boot_ep_out)
                                           ; removed redundant BANKSEL
0012fa   6f8c     movwf	0x8c, 0x1          	MOVWF	(_ep_out + 2), B
                                           ;	.line	76; boot_main.c	ep_setup = boot_ep_setup;
0012fc   0eb2     movlw	0xb2               	MOVLW	LOW(_boot_ep_setup)
0012fe   0100     movlb	0                  	BANKSEL	_ep_setup
001300   6f87     movwf	0x87, 0x1          	MOVWF	_ep_setup, B
001302   0e05     movlw	0x5                	MOVLW	HIGH(_boot_ep_setup)
                                           ; removed redundant BANKSEL
001304   6f88     movwf	0x88, 0x1          	MOVWF	(_ep_setup + 1), B
001306   0e00     movlw	0                  	MOVLW	UPPER(_boot_ep_setup)
                                           ; removed redundant BANKSEL
001308   6f89     movwf	0x89, 0x1          	MOVWF	(_ep_setup + 2), B
00130a   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
00130c   f000
00130e   0012     return	0                 	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  398 (0x018e) bytes ( 0.30%)
                                           ;           	  199 (0x00c7) words
                                           ; udata size:	  259 (0x0103) bytes (14.45%)
                                           ; access size:	    3 (0x0003) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue Apr 14 19:33:59 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _boot_goto_table
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_boot_iface__boot_goto_table	code	0X00001C
                                           _boot_goto_table:
                                           	extern _dispatch_usb_event
                                           	extern _reset_usb
                                           	extern _usb_sleep
                                           	extern _fill_in_buffer
                                           	extern _ep0_init
                                           	extern _ep0_in
                                           	extern _ep0_setup
                                           	extern _ep1_init
                                           	extern _ep1_out
                                           	extern _ep2_init
                                           	extern _ep2_in
                                           	extern __mullong
                                           	extern __mulint
                                           	extern __gptrget1
                                           	extern __gptrget2
                                           	extern __gptrget3
                                           	extern __gptrget4
                                           	extern __gptrput1
                                           	extern __gptrput2
                                           	extern __gptrput3
                                           	extern _delay10ktcy
                                           	extern _delay1ktcy
                                           	extern _delay10tcy
                                           	;--------------------------------
00001c   0010     retfie	0                 	DW 0x0010 ; Boot Version in BCD format
00001e   ef3d     goto	0x7a                	goto _dispatch_usb_event
000020   f000
000022   ef88     goto	0x1310              	goto _reset_usb
000024   f009
000026   ef0b     goto	0x1816              	goto _usb_sleep
000028   f00c
00002a   ef6f     goto	0xede               	goto _fill_in_buffer
00002c   f007
00002e   ef80     goto	0x1700              	goto _ep0_init
000030   f00b
000032   ef4c     goto	0x898               	goto _ep0_in
000034   f004
000036   ef62     goto	0x10c4              	goto _ep0_setup
000038   f008
00003a   ef23     goto	0x1846              	goto _ep1_init
00003c   f00c
00003e   ef78     goto	0xcf0               	goto _ep1_out
000040   f006
000042   ef42     goto	0x1884              	goto _ep2_init
000044   f00c
000046   ef02     goto	0x1404              	goto _ep2_in
000048   f00a
00004a   ef6e     goto	0xadc               	goto __mullong
00004c   f005
00004e   ef55     goto	0x14aa              	goto __mulint
000050   f00a
000052   efdd     goto	0x17ba              	goto __gptrget1
000054   f00b
000056   efb6     goto	0x176c              	goto __gptrget2
000058   f00b
00005a   ef9b     goto	0x1736              	goto __gptrget3
00005c   f00b
00005e   ef60     goto	0x16c0              	goto __gptrget4
000060   f00b
000062   ef38     goto	0x1870              	goto __gptrput1
000064   f00c
000066   ef17     goto	0x182e              	goto __gptrput2
000068   f00c
00006a   effd     goto	0x17fa              	goto __gptrput3
00006c   f00b
00006e   eff5     goto	0x5ea               	goto _delay10ktcy
000070   f002
000072   ef0e     goto	0x61c               	goto _delay1ktcy
000074   f003
000076   efe9     goto	0x5d2               	goto _delay10tcy
000078   f002
                                           	
                                           ; I code from now on!
                                           
                                           
                                           ; Statistics:
                                           ; code size:	   98 (0x0062) bytes ( 0.07%)
                                           ;           	   49 (0x0031) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue Apr 14 19:33:59 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _string_descriptor
                                           	global _configuration_descriptor
                                           	global _device_descriptor
                                           	global _init_usb
                                           	global _reset_usb
                                           	global _usb_sleep
                                           	global _dispatch_usb_event
                                           	global _fill_in_buffer
                                           	global _ep_bdt
                                           	global _ep_init
                                           	global _ep_in
                                           	global _ep_out
                                           	global _ep_setup
                                           	global _usb_device_state
                                           	global _usb_active_cfg
                                           	global _usb_active_alt_setting
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern __gptrget3
                                           	extern __gptrget2
                                           	extern __gptrput2
                                           	extern __gptrget1
                                           	extern __gptrput1
                                           	extern __gptrput3
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _stdin
                                           	extern _stdout
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern __mulint
                                           	extern _section_descriptor
                                           	extern _boot_device_descriptor
                                           	extern _boot_configuration_descriptor
                                           	extern _boot_string_descriptor
                                           	extern _str0
                                           	extern _str1
                                           	extern _str2
                                           	extern _str3
                                           	extern _boot_ep_init
                                           	extern _boot_ep_in
                                           	extern _boot_ep_out
                                           	extern _boot_ep_setup
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           INTCON	equ	0xff2
                                           WREG	equ	0xfe8
                                           TOSL	equ	0xffd
                                           TOSH	equ	0xffe
                                           TOSU	equ	0xfff
                                           TBLPTRL	equ	0xff6
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           r0x0a	res	1
                                           r0x0b	res	1
                                           
                                           udata_usb_0	udata
                                           _device_descriptor	res	3
                                           
                                           udata_usb_1	udata
                                           _configuration_descriptor	res	3
                                           
                                           udata_usb_2	udata
                                           _string_descriptor	res	3
                                           
                                           udata_usb_3	udata
                                           _reset_usb_i_1_1	res	1
                                           
                                           udata_usb_4	udata
                                           _fill_in_buffer_byte_to_send_1_1	res	2
                                           
                                           udata_usb_5	udata
                                           _fill_in_buffer_dest_1_1	res	3
                                           
                                           udata_usb_6	udata
                                           _ep_init	res	3
                                           
                                           udata_usb_7	udata
                                           _ep_setup	res	3
                                           
                                           udata_usb_8	udata
                                           _ep_out	res	3
                                           
                                           udata_usb_9	udata
                                           _ep_in	res	3
                                           
                                           
                                           ustat_usb_00	udata	0X005D
                                           _usb_active_alt_setting	res	1
                                           _usb_active_cfg	res	1
                                           _usb_device_state	res	1
                                           
                                           
                                           ustat_usb_01	udata	0X0400
                                           _ep_bdt	res	128
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_usb__fill_in_buffer	code
                                           _fill_in_buffer:
                                           ;	.line	190; usb.c	void fill_in_buffer(uchar EPnum,
000ede   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
000ee0   ffe5
000ee2   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
000ee4   ffd9
000ee6   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
000ee8   ffe5
000eea   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
000eec   ffe5
000eee   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
000ef0   ffe5
000ef2   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
000ef4   ffe5
000ef6   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
000ef8   ffe5
000efa   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
000efc   ffe5
000efe   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
000f00   ffe5
000f02   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
000f04   ffe5
000f06   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
000f08   ffe5
000f0a   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
000f0c   ffe5
000f0e   c00a     movff	0xa, 0xfe5         	MOVFF	r0x0a, POSTDEC1
000f10   ffe5
000f12   c00b     movff	0xb, 0xfe5         	MOVFF	r0x0b, POSTDEC1
000f14   ffe5
000f16   0e02     movlw	0x2                	MOVLW	0x02
000f18   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
000f1a   f000
000f1c   0e03     movlw	0x3                	MOVLW	0x03
000f1e   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
000f20   f001
000f22   0e04     movlw	0x4                	MOVLW	0x04
000f24   cfdb     movff	0xfdb, 0x2         	MOVFF	PLUSW2, r0x02
000f26   f002
000f28   0e05     movlw	0x5                	MOVLW	0x05
000f2a   cfdb     movff	0xfdb, 0x3         	MOVFF	PLUSW2, r0x03
000f2c   f003
000f2e   0e06     movlw	0x6                	MOVLW	0x06
000f30   cfdb     movff	0xfdb, 0x4         	MOVFF	PLUSW2, r0x04
000f32   f004
000f34   0e07     movlw	0x7                	MOVLW	0x07
000f36   cfdb     movff	0xfdb, 0x5         	MOVFF	PLUSW2, r0x05
000f38   f005
000f3a   0e08     movlw	0x8                	MOVLW	0x08
000f3c   cfdb     movff	0xfdb, 0x6         	MOVFF	PLUSW2, r0x06
000f3e   f006
000f40   0e09     movlw	0x9                	MOVLW	0x09
000f42   cfdb     movff	0xfdb, 0x7         	MOVFF	PLUSW2, r0x07
000f44   f007
000f46   0e0a     movlw	0xa                	MOVLW	0x0a
000f48   cfdb     movff	0xfdb, 0x8         	MOVFF	PLUSW2, r0x08
000f4a   f008
                                           ;	.line	199; usb.c	if(*nb_byte < buffer_size)
000f4c   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
000f4e   ffe9
000f50   c007     movff	0x7, 0xff3         	MOVFF	r0x07, PRODL
000f52   fff3
000f54   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
000f56   ecb6     call	0x176c, 0           	CALL	__gptrget2
000f58   f00b
000f5a   6e09     movwf	0x9, 0             	MOVWF	r0x09
000f5c   cff3     movff	0xff3, 0xa         	MOVFF	PRODL, r0x0a
000f5e   f00a
000f60   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
000f62   5c0a     subwf	0xa, 0, 0          	SUBWF	r0x0a, W
000f64   e102     bnz	0xf6a                	BNZ	_00206_DS_
000f66   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
000f68   5c09     subwf	0x9, 0, 0          	SUBWF	r0x09, W
                                           _00206_DS_:
000f6a   e205     bc	0xf76                 	BC	_00196_DS_
                                           ;	.line	201; usb.c	byte_to_send = *nb_byte;
000f6c   c009     movff	0x9, 0x96          	MOVFF	r0x09, _fill_in_buffer_byte_to_send_1_1
000f6e   f096
000f70   c00a     movff	0xa, 0x97          	MOVFF	r0x0a, (_fill_in_buffer_byte_to_send_1_1 + 1)
000f72   f097
000f74   d004     bra	0xf7e                	BRA	_00197_DS_
                                           _00196_DS_:
                                           ;	.line	205; usb.c	byte_to_send = buffer_size;
000f76   c004     movff	0x4, 0x96          	MOVFF	r0x04, _fill_in_buffer_byte_to_send_1_1
000f78   f096
000f7a   c005     movff	0x5, 0x97          	MOVFF	r0x05, (_fill_in_buffer_byte_to_send_1_1 + 1)
000f7c   f097
                                           _00197_DS_:
                                           ;	.line	208; usb.c	EP_IN_BD(EPnum).Cnt = byte_to_send;
000f7e   5000     movf	0, 0, 0             	MOVF	r0x00, W
000f80   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
000f82   6e04     movwf	0x4, 0             	MOVWF	r0x04
000f84   2804     incf	0x4, 0, 0           	INCF	r0x04, W
                                           ; #	MOVWF	r0x00
                                           ; #;;multiply lit val:0x04 by variable r0x00 and store in r0x00
                                           ; #;;Unrolled 8 X 8 multiplication
                                           ; #;;FIXME: the function does not support result==WREG
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
000f86   0d04     mullw	0x4                	MULLW	0x04
000f88   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
000f8a   f000
000f8c   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
000f8e   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
000f90   6e04     movwf	0x4, 0             	MOVWF	r0x04
000f92   6a05     clrf	0x5, 0              	CLRF	r0x05
000f94   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
000f96   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
000f98   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
000f9a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
000f9c   2a05     incf	0x5, 0x1, 0         	INCF	r0x05, F
000f9e   0100     movlb	0                  	BANKSEL	_fill_in_buffer_byte_to_send_1_1
000fa0   5196     movf	0x96, 0, 0x1        	MOVF	_fill_in_buffer_byte_to_send_1_1, W, B
000fa2   6e0b     movwf	0xb, 0             	MOVWF	r0x0b
000fa4   c004     movff	0x4, 0xfe9         	MOVFF	r0x04, FSR0L
000fa6   ffe9
000fa8   c005     movff	0x5, 0xfea         	MOVFF	r0x05, FSR0H
000faa   ffea
000fac   c00b     movff	0xb, 0xfef         	MOVFF	r0x0b, INDF0
000fae   ffef
                                           ;	.line	211; usb.c	dest = (uchar __data *) EP_IN_BD(EPnum).ADR;
000fb0   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
000fb2   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
000fb4   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
000fb6   6a04     clrf	0x4, 0              	CLRF	r0x04
000fb8   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
000fba   0e02     movlw	0x2                	MOVLW	0x02
000fbc   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
000fbe   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
000fc0   2a04     incf	0x4, 0x1, 0         	INCF	r0x04, F
000fc2   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
000fc4   ffe9
000fc6   c004     movff	0x4, 0xfea         	MOVFF	r0x04, FSR0H
000fc8   ffea
000fca   cfee     movff	0xfee, 0           	MOVFF	POSTINC0, r0x00
000fcc   f000
000fce   cfef     movff	0xfef, 0x4         	MOVFF	INDF0, r0x04
000fd0   f004
000fd2   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
000fd4   0100     movlb	0                  	BANKSEL	(_fill_in_buffer_dest_1_1 + 1)
000fd6   6f82     movwf	0x82, 0x1          	MOVWF	(_fill_in_buffer_dest_1_1 + 1), B
000fd8   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
000fda   6f81     movwf	0x81, 0x1          	MOVWF	_fill_in_buffer_dest_1_1, B
000fdc   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
000fde   6f83     movwf	0x83, 0x1          	MOVWF	(_fill_in_buffer_dest_1_1 + 2), B
000fe0   0100     movlb	0                  	BANKSEL	_fill_in_buffer_byte_to_send_1_1
                                           ;	.line	214; usb.c	*nb_byte -= byte_to_send;
000fe2   5196     movf	0x96, 0, 0x1        	MOVF	_fill_in_buffer_byte_to_send_1_1, W, B
000fe4   5e09     subwf	0x9, 0x1, 0        	SUBWF	r0x09, F
                                           ; removed redundant BANKSEL
000fe6   5197     movf	0x97, 0, 0x1        	MOVF	(_fill_in_buffer_byte_to_send_1_1 + 1), W, B
000fe8   5a0a     subwfb	0xa, 0x1, 0       	SUBWFB	r0x0a, F
000fea   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
000fec   ffe5
000fee   c00a     movff	0xa, 0xff4         	MOVFF	r0x0a, PRODH
000ff0   fff4
000ff2   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
000ff4   ffe9
000ff6   c007     movff	0x7, 0xff3         	MOVFF	r0x07, PRODL
000ff8   fff3
000ffa   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
000ffc   ec17     call	0x182e, 0           	CALL	__gptrput2
000ffe   f00c
                                           _00198_DS_:
001000   0100     movlb	0                  	BANKSEL	_fill_in_buffer_byte_to_send_1_1
                                           ;	.line	217; usb.c	while(byte_to_send)
001002   5196     movf	0x96, 0, 0x1        	MOVF	_fill_in_buffer_byte_to_send_1_1, W, B
                                           ; removed redundant BANKSEL
001004   1197     iorwf	0x97, 0, 0x1       	IORWF	(_fill_in_buffer_byte_to_send_1_1 + 1), W, B
001006   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
001008   d042     bra	0x108e               	BRA	_00201_DS_
                                           ;	.line	219; usb.c	*dest = **source;
00100a   c081     movff	0x81, 0            	MOVFF	_fill_in_buffer_dest_1_1, r0x00
00100c   f000
00100e   c082     movff	0x82, 0x4          	MOVFF	(_fill_in_buffer_dest_1_1 + 1), r0x04
001010   f004
001012   c083     movff	0x83, 0x5          	MOVFF	(_fill_in_buffer_dest_1_1 + 2), r0x05
001014   f005
001016   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
001018   ffe9
00101a   c002     movff	0x2, 0xff3         	MOVFF	r0x02, PRODL
00101c   fff3
00101e   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
001020   ec9b     call	0x1736, 0           	CALL	__gptrget3
001022   f00b
001024   6e06     movwf	0x6, 0             	MOVWF	r0x06
001026   cff3     movff	0xff3, 0x7         	MOVFF	PRODL, r0x07
001028   f007
00102a   cff4     movff	0xff4, 0x8         	MOVFF	PRODH, r0x08
00102c   f008
00102e   c006     movff	0x6, 0xfe9         	MOVFF	r0x06, FSR0L
001030   ffe9
001032   c007     movff	0x7, 0xff3         	MOVFF	r0x07, PRODL
001034   fff3
001036   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
001038   ecdd     call	0x17ba, 0           	CALL	__gptrget1
00103a   f00b
00103c   6e09     movwf	0x9, 0             	MOVWF	r0x09
00103e   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
001040   ffe5
001042   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
001044   ffe9
001046   c004     movff	0x4, 0xff3         	MOVFF	r0x04, PRODL
001048   fff3
00104a   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
00104c   ec38     call	0x1870, 0           	CALL	__gptrput1
00104e   f00c
001050   0100     movlb	0                  	BANKSEL	_fill_in_buffer_dest_1_1
                                           ;	.line	220; usb.c	dest++;
001052   2b81     incf	0x81, 0x1, 0x1      	INCF	_fill_in_buffer_dest_1_1, F, B
001054   e301     bnc	0x1058               	BNC	_10195_DS_
                                           ; removed redundant BANKSEL
001056   2b82     incf	0x82, 0x1, 0x1      	INCF	(_fill_in_buffer_dest_1_1 + 1), F, B
                                           _10195_DS_:
001058   e302     bnc	0x105e               	BNC	_20196_DS_
00105a   0100     movlb	0                  	BANKSEL	(_fill_in_buffer_dest_1_1 + 2)
00105c   2b83     incf	0x83, 0x1, 0x1      	INCF	(_fill_in_buffer_dest_1_1 + 2), F, B
                                           _20196_DS_:
                                           ;	.line	221; usb.c	(*source)++;
00105e   2a06     incf	0x6, 0x1, 0         	INCF	r0x06, F
001060   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
001062   2a07     incf	0x7, 0x1, 0         	INCF	r0x07, F
001064   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
001066   2a08     incf	0x8, 0x1, 0         	INCF	r0x08, F
001068   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
00106a   ffe5
00106c   c007     movff	0x7, 0xff4         	MOVFF	r0x07, PRODH
00106e   fff4
001070   c008     movff	0x8, 0xff6         	MOVFF	r0x08, TBLPTRL
001072   fff6
001074   c001     movff	0x1, 0xfe9         	MOVFF	r0x01, FSR0L
001076   ffe9
001078   c002     movff	0x2, 0xff3         	MOVFF	r0x02, PRODL
00107a   fff3
00107c   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
00107e   ecfd     call	0x17fa, 0           	CALL	__gptrput3
001080   f00b
                                           ;	.line	222; usb.c	byte_to_send--;
001082   0eff     movlw	0xff               	MOVLW	0xff
001084   0100     movlb	0                  	BANKSEL	_fill_in_buffer_byte_to_send_1_1
001086   2796     addwf	0x96, 0x1, 0x1     	ADDWF	_fill_in_buffer_byte_to_send_1_1, F, B
001088   e201     bc	0x108c                	BC	_30197_DS_
                                           ; removed redundant BANKSEL
00108a   0797     decf	0x97, 0x1, 0x1      	DECF	(_fill_in_buffer_byte_to_send_1_1 + 1), F, B
                                           _30197_DS_:
00108c   d7b9     bra	0x1000               	BRA	_00198_DS_
                                           _00201_DS_:
00108e   cfe4     movff	0xfe4, 0xb         	MOVFF	PREINC1, r0x0b
001090   f00b
001092   cfe4     movff	0xfe4, 0xa         	MOVFF	PREINC1, r0x0a
001094   f00a
001096   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
001098   f009
00109a   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
00109c   f008
00109e   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
0010a0   f007
0010a2   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
0010a4   f006
0010a6   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
0010a8   f005
0010aa   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0010ac   f004
0010ae   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0010b0   f003
0010b2   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0010b4   f002
0010b6   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0010b8   f001
0010ba   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0010bc   f000
0010be   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0010c0   ffd9
0010c2   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usb__dispatch_usb_event	code
                                           _dispatch_usb_event:
                                           ;	.line	120; usb.c	void dispatch_usb_event(void)
00007a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00007c   ffe5
00007e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
000080   ffe5
000082   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
000084   ffe5
000086   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
000088   ffe5
00008a   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
00008c   ffe5
                                           ;	.line	123; usb.c	if(UIEbits.ACTIVIE && UIRbits.ACTIVIF)
00008e   a469     btfss	0x69, 0x2, 0       	BTFSS	_UIEbits, 2
000090   d005     bra	0x9c                 	BRA	_00138_DS_
000092   a468     btfss	0x68, 0x2, 0       	BTFSS	_UIRbits, 2
000094   d003     bra	0x9c                 	BRA	_00138_DS_
                                           ;	.line	125; usb.c	UCONbits.SUSPND = 0;
000096   926d     bcf	0x6d, 0x1, 0         	BCF	_UCONbits, 1
                                           ;	.line	126; usb.c	UIEbits.ACTIVIE = 0;
000098   9469     bcf	0x69, 0x2, 0         	BCF	_UIEbits, 2
                                           ;	.line	127; usb.c	UIRbits.ACTIVIF = 0;
00009a   9468     bcf	0x68, 0x2, 0         	BCF	_UIRbits, 2
                                           _00138_DS_:
                                           ;	.line	131; usb.c	if(UIEbits.URSTIE && UIRbits.URSTIF) 
00009c   a069     btfss	0x69, 0, 0         	BTFSS	_UIEbits, 0
                                           ; #	GOTO	_00141_DS_
                                           ; #	BTFSS	_UIRbits, 0
                                           ; #	GOTO	_00141_DS_
                                           ; #	CALL	_reset_usb
                                           ; #	BTFSS	_UIEbits, 4
                                           ; ;     peep 1 - test/jump to test/skip
                                           ;	.line	133; usb.c	reset_usb();
00009e   d003     bra	0xa6                 	BRA	_00141_DS_
                                           ;	.line	137; usb.c	if(UIEbits.IDLEIE && UIRbits.IDLEIF)
0000a0   b068     btfsc	0x68, 0, 0         	BTFSC	_UIRbits, 0
0000a2   ec88     call	0x1310, 0           	CALL	_reset_usb
0000a4   f009
                                           _00141_DS_:
0000a6   a869     btfss	0x69, 0x4, 0       	BTFSS	_UIEbits, 4
0000a8   d005     bra	0xb4                 	BRA	_00144_DS_
0000aa   a868     btfss	0x68, 0x4, 0       	BTFSS	_UIRbits, 4
0000ac   d003     bra	0xb4                 	BRA	_00144_DS_
                                           ;	.line	140; usb.c	UIEbits.ACTIVIE = 1;
0000ae   8469     bsf	0x69, 0x2, 0         	BSF	_UIEbits, 2
                                           ;	.line	141; usb.c	UIRbits.IDLEIF  = 0;
0000b0   9868     bcf	0x68, 0x4, 0         	BCF	_UIRbits, 4
                                           ;	.line	142; usb.c	UCONbits.SUSPND = 1;
0000b2   826d     bsf	0x6d, 0x1, 0         	BSF	_UCONbits, 1
                                           _00144_DS_:
                                           ;	.line	146; usb.c	if(UIEbits.STALLIE && UIRbits.STALLIF)
0000b4   aa69     btfss	0x69, 0x5, 0       	BTFSS	_UIEbits, 5
0000b6   d042     bra	0x13c                	BRA	_00149_DS_
0000b8   aa68     btfss	0x68, 0x5, 0       	BTFSS	_UIRbits, 5
0000ba   d040     bra	0x13c                	BRA	_00149_DS_
                                           ;	.line	151; usb.c	if(UEP0bits.EPSTALL == 1)
0000bc   6a00     clrf	0, 0                	CLRF	r0x00
0000be   b070     btfsc	0x70, 0, 0         	BTFSC	_UEP0bits, 0
0000c0   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0000c2   5000     movf	0, 0, 0             	MOVF	r0x00, W
0000c4   0a01     xorlw	0x1                	XORLW	0x01
0000c6   e139     bnz	0x13a                	BNZ	_00147_DS_
                                           ; ;multiply lit val:0x03 by variable _usb_active_cfg and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           ;	.line	153; usb.c	ep_init[GET_ACTIVE_CONFIGURATION()][0]();
0000c8   505e     movf	0x5e, 0, 0          	MOVF	_usb_active_cfg, W
0000ca   0d03     mullw	0x3                	MULLW	0x03
0000cc   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
0000ce   f000
0000d0   cff4     movff	0xff4, 0x1         	MOVFF	PRODH, r0x01
0000d2   f001
0000d4   0100     movlb	0                  	BANKSEL	_ep_init
0000d6   5184     movf	0x84, 0, 0x1        	MOVF	_ep_init, W, B
0000d8   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0000da   5185     movf	0x85, 0, 0x1        	MOVF	(_ep_init + 1), W, B
0000dc   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ; removed redundant BANKSEL
0000de   5186     movf	0x86, 0, 0x1        	MOVF	(_ep_init + 2), W, B
0000e0   6a02     clrf	0x2, 0              	CLRF	r0x02
0000e2   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0000e4   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0000e6   ffe9
0000e8   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0000ea   fff3
0000ec   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0000ee   ec9b     call	0x1736, 0           	CALL	__gptrget3
0000f0   f00b
0000f2   6e00     movwf	0, 0               	MOVWF	r0x00
0000f4   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
0000f6   f001
0000f8   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
0000fa   f002
0000fc   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0000fe   ffe9
000100   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
000102   fff3
000104   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
000106   ec9b     call	0x1736, 0           	CALL	__gptrget3
000108   f00b
00010a   6e00     movwf	0, 0               	MOVWF	r0x00
00010c   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
00010e   f001
000110   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
000112   f002
000114   cff2     movff	0xff2, 0xfe5       	MOVFF	INTCON, POSTDEC1
000116   ffe5
000118   9ef2     bcf	0xf2, 0x7, 0         	BCF	INTCON, 7
00011a   0005     push                     	PUSH	
00011c   0e38     movlw	0x38               	MOVLW	LOW(_00182_DS_)
00011e   6efd     movwf	0xfd, 0            	MOVWF	TOSL
000120   0e01     movlw	0x1                	MOVLW	HIGH(_00182_DS_)
000122   6efe     movwf	0xfe, 0            	MOVWF	TOSH
000124   0e00     movlw	0                  	MOVLW	UPPER(_00182_DS_)
000126   6eff     movwf	0xff, 0            	MOVWF	TOSU
000128   50e4     movf	0xe4, 0, 0          	MOVF	PREINC1, W
00012a   6ef2     movwf	0xf2, 0            	MOVWF	INTCON
00012c   c002     movff	0x2, 0xffb         	MOVFF	r0x02, PCLATU
00012e   fffb
000130   c001     movff	0x1, 0xffa         	MOVFF	r0x01, PCLATH
000132   fffa
000134   5000     movf	0, 0, 0             	MOVF	r0x00, W
000136   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00182_DS_:
                                           ;	.line	154; usb.c	UEP0bits.EPSTALL = 0;
000138   9070     bcf	0x70, 0, 0           	BCF	_UEP0bits, 0
                                           _00147_DS_:
                                           ;	.line	156; usb.c	UIRbits.STALLIF = 0;
00013a   9a68     bcf	0x68, 0x5, 0         	BCF	_UIRbits, 5
                                           _00149_DS_:
                                           ;	.line	162; usb.c	if((GET_DEVICE_STATE() >= DEFAULT_STATE) &&
00013c   0e03     movlw	0x3                	MOVLW	0x03
00013e   5c5f     subwf	0x5f, 0, 0         	SUBWF	_usb_device_state, W
000140   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
000142   d115     bra	0x36e                	BRA	_00163_DS_
                                           ;	.line	163; usb.c	UIEbits.TRNIE && UIRbits.TRNIF)
000144   a669     btfss	0x69, 0x3, 0       	BTFSS	_UIEbits, 3
000146   d113     bra	0x36e                	BRA	_00163_DS_
000148   a668     btfss	0x68, 0x3, 0       	BTFSS	_UIRbits, 3
00014a   d111     bra	0x36e                	BRA	_00163_DS_
                                           ;	.line	166; usb.c	if(USTATbits.DIR == OUT)
00014c   b46c     btfsc	0x6c, 0x2, 0       	BTFSC	_USTATbits, 2
00014e   d0b9     bra	0x2c2                	BRA	_00157_DS_
                                           ;	.line	168; usb.c	if(EP_OUT_BD(USTATbits.ENDP).Stat.PID == SETUP_TOKEN)
000150   506c     movf	0x6c, 0, 0          	MOVF	_USTATbits, W
000152   38e8     swapf	0xe8, 0, 0         	SWAPF	WREG, W
000154   44e8     rlncf	0xe8, 0, 0         	RLNCF	WREG, W
000156   0b0f     andlw	0xf                	ANDLW	0x0f
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
000158   6e00     movwf	0, 0               	MOVWF	r0x00
00015a   2400     addwf	0, 0, 0            	ADDWF	r0x00, W
                                           ; #	MOVWF	r0x01
                                           ; #;;multiply lit val:0x04 by variable r0x01 and store in r0x00
                                           ; #;;Unrolled 8 X 8 multiplication
                                           ; #;;FIXME: the function does not support result==WREG
                                           ; #	MOVF	r0x01, W
                                           ; ;     peep 2 - Removed redundant move
00015c   0d04     mullw	0x4                	MULLW	0x04
00015e   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
000160   f000
000162   0e00     movlw	0                  	MOVLW	LOW(_ep_bdt)
000164   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
000166   0e04     movlw	0x4                	MOVLW	HIGH(_ep_bdt)
000168   6a01     clrf	0x1, 0              	CLRF	r0x01
00016a   be00     btfsc	0, 0x7, 0          	BTFSC	r0x00, 7
00016c   6801     setf	0x1, 0              	SETF	r0x01
00016e   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
000170   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
000172   ffe9
000174   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
000176   ffea
000178   50ef     movf	0xef, 0, 0          	MOVF	INDF0, W
00017a   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
00017c   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
00017e   0b0f     andlw	0xf                	ANDLW	0x0f
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 2 - Removed redundant move
000180   0a0d     xorlw	0xd                	XORLW	0x0d
000182   e001     bz	0x186                 	BZ	_00185_DS_
000184   d04f     bra	0x224                	BRA	_00152_DS_
                                           ; ;multiply lit val:0x03 by variable _usb_active_cfg and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           _00185_DS_:
                                           ;	.line	171; usb.c	ep_setup[GET_ACTIVE_CONFIGURATION()][USTATbits.ENDP]();
000186   505e     movf	0x5e, 0, 0          	MOVF	_usb_active_cfg, W
000188   0d03     mullw	0x3                	MULLW	0x03
00018a   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
00018c   f000
00018e   cff4     movff	0xff4, 0x1         	MOVFF	PRODH, r0x01
000190   f001
000192   0100     movlb	0                  	BANKSEL	_ep_setup
000194   5187     movf	0x87, 0, 0x1        	MOVF	_ep_setup, W, B
000196   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
000198   5188     movf	0x88, 0, 0x1        	MOVF	(_ep_setup + 1), W, B
00019a   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ; removed redundant BANKSEL
00019c   5189     movf	0x89, 0, 0x1        	MOVF	(_ep_setup + 2), W, B
00019e   6a02     clrf	0x2, 0              	CLRF	r0x02
0001a0   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0001a2   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0001a4   ffe9
0001a6   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0001a8   fff3
0001aa   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0001ac   ec9b     call	0x1736, 0           	CALL	__gptrget3
0001ae   f00b
0001b0   6e00     movwf	0, 0               	MOVWF	r0x00
0001b2   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
0001b4   f001
0001b6   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
0001b8   f002
0001ba   506c     movf	0x6c, 0, 0          	MOVF	_USTATbits, W
0001bc   38e8     swapf	0xe8, 0, 0         	SWAPF	WREG, W
0001be   44e8     rlncf	0xe8, 0, 0         	RLNCF	WREG, W
0001c0   0b0f     andlw	0xf                	ANDLW	0x0f
0001c2   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0001c4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0001c6   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0001c8   0e03     movlw	0x3                	MOVLW	0x03
0001ca   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0001cc   ec55     call	0x14aa, 0           	CALL	__mulint
0001ce   f00a
0001d0   6e03     movwf	0x3, 0             	MOVWF	r0x03
0001d2   cff3     movff	0xff3, 0x4         	MOVFF	PRODL, r0x04
0001d4   f004
0001d6   0e04     movlw	0x4                	MOVLW	0x04
0001d8   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0001da   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
0001dc   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0001de   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0001e0   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0001e2   6ae8     clrf	0xe8, 0             	CLRF	WREG
0001e4   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0001e6   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0001e8   ffe9
0001ea   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0001ec   fff3
0001ee   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0001f0   ec9b     call	0x1736, 0           	CALL	__gptrget3
0001f2   f00b
0001f4   6e00     movwf	0, 0               	MOVWF	r0x00
0001f6   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
0001f8   f001
0001fa   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
0001fc   f002
0001fe   cff2     movff	0xff2, 0xfe5       	MOVFF	INTCON, POSTDEC1
000200   ffe5
000202   9ef2     bcf	0xf2, 0x7, 0         	BCF	INTCON, 7
000204   0005     push                     	PUSH	
000206   0e22     movlw	0x22               	MOVLW	LOW(_00186_DS_)
000208   6efd     movwf	0xfd, 0            	MOVWF	TOSL
00020a   0e02     movlw	0x2                	MOVLW	HIGH(_00186_DS_)
00020c   6efe     movwf	0xfe, 0            	MOVWF	TOSH
00020e   0e00     movlw	0                  	MOVLW	UPPER(_00186_DS_)
000210   6eff     movwf	0xff, 0            	MOVWF	TOSU
000212   50e4     movf	0xe4, 0, 0          	MOVF	PREINC1, W
000214   6ef2     movwf	0xf2, 0            	MOVWF	INTCON
000216   c002     movff	0x2, 0xffb         	MOVFF	r0x02, PCLATU
000218   fffb
00021a   c001     movff	0x1, 0xffa         	MOVFF	r0x01, PCLATH
00021c   fffa
00021e   5000     movf	0, 0, 0             	MOVF	r0x00, W
000220   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00186_DS_:
000222   d0a4     bra	0x36c                	BRA	_00158_DS_
                                           ; ;multiply lit val:0x03 by variable _usb_active_cfg and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           _00152_DS_:
                                           ;	.line	176; usb.c	ep_out[GET_ACTIVE_CONFIGURATION()][USTATbits.ENDP]();
000224   505e     movf	0x5e, 0, 0          	MOVF	_usb_active_cfg, W
000226   0d03     mullw	0x3                	MULLW	0x03
000228   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
00022a   f000
00022c   cff4     movff	0xff4, 0x1         	MOVFF	PRODH, r0x01
00022e   f001
000230   0100     movlb	0                  	BANKSEL	_ep_out
000232   518a     movf	0x8a, 0, 0x1        	MOVF	_ep_out, W, B
000234   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
000236   518b     movf	0x8b, 0, 0x1        	MOVF	(_ep_out + 1), W, B
000238   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ; removed redundant BANKSEL
00023a   518c     movf	0x8c, 0, 0x1        	MOVF	(_ep_out + 2), W, B
00023c   6a02     clrf	0x2, 0              	CLRF	r0x02
00023e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
000240   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
000242   ffe9
000244   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
000246   fff3
000248   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00024a   ec9b     call	0x1736, 0           	CALL	__gptrget3
00024c   f00b
00024e   6e00     movwf	0, 0               	MOVWF	r0x00
000250   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
000252   f001
000254   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
000256   f002
000258   506c     movf	0x6c, 0, 0          	MOVF	_USTATbits, W
00025a   38e8     swapf	0xe8, 0, 0         	SWAPF	WREG, W
00025c   44e8     rlncf	0xe8, 0, 0         	RLNCF	WREG, W
00025e   0b0f     andlw	0xf                	ANDLW	0x0f
000260   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
000262   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000264   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
000266   0e03     movlw	0x3                	MOVLW	0x03
000268   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00026a   ec55     call	0x14aa, 0           	CALL	__mulint
00026c   f00a
00026e   6e03     movwf	0x3, 0             	MOVWF	r0x03
000270   cff3     movff	0xff3, 0x4         	MOVFF	PRODL, r0x04
000272   f004
000274   0e04     movlw	0x4                	MOVLW	0x04
000276   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
000278   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
00027a   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00027c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00027e   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
000280   6ae8     clrf	0xe8, 0             	CLRF	WREG
000282   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
000284   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
000286   ffe9
000288   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
00028a   fff3
00028c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00028e   ec9b     call	0x1736, 0           	CALL	__gptrget3
000290   f00b
000292   6e00     movwf	0, 0               	MOVWF	r0x00
000294   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
000296   f001
000298   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
00029a   f002
00029c   cff2     movff	0xff2, 0xfe5       	MOVFF	INTCON, POSTDEC1
00029e   ffe5
0002a0   9ef2     bcf	0xf2, 0x7, 0         	BCF	INTCON, 7
0002a2   0005     push                     	PUSH	
0002a4   0ec0     movlw	0xc0               	MOVLW	LOW(_00187_DS_)
0002a6   6efd     movwf	0xfd, 0            	MOVWF	TOSL
0002a8   0e02     movlw	0x2                	MOVLW	HIGH(_00187_DS_)
0002aa   6efe     movwf	0xfe, 0            	MOVWF	TOSH
0002ac   0e00     movlw	0                  	MOVLW	UPPER(_00187_DS_)
0002ae   6eff     movwf	0xff, 0            	MOVWF	TOSU
0002b0   50e4     movf	0xe4, 0, 0          	MOVF	PREINC1, W
0002b2   6ef2     movwf	0xf2, 0            	MOVWF	INTCON
0002b4   c002     movff	0x2, 0xffb         	MOVFF	r0x02, PCLATU
0002b6   fffb
0002b8   c001     movff	0x1, 0xffa         	MOVFF	r0x01, PCLATH
0002ba   fffa
0002bc   5000     movf	0, 0, 0             	MOVF	r0x00, W
0002be   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00187_DS_:
0002c0   d055     bra	0x36c                	BRA	_00158_DS_
                                           _00157_DS_:
                                           ;	.line	179; usb.c	else if(USTATbits.DIR == IN)
0002c2   6a00     clrf	0, 0                	CLRF	r0x00
0002c4   b46c     btfsc	0x6c, 0x2, 0       	BTFSC	_USTATbits, 2
0002c6   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0002c8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0002ca   0a01     xorlw	0x1                	XORLW	0x01
0002cc   e001     bz	0x2d0                 	BZ	_00189_DS_
0002ce   d04e     bra	0x36c                	BRA	_00158_DS_
                                           ; ;multiply lit val:0x03 by variable _usb_active_cfg and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
                                           _00189_DS_:
                                           ;	.line	182; usb.c	ep_in[GET_ACTIVE_CONFIGURATION()][USTATbits.ENDP]();
0002d0   505e     movf	0x5e, 0, 0          	MOVF	_usb_active_cfg, W
0002d2   0d03     mullw	0x3                	MULLW	0x03
0002d4   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
0002d6   f000
0002d8   cff4     movff	0xff4, 0x1         	MOVFF	PRODH, r0x01
0002da   f001
0002dc   0100     movlb	0                  	BANKSEL	_ep_in
0002de   518d     movf	0x8d, 0, 0x1        	MOVF	_ep_in, W, B
0002e0   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0002e2   518e     movf	0x8e, 0, 0x1        	MOVF	(_ep_in + 1), W, B
0002e4   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ; removed redundant BANKSEL
0002e6   518f     movf	0x8f, 0, 0x1        	MOVF	(_ep_in + 2), W, B
0002e8   6a02     clrf	0x2, 0              	CLRF	r0x02
0002ea   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0002ec   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0002ee   ffe9
0002f0   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0002f2   fff3
0002f4   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0002f6   ec9b     call	0x1736, 0           	CALL	__gptrget3
0002f8   f00b
0002fa   6e00     movwf	0, 0               	MOVWF	r0x00
0002fc   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
0002fe   f001
000300   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
000302   f002
000304   506c     movf	0x6c, 0, 0          	MOVF	_USTATbits, W
000306   38e8     swapf	0xe8, 0, 0         	SWAPF	WREG, W
000308   44e8     rlncf	0xe8, 0, 0         	RLNCF	WREG, W
00030a   0b0f     andlw	0xf                	ANDLW	0x0f
00030c   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00030e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000310   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
000312   0e03     movlw	0x3                	MOVLW	0x03
000314   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000316   ec55     call	0x14aa, 0           	CALL	__mulint
000318   f00a
00031a   6e03     movwf	0x3, 0             	MOVWF	r0x03
00031c   cff3     movff	0xff3, 0x4         	MOVFF	PRODL, r0x04
00031e   f004
000320   0e04     movlw	0x4                	MOVLW	0x04
000322   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
000324   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
000326   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
000328   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00032a   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
00032c   6ae8     clrf	0xe8, 0             	CLRF	WREG
00032e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
000330   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
000332   ffe9
000334   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
000336   fff3
000338   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00033a   ec9b     call	0x1736, 0           	CALL	__gptrget3
00033c   f00b
00033e   6e00     movwf	0, 0               	MOVWF	r0x00
000340   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
000342   f001
000344   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
000346   f002
000348   cff2     movff	0xff2, 0xfe5       	MOVFF	INTCON, POSTDEC1
00034a   ffe5
00034c   9ef2     bcf	0xf2, 0x7, 0         	BCF	INTCON, 7
00034e   0005     push                     	PUSH	
000350   0e6c     movlw	0x6c               	MOVLW	LOW(_00190_DS_)
000352   6efd     movwf	0xfd, 0            	MOVWF	TOSL
000354   0e03     movlw	0x3                	MOVLW	HIGH(_00190_DS_)
000356   6efe     movwf	0xfe, 0            	MOVWF	TOSH
000358   0e00     movlw	0                  	MOVLW	UPPER(_00190_DS_)
00035a   6eff     movwf	0xff, 0            	MOVWF	TOSU
00035c   50e4     movf	0xe4, 0, 0          	MOVF	PREINC1, W
00035e   6ef2     movwf	0xf2, 0            	MOVWF	INTCON
000360   c002     movff	0x2, 0xffb         	MOVFF	r0x02, PCLATU
000362   fffb
000364   c001     movff	0x1, 0xffa         	MOVFF	r0x01, PCLATH
000366   fffa
000368   5000     movf	0, 0, 0             	MOVF	r0x00, W
00036a   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00190_DS_:
                                           _00158_DS_:
                                           ;	.line	186; usb.c	UIRbits.TRNIF = 0;
00036c   9668     bcf	0x68, 0x3, 0         	BCF	_UIRbits, 3
                                           _00163_DS_:
00036e   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
000370   f004
000372   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
000374   f003
000376   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
000378   f002
00037a   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00037c   f001
00037e   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
000380   f000
000382   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usb__usb_sleep	code
                                           _usb_sleep:
                                           ;	.line	103; usb.c	void usb_sleep(void)
001816   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
001818   ffe5
00181a   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00181c   ffd9
                                           ;	.line	107; usb.c	if(UCONbits.SUSPND)
00181e   a26d     btfss	0x6d, 0x1, 0       	BTFSS	_UCONbits, 1
001820   d003     bra	0x1828               	BRA	_00132_DS_
                                           ;	.line	114; usb.c	PIE2bits.USBIE = 1; 
001822   8aa0     bsf	0xa0, 0x5, 0         	BSF	_PIE2bits, 5
001824   0003     sleep                    	sleep 
                                           ;	.line	116; usb.c	PIR2bits.USBIF = 0;
001826   9aa1     bcf	0xa1, 0x5, 0         	BCF	_PIR2bits, 5
                                           _00132_DS_:
001828   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
00182a   ffd9
00182c   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usb__reset_usb	code
                                           _reset_usb:
                                           ;	.line	68; usb.c	void reset_usb(void)
001310   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
001312   ffe5
001314   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
001316   ffe5
001318   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00131a   ffe5
00131c   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
00131e   ffe5
001320   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
001322   ffe5
                                           ;	.line	73; usb.c	UIR = 0;
001324   6a68     clrf	0x68, 0             	CLRF	_UIR
                                           ;	.line	74; usb.c	UIE = 0x7b;
001326   0e7b     movlw	0x7b               	MOVLW	0x7b
001328   6e69     movwf	0x69, 0            	MOVWF	_UIE
                                           ;	.line	75; usb.c	UEIE = 0;
00132a   6a6b     clrf	0x6b, 0             	CLRF	_UEIE
                                           ;	.line	76; usb.c	UADDR = 0x00;
00132c   6a6e     clrf	0x6e, 0             	CLRF	_UADDR
                                           _00110_DS_:
                                           ;	.line	78; usb.c	while(UIRbits.TRNIF)
00132e   a668     btfss	0x68, 0x3, 0       	BTFSS	_UIRbits, 3
001330   d002     bra	0x1336               	BRA	_00112_DS_
                                           ;	.line	80; usb.c	UIRbits.TRNIF = 0;
001332   9668     bcf	0x68, 0x3, 0         	BCF	_UIRbits, 3
001334   d7fc     bra	0x132e               	BRA	_00110_DS_
                                           _00112_DS_:
                                           ;	.line	84; usb.c	SET_DEVICE_STATE(DEFAULT_STATE);
001336   0e03     movlw	0x3                	MOVLW	0x03
001338   6e5f     movwf	0x5f, 0            	MOVWF	_usb_device_state
                                           ;	.line	87; usb.c	SET_ACTIVE_CONFIGURATION(0);
00133a   6a5e     clrf	0x5e, 0             	CLRF	_usb_active_cfg
                                           ;	.line	88; usb.c	SET_ACTIVE_ALTERNATE_SETTING(0);
00133c   6a5d     clrf	0x5d, 0             	CLRF	_usb_active_alt_setting
                                           ;	.line	90; usb.c	UEP0  = 0; UEP1  = 0; UEP2  = 0; UEP3  = 0;
00133e   6a70     clrf	0x70, 0             	CLRF	_UEP0
001340   6a71     clrf	0x71, 0             	CLRF	_UEP1
001342   6a72     clrf	0x72, 0             	CLRF	_UEP2
001344   6a73     clrf	0x73, 0             	CLRF	_UEP3
                                           ;	.line	91; usb.c	UEP4  = 0; UEP5  = 0; UEP6  = 0; UEP7  = 0;
001346   6a74     clrf	0x74, 0             	CLRF	_UEP4
001348   6a75     clrf	0x75, 0             	CLRF	_UEP5
00134a   6a76     clrf	0x76, 0             	CLRF	_UEP6
00134c   6a77     clrf	0x77, 0             	CLRF	_UEP7
                                           ;	.line	92; usb.c	UEP8  = 0; UEP9  = 0; UEP10 = 0; UEP11 = 0;
00134e   6a78     clrf	0x78, 0             	CLRF	_UEP8
001350   6a79     clrf	0x79, 0             	CLRF	_UEP9
001352   6a7a     clrf	0x7a, 0             	CLRF	_UEP10
001354   6a7b     clrf	0x7b, 0             	CLRF	_UEP11
                                           ;	.line	93; usb.c	UEP12 = 0; UEP13 = 0; UEP14 = 0; UEP15 = 0;
001356   6a7c     clrf	0x7c, 0             	CLRF	_UEP12
001358   6a7d     clrf	0x7d, 0             	CLRF	_UEP13
00135a   6a7e     clrf	0x7e, 0             	CLRF	_UEP14
00135c   6a7f     clrf	0x7f, 0             	CLRF	_UEP15
                                           ;	.line	95; usb.c	UCONbits.PKTDIS = 0;
00135e   986d     bcf	0x6d, 0x4, 0         	BCF	_UCONbits, 4
                                           ;	.line	97; usb.c	for(i = 0; i < 16; i++)
001360   0e10     movlw	0x10               	MOVLW	0x10
001362   0100     movlb	0                  	BANKSEL	_reset_usb_i_1_1
001364   6fa2     movwf	0xa2, 0x1          	MOVWF	_reset_usb_i_1_1, B
                                           _00115_DS_:
                                           ;	.line	99; usb.c	ep_init[0][i]();
001366   c084     movff	0x84, 0            	MOVFF	_ep_init, r0x00
001368   f000
00136a   c085     movff	0x85, 0x1          	MOVFF	(_ep_init + 1), r0x01
00136c   f001
00136e   c086     movff	0x86, 0x2          	MOVFF	(_ep_init + 2), r0x02
001370   f002
001372   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
001374   ffe9
001376   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
001378   fff3
00137a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00137c   ec9b     call	0x1736, 0           	CALL	__gptrget3
00137e   f00b
001380   6e00     movwf	0, 0               	MOVWF	r0x00
001382   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
001384   f001
001386   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
001388   f002
00138a   0100     movlb	0                  	BANKSEL	_reset_usb_i_1_1
00138c   05a2     decf	0xa2, 0, 0x1        	DECF	_reset_usb_i_1_1, W, B
                                           ; #	MOVWF	r0x03
                                           ; #;;multiply lit val:0x03 by variable r0x03 and store in r0x03
                                           ; #;;Unrolled 8 X 8 multiplication
                                           ; #;;FIXME: the function does not support result==WREG
                                           ; #	MOVF	r0x03, W
                                           ; ;     peep 2 - Removed redundant move
00138e   0d03     mullw	0x3                	MULLW	0x03
001390   cff3     movff	0xff3, 0x3         	MOVFF	PRODL, r0x03
001392   f003
001394   cff4     movff	0xff4, 0x4         	MOVFF	PRODH, r0x04
001396   f004
001398   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
00139a   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00139c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00139e   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0013a0   6ae8     clrf	0xe8, 0             	CLRF	WREG
0013a2   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0013a4   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0013a6   ffe9
0013a8   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0013aa   fff3
0013ac   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0013ae   ec9b     call	0x1736, 0           	CALL	__gptrget3
0013b0   f00b
0013b2   6e00     movwf	0, 0               	MOVWF	r0x00
0013b4   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
0013b6   f001
0013b8   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
0013ba   f002
0013bc   cff2     movff	0xff2, 0xfe5       	MOVFF	INTCON, POSTDEC1
0013be   ffe5
0013c0   9ef2     bcf	0xf2, 0x7, 0         	BCF	INTCON, 7
0013c2   0005     push                     	PUSH	
0013c4   0ee0     movlw	0xe0               	MOVLW	LOW(_00122_DS_)
0013c6   6efd     movwf	0xfd, 0            	MOVWF	TOSL
0013c8   0e13     movlw	0x13               	MOVLW	HIGH(_00122_DS_)
0013ca   6efe     movwf	0xfe, 0            	MOVWF	TOSH
0013cc   0e00     movlw	0                  	MOVLW	UPPER(_00122_DS_)
0013ce   6eff     movwf	0xff, 0            	MOVWF	TOSU
0013d0   50e4     movf	0xe4, 0, 0          	MOVF	PREINC1, W
0013d2   6ef2     movwf	0xf2, 0            	MOVWF	INTCON
0013d4   c002     movff	0x2, 0xffb         	MOVFF	r0x02, PCLATU
0013d6   fffb
0013d8   c001     movff	0x1, 0xffa         	MOVFF	r0x01, PCLATH
0013da   fffa
0013dc   5000     movf	0, 0, 0             	MOVF	r0x00, W
0013de   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00122_DS_:
0013e0   0100     movlb	0                  	BANKSEL	_reset_usb_i_1_1
0013e2   07a2     decf	0xa2, 0x1, 0x1      	DECF	_reset_usb_i_1_1, F, B
                                           ;	.line	97; usb.c	for(i = 0; i < 16; i++)
0013e4   51a2     movf	0xa2, 0, 0x1        	MOVF	_reset_usb_i_1_1, W, B
0013e6   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
0013e8   d7be     bra	0x1366               	BRA	_00115_DS_
0013ea   0e10     movlw	0x10               	MOVLW	0x10
                                           ; removed redundant BANKSEL
0013ec   6fa2     movwf	0xa2, 0x1          	MOVWF	_reset_usb_i_1_1, B
0013ee   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0013f0   f004
0013f2   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0013f4   f003
0013f6   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0013f8   f002
0013fa   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0013fc   f001
0013fe   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
001400   f000
001402   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_usb__init_usb	code
                                           _init_usb:
                                           ;	.line	53; usb.c	UIE  = 0;
0017dc   6a69     clrf	0x69, 0             	CLRF	_UIE
                                           ;	.line	54; usb.c	UCFG = 0x14;
0017de   0e14     movlw	0x14               	MOVLW	0x14
0017e0   6e6f     movwf	0x6f, 0            	MOVWF	_UCFG
                                           ;	.line	55; usb.c	UCON = 0x08;
0017e2   0e08     movlw	0x8                	MOVLW	0x08
0017e4   6e6d     movwf	0x6d, 0            	MOVWF	_UCON
                                           _00105_DS_:
                                           ;	.line	56; usb.c	while(UCONbits.SE0);
0017e6   ba6d     btfsc	0x6d, 0x5, 0       	BTFSC	_UCONbits, 5
0017e8   d7fe     bra	0x17e6               	BRA	_00105_DS_
                                           ;	.line	57; usb.c	UIR  = 0;
0017ea   6a68     clrf	0x68, 0             	CLRF	_UIR
                                           ;	.line	58; usb.c	UIE  = 0x11;
0017ec   0e11     movlw	0x11               	MOVLW	0x11
0017ee   6e69     movwf	0x69, 0            	MOVWF	_UIE
                                           ;	.line	61; usb.c	SET_DEVICE_STATE(POWERED_STATE);
0017f0   0e02     movlw	0x2                	MOVLW	0x02
0017f2   6e5f     movwf	0x5f, 0            	MOVWF	_usb_device_state
                                           ;	.line	64; usb.c	SET_ACTIVE_CONFIGURATION(0);
0017f4   6a5e     clrf	0x5e, 0             	CLRF	_usb_active_cfg
                                           ;	.line	65; usb.c	SET_ACTIVE_ALTERNATE_SETTING(0);
0017f6   6a5d     clrf	0x5d, 0             	CLRF	_usb_active_alt_setting
0017f8   0012     return	0                 	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 1562 (0x061a) bytes ( 1.19%)
                                           ;           	  781 (0x030d) words
                                           ; udata size:	  158 (0x009e) bytes ( 8.82%)
                                           ; access size:	   12 (0x000c) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue Apr 14 19:33:59 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _null_function
                                           	global _boot_device_descriptor
                                           	global _boot_default_cfg
                                           	global _boot_flash_cfg
                                           	global _boot_configuration_descriptor
                                           	global _str0
                                           	global _str1
                                           	global _str2
                                           	global _str3
                                           	global _str4
                                           	global _str5
                                           	global _boot_string_descriptor
                                           	global _boot_ep_init
                                           	global _boot_ep_in
                                           	global _boot_ep_out
                                           	global _boot_ep_setup
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _section_descriptor
                                           	extern _ep0_init
                                           	extern _ep1_init
                                           	extern _ep2_init
                                           	extern _ep0_in
                                           	extern _ep2_in
                                           	extern _ep1_out
                                           	extern _ep0_setup
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_usb_descriptors__null_function	code
                                           _null_function:
001890   0012     return	0                 	return
                                           	
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _boot_device_descriptor:
000384   0112     movlb	0x12               	DB	0x12, 0x01, 0x00, 0x02, 0xff, 0x00, 0xff, 0x08, 0xa5, 0xa5, 0x01, 0x00
000386   0200     mulwf	0, 0               
000388   00ff     reset                    
00038a   08ff     sublw	0xff               
00038c   a5a5     btfss	0xa5, 0x2, 0x1     
00038e   0001     dw	0x1  ;unknown opcode  
000390   0100     movlb	0                  	DB	0x00, 0x01, 0x01, 0x02, 0x03, 0x02
000392   0201     mulwf	0x1, 0             
000394   0203     mulwf	0x3, 0             
                                           ; ; Starting pCode block for Ival
                                           _boot_default_cfg:
000396   0209     mulwf	0x9, 0             	DB	0x09, 0x02, 0x12, 0x00, 0x01, 0x01, 0x04, 0xc0, 0x00, 0x09, 0x04, 0x00
000398   0012     return	0                 
00039a   0101     movlb	0x1                
00039c   c004     movff	0x4, 0x900         
00039e   0900
0003a0   0004     clrwdt                   
0003a2   0000     nop                      	DB	0x00, 0x00, 0xff, 0xff, 0xff, 0x04
0003a4   ffff     dw	0xffff  ;unknown opcode 
0003a6   04ff     decf	0xff, 0, 0          
                                           ; ; Starting pCode block for Ival
                                           _boot_flash_cfg:
0003a8   0209     mulwf	0x9, 0             	DB	0x09, 0x02, 0x20, 0x00, 0x01, 0x02, 0x05, 0xc0, 0x00, 0x09, 0x04, 0x00
0003aa   0020     dw	0x20  ;unknown opcode 
0003ac   0201     mulwf	0x1, 0             
0003ae   c005     movff	0x5, 0x900         
0003b0   0900
0003b2   0004     clrwdt                   
0003b4   0200     mulwf	0, 0               	DB	0x00, 0x02, 0xff, 0xff, 0xff, 0x05, 0x07, 0x05, 0x01, 0x02, 0x40, 0x00
0003b6   ffff     dw	0xffff  ;unknown opcode 
0003b8   05ff     decf	0xff, 0, 0x1        
0003ba   0507     decf	0x7, 0, 0x1         
0003bc   0201     mulwf	0x1, 0             
0003be   0040     dw	0x40  ;unknown opcode 
0003c0   0700     decf	0, 0x1, 0x1         	DB	0x00, 0x07, 0x05, 0x82, 0x02, 0x40, 0x00, 0x00
0003c2   8205     bsf	0x5, 0x1, 0          
0003c4   4002     rrncf	0x2, 0, 0          
0003c6   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _boot_configuration_descriptor:
0003c8   0396     mulwf	0x96, 0x1          	DB	LOW(_boot_default_cfg), HIGH(_boot_default_cfg), UPPER(_boot_default_cfg), LOW(_boot_flash_cfg), HIGH(_boot_flash_cfg), UPPER(_boot_flash_cfg)
0003ca   a800     btfss	0, 0x4, 0          
0003cc   0003     sleep                    
                                           ; ; Starting pCode block for Ival
                                           _str0:
0003ce   0304     mulwf	0x4, 0x1           	DB	0x04, 0x03, 0x09, 0x04
0003d0   0409     decf	0x9, 0, 0           
                                           ; ; Starting pCode block for Ival
                                           _str1:
0003d2   031c     mulwf	0x1c, 0x1          	DB	0x1c, 0x03, 0x56, 0x00, 0x61, 0x00, 0x73, 0x00, 0x63, 0x00, 0x6f, 0x00
0003d4   0056     dw	0x56  ;unknown opcode 
0003d6   0061     dw	0x61  ;unknown opcode 
0003d8   0073     dw	0x73  ;unknown opcode 
0003da   0063     dw	0x63  ;unknown opcode 
0003dc   006f     dw	0x6f  ;unknown opcode 
0003de   0020     dw	0x20  ;unknown opcode 	DB	0x20, 0x00, 0x50, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x6a, 0x00, 0x65, 0x00
0003e0   0050     dw	0x50  ;unknown opcode 
0003e2   0072     dw	0x72  ;unknown opcode 
0003e4   006f     dw	0x6f  ;unknown opcode 
0003e6   006a     dw	0x6a  ;unknown opcode 
0003e8   0065     dw	0x65  ;unknown opcode 
0003ea   0063     dw	0x63  ;unknown opcode 	DB	0x63, 0x00, 0x74, 0x00
0003ec   0074     dw	0x74  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _str2:
0003ee   0324     mulwf	0x24, 0x1          	DB	0x24, 0x03, 0x50, 0x00, 0x65, 0x00, 0x72, 0x00, 0x69, 0x00, 0x70, 0x00
0003f0   0050     dw	0x50  ;unknown opcode 
0003f2   0065     dw	0x65  ;unknown opcode 
0003f4   0072     dw	0x72  ;unknown opcode 
0003f6   0069     dw	0x69  ;unknown opcode 
0003f8   0070     dw	0x70  ;unknown opcode 
0003fa   0068     dw	0x68  ;unknown opcode 	DB	0x68, 0x00, 0x65, 0x00, 0x72, 0x00, 0x61, 0x00, 0x6c, 0x00, 0x20, 0x00
0003fc   0065     dw	0x65  ;unknown opcode 
0003fe   0072     dw	0x72  ;unknown opcode 
000400   0061     dw	0x61  ;unknown opcode 
000402   006c     dw	0x6c  ;unknown opcode 
000404   0020     dw	0x20  ;unknown opcode 
000406   006d     dw	0x6d  ;unknown opcode 	DB	0x6d, 0x00, 0x6f, 0x00, 0x64, 0x00, 0x75, 0x00, 0x6c, 0x00, 0x65, 0x00
000408   006f     dw	0x6f  ;unknown opcode 
00040a   0064     dw	0x64  ;unknown opcode 
00040c   0075     dw	0x75  ;unknown opcode 
00040e   006c     dw	0x6c  ;unknown opcode 
000410   0065     dw	0x65  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _str3:
000412   0304     mulwf	0x4, 0x1           	DB	0x04, 0x03, 0x31, 0x00
000414   0031     dw	0x31  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _str4:
000416   0310     mulwf	0x10, 0x1          	DB	0x10, 0x03, 0x44, 0x00, 0x65, 0x00, 0x66, 0x00, 0x61, 0x00, 0x75, 0x00
000418   0044     dw	0x44  ;unknown opcode 
00041a   0065     dw	0x65  ;unknown opcode 
00041c   0066     dw	0x66  ;unknown opcode 
00041e   0061     dw	0x61  ;unknown opcode 
000420   0075     dw	0x75  ;unknown opcode 
000422   006c     dw	0x6c  ;unknown opcode 	DB	0x6c, 0x00, 0x74, 0x00
000424   0074     dw	0x74  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _str5:
000426   030c     mulwf	0xc, 0x1           	DB	0x0c, 0x03, 0x46, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x73, 0x00, 0x68, 0x00
000428   0046     dw	0x46  ;unknown opcode 
00042a   006c     dw	0x6c  ;unknown opcode 
00042c   0061     dw	0x61  ;unknown opcode 
00042e   0073     dw	0x73  ;unknown opcode 
000430   0068     dw	0x68  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _boot_string_descriptor:
000432   03ce     mulwf	0xce, 0x1          	DB	LOW(_str0), HIGH(_str0), UPPER(_str0), LOW(_str1), HIGH(_str1), UPPER(_str1), LOW(_str2), HIGH(_str2), UPPER(_str2), LOW(_str3), HIGH(_str3), UPPER(_str3)
000434   d200     bra	0x836                
000436   0003     sleep                    
000438   03ee     mulwf	0xee, 0x1          
00043a   1200     iorwf	0, 0x1, 0          
00043c   0004     clrwdt                   
00043e   0416     decf	0x16, 0, 0          	DB	LOW(_str4), HIGH(_str4), UPPER(_str4), LOW(_str5), HIGH(_str5), UPPER(_str5)
000440   2600     addwf	0, 0x1, 0          
000442   0004     clrwdt                   
                                           ; ; Starting pCode block for Ival
                                           _boot_ep_init_cfg0:
000444   1700     andwf	0, 0x1, 0x1        	DB	LOW(_ep0_init), HIGH(_ep0_init), UPPER(_ep0_init), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
000446   9000     bcf	0, 0, 0              
000448   0018     dw	0x18  ;unknown opcode 
00044a   1890     xorwf	0x90, 0, 0         
00044c   9000     bcf	0, 0, 0              
00044e   0018     dw	0x18  ;unknown opcode 
000450   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
000452   9000     bcf	0, 0, 0              
000454   0018     dw	0x18  ;unknown opcode 
000456   1890     xorwf	0x90, 0, 0         
000458   9000     bcf	0, 0, 0              
00045a   0018     dw	0x18  ;unknown opcode 
00045c   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00045e   9000     bcf	0, 0, 0              
000460   0018     dw	0x18  ;unknown opcode 
000462   1890     xorwf	0x90, 0, 0         
000464   9000     bcf	0, 0, 0              
000466   0018     dw	0x18  ;unknown opcode 
000468   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00046a   9000     bcf	0, 0, 0              
00046c   0018     dw	0x18  ;unknown opcode 
00046e   1890     xorwf	0x90, 0, 0         
000470   9000     bcf	0, 0, 0              
000472   0018     dw	0x18  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _boot_ep_init_cfg1:
000474   1700     andwf	0, 0x1, 0x1        	DB	LOW(_ep0_init), HIGH(_ep0_init), UPPER(_ep0_init), LOW(_ep1_init), HIGH(_ep1_init), UPPER(_ep1_init), LOW(_ep2_init), HIGH(_ep2_init), UPPER(_ep2_init), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
000476   4600     rlncf	0, 0x1, 0          
000478   0018     dw	0x18  ;unknown opcode 
00047a   1884     xorwf	0x84, 0, 0         
00047c   9000     bcf	0, 0, 0              
00047e   0018     dw	0x18  ;unknown opcode 
000480   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
000482   9000     bcf	0, 0, 0              
000484   0018     dw	0x18  ;unknown opcode 
000486   1890     xorwf	0x90, 0, 0         
000488   9000     bcf	0, 0, 0              
00048a   0018     dw	0x18  ;unknown opcode 
00048c   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00048e   9000     bcf	0, 0, 0              
000490   0018     dw	0x18  ;unknown opcode 
000492   1890     xorwf	0x90, 0, 0         
000494   9000     bcf	0, 0, 0              
000496   0018     dw	0x18  ;unknown opcode 
000498   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00049a   9000     bcf	0, 0, 0              
00049c   0018     dw	0x18  ;unknown opcode 
00049e   1890     xorwf	0x90, 0, 0         
0004a0   9000     bcf	0, 0, 0              
0004a2   0018     dw	0x18  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _boot_ep_init:
0004a4   0444     decf	0x44, 0, 0          	DB	LOW(_boot_ep_init_cfg0), HIGH(_boot_ep_init_cfg0), UPPER(_boot_ep_init_cfg0), LOW(_boot_ep_init_cfg0), HIGH(_boot_ep_init_cfg0), UPPER(_boot_ep_init_cfg0), LOW(_boot_ep_init_cfg1), HIGH(_boot_ep_init_cfg1), UPPER(_boot_ep_init_cfg1)
0004a6   4400     rlncf	0, 0, 0            
0004a8   0004     clrwdt                   
0004aa   0474     decf	0x74, 0, 0          
0004ac   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _boot_ep_in_cfg0:
0004ae   0898     sublw	0x98               	DB	LOW(_ep0_in), HIGH(_ep0_in), UPPER(_ep0_in), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0004b0   9000     bcf	0, 0, 0              
0004b2   0018     dw	0x18  ;unknown opcode 
0004b4   1890     xorwf	0x90, 0, 0         
0004b6   9000     bcf	0, 0, 0              
0004b8   0018     dw	0x18  ;unknown opcode 
0004ba   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0004bc   9000     bcf	0, 0, 0              
0004be   0018     dw	0x18  ;unknown opcode 
0004c0   1890     xorwf	0x90, 0, 0         
0004c2   9000     bcf	0, 0, 0              
0004c4   0018     dw	0x18  ;unknown opcode 
0004c6   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0004c8   9000     bcf	0, 0, 0              
0004ca   0018     dw	0x18  ;unknown opcode 
0004cc   1890     xorwf	0x90, 0, 0         
0004ce   9000     bcf	0, 0, 0              
0004d0   0018     dw	0x18  ;unknown opcode 
0004d2   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0004d4   9000     bcf	0, 0, 0              
0004d6   0018     dw	0x18  ;unknown opcode 
0004d8   1890     xorwf	0x90, 0, 0         
0004da   9000     bcf	0, 0, 0              
0004dc   0018     dw	0x18  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _boot_ep_in_cfg1:
0004de   0898     sublw	0x98               	DB	LOW(_ep0_in), HIGH(_ep0_in), UPPER(_ep0_in), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_ep2_in), HIGH(_ep2_in), UPPER(_ep2_in), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0004e0   9000     bcf	0, 0, 0              
0004e2   0018     dw	0x18  ;unknown opcode 
0004e4   1404     andwf	0x4, 0, 0          
0004e6   9000     bcf	0, 0, 0              
0004e8   0018     dw	0x18  ;unknown opcode 
0004ea   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0004ec   9000     bcf	0, 0, 0              
0004ee   0018     dw	0x18  ;unknown opcode 
0004f0   1890     xorwf	0x90, 0, 0         
0004f2   9000     bcf	0, 0, 0              
0004f4   0018     dw	0x18  ;unknown opcode 
0004f6   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0004f8   9000     bcf	0, 0, 0              
0004fa   0018     dw	0x18  ;unknown opcode 
0004fc   1890     xorwf	0x90, 0, 0         
0004fe   9000     bcf	0, 0, 0              
000500   0018     dw	0x18  ;unknown opcode 
000502   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
000504   9000     bcf	0, 0, 0              
000506   0018     dw	0x18  ;unknown opcode 
000508   1890     xorwf	0x90, 0, 0         
00050a   9000     bcf	0, 0, 0              
00050c   0018     dw	0x18  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _boot_ep_in:
00050e   04ae     decf	0xae, 0, 0          	DB	LOW(_boot_ep_in_cfg0), HIGH(_boot_ep_in_cfg0), UPPER(_boot_ep_in_cfg0), LOW(_boot_ep_in_cfg0), HIGH(_boot_ep_in_cfg0), UPPER(_boot_ep_in_cfg0), LOW(_boot_ep_in_cfg1), HIGH(_boot_ep_in_cfg1), UPPER(_boot_ep_in_cfg1)
000510   ae00     btfss	0, 0x7, 0          
000512   0004     clrwdt                   
000514   04de     decf	0xde, 0, 0          
000516   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _boot_ep_out_cfg0:
000518   1700     andwf	0, 0x1, 0x1        	DB	LOW(_ep0_init), HIGH(_ep0_init), UPPER(_ep0_init), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00051a   9000     bcf	0, 0, 0              
00051c   0018     dw	0x18  ;unknown opcode 
00051e   1890     xorwf	0x90, 0, 0         
000520   9000     bcf	0, 0, 0              
000522   0018     dw	0x18  ;unknown opcode 
000524   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
000526   9000     bcf	0, 0, 0              
000528   0018     dw	0x18  ;unknown opcode 
00052a   1890     xorwf	0x90, 0, 0         
00052c   9000     bcf	0, 0, 0              
00052e   0018     dw	0x18  ;unknown opcode 
000530   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
000532   9000     bcf	0, 0, 0              
000534   0018     dw	0x18  ;unknown opcode 
000536   1890     xorwf	0x90, 0, 0         
000538   9000     bcf	0, 0, 0              
00053a   0018     dw	0x18  ;unknown opcode 
00053c   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00053e   9000     bcf	0, 0, 0              
000540   0018     dw	0x18  ;unknown opcode 
000542   1890     xorwf	0x90, 0, 0         
000544   9000     bcf	0, 0, 0              
000546   0018     dw	0x18  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _boot_ep_out_cfg1:
000548   1700     andwf	0, 0x1, 0x1        	DB	LOW(_ep0_init), HIGH(_ep0_init), UPPER(_ep0_init), LOW(_ep1_out), HIGH(_ep1_out), UPPER(_ep1_out), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00054a   f000     dw	0xf000  ;unknown opcode 
00054c   000c     tblwt	*                  
00054e   1890     xorwf	0x90, 0, 0         
000550   9000     bcf	0, 0, 0              
000552   0018     dw	0x18  ;unknown opcode 
000554   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
000556   9000     bcf	0, 0, 0              
000558   0018     dw	0x18  ;unknown opcode 
00055a   1890     xorwf	0x90, 0, 0         
00055c   9000     bcf	0, 0, 0              
00055e   0018     dw	0x18  ;unknown opcode 
000560   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
000562   9000     bcf	0, 0, 0              
000564   0018     dw	0x18  ;unknown opcode 
000566   1890     xorwf	0x90, 0, 0         
000568   9000     bcf	0, 0, 0              
00056a   0018     dw	0x18  ;unknown opcode 
00056c   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00056e   9000     bcf	0, 0, 0              
000570   0018     dw	0x18  ;unknown opcode 
000572   1890     xorwf	0x90, 0, 0         
000574   9000     bcf	0, 0, 0              
000576   0018     dw	0x18  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _boot_ep_out:
000578   0518     decf	0x18, 0, 0x1        	DB	LOW(_boot_ep_out_cfg0), HIGH(_boot_ep_out_cfg0), UPPER(_boot_ep_out_cfg0), LOW(_boot_ep_out_cfg0), HIGH(_boot_ep_out_cfg0), UPPER(_boot_ep_out_cfg0), LOW(_boot_ep_out_cfg1), HIGH(_boot_ep_out_cfg1), UPPER(_boot_ep_out_cfg1)
00057a   1800     xorwf	0, 0, 0            
00057c   0005     push                     
00057e   0548     decf	0x48, 0, 0x1        
000580   0000     nop                      
                                           ; ; Starting pCode block for Ival
                                           _boot_ep_setup_cfg:
000582   10c4     iorwf	0xc4, 0, 0         	DB	LOW(_ep0_setup), HIGH(_ep0_setup), UPPER(_ep0_setup), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
000584   9000     bcf	0, 0, 0              
000586   0018     dw	0x18  ;unknown opcode 
000588   1890     xorwf	0x90, 0, 0         
00058a   9000     bcf	0, 0, 0              
00058c   0018     dw	0x18  ;unknown opcode 
00058e   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
000590   9000     bcf	0, 0, 0              
000592   0018     dw	0x18  ;unknown opcode 
000594   1890     xorwf	0x90, 0, 0         
000596   9000     bcf	0, 0, 0              
000598   0018     dw	0x18  ;unknown opcode 
00059a   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
00059c   9000     bcf	0, 0, 0              
00059e   0018     dw	0x18  ;unknown opcode 
0005a0   1890     xorwf	0x90, 0, 0         
0005a2   9000     bcf	0, 0, 0              
0005a4   0018     dw	0x18  ;unknown opcode 
0005a6   1890     xorwf	0x90, 0, 0         	DB	LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function), LOW(_null_function), HIGH(_null_function), UPPER(_null_function)
0005a8   9000     bcf	0, 0, 0              
0005aa   0018     dw	0x18  ;unknown opcode 
0005ac   1890     xorwf	0x90, 0, 0         
0005ae   9000     bcf	0, 0, 0              
0005b0   0018     dw	0x18  ;unknown opcode 
                                           ; ; Starting pCode block for Ival
                                           _boot_ep_setup:
0005b2   0582     decf	0x82, 0, 0x1        	DB	LOW(_boot_ep_setup_cfg), HIGH(_boot_ep_setup_cfg), UPPER(_boot_ep_setup_cfg), LOW(_boot_ep_setup_cfg), HIGH(_boot_ep_setup_cfg), UPPER(_boot_ep_setup_cfg), LOW(_boot_ep_setup_cfg), HIGH(_boot_ep_setup_cfg), UPPER(_boot_ep_setup_cfg)
0005b4   8200     bsf	0, 0x1, 0            
0005b6   0005     push                     
0005b8   0582     decf	0x82, 0, 0x1        
0005ba   0000     nop                      
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  112 (0x0070) bytes ( 0.09%)
                                           ;           	   56 (0x0038) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue Apr 14 19:33:59 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _ep0_init
                                           	global _ep0_in
                                           	global _ep0_setup
                                           	global _SetupBuffer
                                           	global _InBuffer
                                           	global _ep0_usb_std_request
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern __gptrget1
                                           	extern __gptrget3
                                           	extern __gptrget2
                                           	extern _ep_bdt
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _device_descriptor
                                           	extern _configuration_descriptor
                                           	extern _string_descriptor
                                           	extern _ep_init
                                           	extern _ep_in
                                           	extern _ep_out
                                           	extern _ep_setup
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _fill_in_buffer
                                           	extern _section_descriptor
                                           	extern _application_data
                                           	extern _boot_device_descriptor
                                           	extern _boot_configuration_descriptor
                                           	extern _boot_string_descriptor
                                           	extern _str0
                                           	extern _str1
                                           	extern _str2
                                           	extern _str3
                                           	extern _boot_ep_init
                                           	extern _boot_ep_in
                                           	extern _boot_ep_out
                                           	extern _boot_ep_setup
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           INTCON	equ	0xff2
                                           WREG	equ	0xfe8
                                           TOSL	equ	0xffd
                                           TOSH	equ	0xffe
                                           TOSU	equ	0xfff
                                           TBLPTRL	equ	0xff6
                                           TBLPTRH	equ	0xff7
                                           TBLPTRU	equ	0xff8
                                           TABLAT	equ	0xff5
                                           FSR0L	equ	0xfe9
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTINC0	equ	0xfee
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           
                                           
                                           usb_buf	udata
                                           _SetupBuffer	res	8
                                           _InBuffer	res	8
                                           
                                           udata_ep0_0	udata
                                           _ep0_state	res	1
                                           
                                           udata_ep0_1	udata
                                           _num_bytes_to_be_send	res	2
                                           
                                           udata_ep0_2	udata
                                           _sourceData	res	3
                                           
                                           udata_ep0_3	udata
                                           _coming_cfg	res	1
                                           
                                           udata_ep0_4	udata
                                           _ep0_usb_std_request_unknown_request_1_1	res	1
                                           
                                           udata_ep0_5	udata
                                           _ep0_in_i_3_17	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_ep0__ep0_setup	code
                                           _ep0_setup:
                                           ;	.line	238; ep0.c	void ep0_setup(void)
0010c4   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
0010c6   ffe5
0010c8   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
0010ca   ffe5
0010cc   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0010ce   ffe5
0010d0   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0010d2   ffe5
0010d4   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0010d6   ffe5
0010d8   0100     movlb	0                  	BANKSEL	_ep0_state
                                           ;	.line	242; ep0.c	ep0_state = WAIT_SETUP;
0010da   6ba3     clrf	0xa3, 0x1           	CLRF	_ep0_state, B
0010dc   0100     movlb	0                  	BANKSEL	_num_bytes_to_be_send
                                           ;	.line	243; ep0.c	num_bytes_to_be_send = 0;
0010de   6b98     clrf	0x98, 0x1           	CLRF	_num_bytes_to_be_send, B
                                           ; removed redundant BANKSEL
0010e0   6b99     clrf	0x99, 0x1           	CLRF	(_num_bytes_to_be_send + 1), B
                                           ;	.line	245; ep0.c	if(ep0_usb_std_request())
0010e2   ec21     call	0x642, 0            	CALL	_ep0_usb_std_request
0010e4   f003
0010e6   6e00     movwf	0, 0               	MOVWF	r0x00
0010e8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0010ea   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
0010ec   d06a     bra	0x11c2               	BRA	_00229_DS_
                                           ;	.line	247; ep0.c	UCONbits.PKTDIS = 0;
0010ee   986d     bcf	0x6d, 0x4, 0         	BCF	_UCONbits, 4
                                           ;	.line	248; ep0.c	if(SetupBuffer.data_transfer_direction == DEVICE_TO_HOST)
0010f0   6a00     clrf	0, 0                	CLRF	r0x00
0010f2   0105     movlb	0x5                	BANKSEL	_SetupBuffer
0010f4   bf40     btfsc	0x40, 0x7, 0x1     	BTFSC	_SetupBuffer, 7, B
0010f6   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
0010f8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0010fa   0a01     xorlw	0x1                	XORLW	0x01
0010fc   e001     bz	0x1100                	BZ	_00237_DS_
0010fe   d04e     bra	0x119c               	BRA	_00226_DS_
                                           _00237_DS_:
                                           ;	.line	250; ep0.c	ep0_state = WAIT_IN;
001100   0e01     movlw	0x1                	MOVLW	0x01
001102   0100     movlb	0                  	BANKSEL	_ep0_state
001104   6fa3     movwf	0xa3, 0x1          	MOVWF	_ep0_state, B
                                           ;	.line	252; ep0.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
001106   0e08     movlw	0x8                	MOVLW	0x08
001108   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 1)
00110a   6f01     movwf	0x1, 0x1           	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	253; ep0.c	EP_OUT_BD(0).ADR = (uchar __data *)&SetupBuffer;            
00110c   0e40     movlw	0x40               	MOVLW	LOW(_SetupBuffer)
00110e   6e00     movwf	0, 0               	MOVWF	r0x00
001110   0e05     movlw	0x5                	MOVLW	HIGH(_SetupBuffer)
001112   6e01     movwf	0x1, 0             	MOVWF	r0x01
001114   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
001116   6f02     movwf	0x2, 0x1           	MOVWF	(_ep_bdt + 2), B
001118   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00111a   6f03     movwf	0x3, 0x1           	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	254; ep0.c	EP_OUT_BD(0).Stat.uc = BDS_USIE;
00111c   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
00111e   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
                                           ;	.line	256; ep0.c	EP_IN_BD(0).ADR = (uchar __data *)InBuffer;
001120   0e48     movlw	0x48               	MOVLW	LOW(_InBuffer)
001122   6e00     movwf	0, 0               	MOVWF	r0x00
001124   0e05     movlw	0x5                	MOVLW	HIGH(_InBuffer)
001126   6e01     movwf	0x1, 0             	MOVWF	r0x01
001128   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00112a   6f06     movwf	0x6, 0x1           	MOVWF	(_ep_bdt + 6), B
00112c   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
00112e   6f07     movwf	0x7, 0x1           	MOVWF	(_ep_bdt + 7), B
                                           ;	.line	257; ep0.c	if(SetupBuffer.wLength < num_bytes_to_be_send)
001130   ee05     lfsr	0, 0x546            	LFSR	0x00, (_SetupBuffer + 6)
001132   f046
001134   cfee     movff	0xfee, 0           	MOVFF	POSTINC0, r0x00
001136   f000
001138   cfef     movff	0xfef, 0x1         	MOVFF	INDF0, r0x01
00113a   f001
00113c   0100     movlb	0                  	BANKSEL	(_num_bytes_to_be_send + 1)
00113e   5199     movf	0x99, 0, 0x1        	MOVF	(_num_bytes_to_be_send + 1), W, B
001140   5c01     subwf	0x1, 0, 0          	SUBWF	r0x01, W
001142   e102     bnz	0x1148               	BNZ	_00238_DS_
                                           ; removed redundant BANKSEL
001144   5198     movf	0x98, 0, 0x1        	MOVF	_num_bytes_to_be_send, W, B
001146   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
                                           _00238_DS_:
001148   e206     bc	0x1156                	BC	_00224_DS_
                                           ;	.line	259; ep0.c	num_bytes_to_be_send = SetupBuffer.wLength;
00114a   ee05     lfsr	0, 0x546            	LFSR	0x00, (_SetupBuffer + 6)
00114c   f046
00114e   cfee     movff	0xfee, 0x98        	MOVFF	POSTINC0, _num_bytes_to_be_send
001150   f098
001152   cfef     movff	0xfef, 0x99        	MOVFF	INDF0, (_num_bytes_to_be_send + 1)
001154   f099
                                           _00224_DS_:
                                           ;	.line	261; ep0.c	fill_in_buffer(0, &sourceData, EP0_BUFFER_SIZE, &num_bytes_to_be_send);
001156   0e00     movlw	0                  	MOVLW	HIGH(_sourceData)
001158   6e01     movwf	0x1, 0             	MOVWF	r0x01
00115a   0e90     movlw	0x90               	MOVLW	LOW(_sourceData)
00115c   6e00     movwf	0, 0               	MOVWF	r0x00
00115e   0e80     movlw	0x80               	MOVLW	0x80
001160   6e02     movwf	0x2, 0             	MOVWF	r0x02
001162   0e00     movlw	0                  	MOVLW	HIGH(_num_bytes_to_be_send)
001164   6e04     movwf	0x4, 0             	MOVWF	r0x04
001166   0e98     movlw	0x98               	MOVLW	LOW(_num_bytes_to_be_send)
001168   6e03     movwf	0x3, 0             	MOVWF	r0x03
00116a   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ; ;     peep 2 - Removed redundant move
00116c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00116e   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
001170   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001172   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
001174   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001176   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
001178   0e08     movlw	0x8                	MOVLW	0x08
00117a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00117c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00117e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001180   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
001182   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001184   5000     movf	0, 0, 0             	MOVF	r0x00, W
001186   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001188   0e00     movlw	0                  	MOVLW	0x00
00118a   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
00118c   ec6f     call	0xede, 0            	CALL	_fill_in_buffer
00118e   f007
001190   0e09     movlw	0x9                	MOVLW	0x09
001192   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	262; ep0.c	EP_IN_BD(0).Stat.uc = BDS_USIE | BDS_DAT1 | BDS_DTSEN;
001194   0ec8     movlw	0xc8               	MOVLW	0xc8
001196   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 4)
001198   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
00119a   d022     bra	0x11e0               	BRA	_00231_DS_
                                           _00226_DS_:
                                           ;	.line	267; ep0.c	ep0_state = WAIT_OUT;
00119c   0e02     movlw	0x2                	MOVLW	0x02
00119e   0100     movlb	0                  	BANKSEL	_ep0_state
0011a0   6fa3     movwf	0xa3, 0x1          	MOVWF	_ep0_state, B
                                           ;	.line	269; ep0.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
0011a2   0e08     movlw	0x8                	MOVLW	0x08
0011a4   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 1)
0011a6   6f01     movwf	0x1, 0x1           	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	270; ep0.c	EP_OUT_BD(0).ADR = (uchar __data *)InBuffer;
0011a8   0e48     movlw	0x48               	MOVLW	LOW(_InBuffer)
0011aa   6e00     movwf	0, 0               	MOVWF	r0x00
0011ac   0e05     movlw	0x5                	MOVLW	HIGH(_InBuffer)
0011ae   6e01     movwf	0x1, 0             	MOVWF	r0x01
0011b0   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0011b2   6f02     movwf	0x2, 0x1           	MOVWF	(_ep_bdt + 2), B
0011b4   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0011b6   6f03     movwf	0x3, 0x1           	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	271; ep0.c	EP_OUT_BD(0).Stat.uc = BDS_USIE | BDS_DAT1 | BDS_DTSEN;
0011b8   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
0011ba   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
                                           ;	.line	273; ep0.c	EP_IN_BD(0).Cnt = 0;
0011bc   6b05     clrf	0x5, 0x1            	CLRF	(_ep_bdt + 5), B
                                           ; removed redundant BANKSEL
                                           ;	.line	274; ep0.c	EP_IN_BD(0).Stat.uc = BDS_USIE | BDS_DAT1 | BDS_DTSEN;
0011be   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
0011c0   d00f     bra	0x11e0               	BRA	_00231_DS_
                                           _00229_DS_:
                                           ;	.line	280; ep0.c	UCONbits.PKTDIS = 0;
0011c2   986d     bcf	0x6d, 0x4, 0         	BCF	_UCONbits, 4
                                           ;	.line	281; ep0.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
0011c4   0e08     movlw	0x8                	MOVLW	0x08
0011c6   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 1)
0011c8   6f01     movwf	0x1, 0x1           	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	282; ep0.c	EP_OUT_BD(0).ADR = (uchar __data *)&SetupBuffer;
0011ca   0e40     movlw	0x40               	MOVLW	LOW(_SetupBuffer)
0011cc   6e00     movwf	0, 0               	MOVWF	r0x00
0011ce   0e05     movlw	0x5                	MOVLW	HIGH(_SetupBuffer)
0011d0   6e01     movwf	0x1, 0             	MOVWF	r0x01
0011d2   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
0011d4   6f02     movwf	0x2, 0x1           	MOVWF	(_ep_bdt + 2), B
0011d6   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
0011d8   6f03     movwf	0x3, 0x1           	MOVWF	(_ep_bdt + 3), B
                                           ; #	MOVLW	0x84
                                           ; #	MOVWF	_ep_bdt, B
                                           ; #	MOVLW	0x84
                                           ; ;     peep 5 - Removed redundant move
                                           ;	.line	283; ep0.c	EP_OUT_BD(0).Stat.uc = BDS_USIE | BDS_BSTALL;
0011da   0e84     movlw	0x84               	MOVLW	0x84
                                           ; removed redundant BANKSEL
                                           ;	.line	285; ep0.c	EP_IN_BD(0).Stat.uc  = BDS_USIE | BDS_BSTALL;
0011dc   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
0011de   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
                                           _00231_DS_:
0011e0   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0011e2   f004
0011e4   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0011e6   f003
0011e8   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0011ea   f002
0011ec   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0011ee   f001
0011f0   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0011f2   f000
0011f4   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_ep0__ep0_in	code
                                           _ep0_in:
                                           ;	.line	154; ep0.c	void ep0_in(void)
000898   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00089a   ffe5
00089c   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00089e   ffe5
0008a0   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
0008a2   ffe5
0008a4   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0008a6   ffe5
0008a8   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0008aa   ffe5
                                           ;	.line	157; ep0.c	if(GET_DEVICE_STATE() == ADDRESS_PENDING_STATE)
0008ac   505f     movf	0x5f, 0, 0          	MOVF	_usb_device_state, W
0008ae   0a04     xorlw	0x4                	XORLW	0x04
0008b0   e10b     bnz	0x8c8                	BNZ	_00176_DS_
                                           ;	.line	159; ep0.c	UADDR = SetupBuffer.bAddress;
0008b2   ee05     lfsr	0, 0x542            	LFSR	0x00, (_SetupBuffer + 2)
0008b4   f042
0008b6   cfef     movff	0xfef, 0xf6e       	MOVFF	INDF0, _UADDR
0008b8   ff6e
                                           ;	.line	160; ep0.c	if(UADDR != 0)
0008ba   506e     movf	0x6e, 0, 0          	MOVF	_UADDR, W
0008bc   e003     bz	0x8c4                 	BZ	_00173_DS_
                                           ;	.line	162; ep0.c	SET_DEVICE_STATE(ADDRESS_STATE);
0008be   0e05     movlw	0x5                	MOVLW	0x05
0008c0   6e5f     movwf	0x5f, 0            	MOVWF	_usb_device_state
0008c2   d002     bra	0x8c8                	BRA	_00176_DS_
                                           _00173_DS_:
                                           ;	.line	166; ep0.c	SET_DEVICE_STATE(DEFAULT_STATE);
0008c4   0e03     movlw	0x3                	MOVLW	0x03
0008c6   6e5f     movwf	0x5f, 0            	MOVWF	_usb_device_state
                                           _00176_DS_:
0008c8   0100     movlb	0                  	BANKSEL	_ep0_state
                                           ;	.line	170; ep0.c	if(ep0_state == WAIT_IN)
0008ca   51a3     movf	0xa3, 0, 0x1        	MOVF	_ep0_state, W, B
0008cc   0a01     xorlw	0x1                	XORLW	0x01
0008ce   e129     bnz	0x922                	BNZ	_00181_DS_
                                           ;	.line	172; ep0.c	fill_in_buffer(0, &sourceData, EP0_BUFFER_SIZE, &num_bytes_to_be_send);
0008d0   0e00     movlw	0                  	MOVLW	HIGH(_sourceData)
0008d2   6e01     movwf	0x1, 0             	MOVWF	r0x01
0008d4   0e90     movlw	0x90               	MOVLW	LOW(_sourceData)
0008d6   6e00     movwf	0, 0               	MOVWF	r0x00
0008d8   0e80     movlw	0x80               	MOVLW	0x80
0008da   6e02     movwf	0x2, 0             	MOVWF	r0x02
0008dc   0e00     movlw	0                  	MOVLW	HIGH(_num_bytes_to_be_send)
0008de   6e04     movwf	0x4, 0             	MOVWF	r0x04
0008e0   0e98     movlw	0x98               	MOVLW	LOW(_num_bytes_to_be_send)
0008e2   6e03     movwf	0x3, 0             	MOVWF	r0x03
0008e4   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ; ;     peep 2 - Removed redundant move
0008e6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0008e8   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
0008ea   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0008ec   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
0008ee   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0008f0   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0008f2   0e08     movlw	0x8                	MOVLW	0x08
0008f4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0008f6   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0008f8   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0008fa   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0008fc   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0008fe   5000     movf	0, 0, 0             	MOVF	r0x00, W
000900   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000902   0e00     movlw	0                  	MOVLW	0x00
000904   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
000906   ec6f     call	0xede, 0            	CALL	_fill_in_buffer
000908   f007
00090a   0e09     movlw	0x9                	MOVLW	0x09
00090c   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
00090e   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 4)
                                           ;	.line	174; ep0.c	if(EP_IN_BD(0).Stat.DTS == 0)
000910   bd04     btfsc	0x4, 0x6, 0x1      	BTFSC	(_ep_bdt + 4), 6, B
000912   d003     bra	0x91a                	BRA	_00178_DS_
                                           ;	.line	176; ep0.c	EP_IN_BD(0).Stat.uc = BDS_USIE | BDS_DAT1 | BDS_DTSEN;
000914   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
000916   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
000918   d006     bra	0x926                	BRA	_00182_DS_
                                           _00178_DS_:
                                           ;	.line	180; ep0.c	EP_IN_BD(0).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
00091a   0e88     movlw	0x88               	MOVLW	0x88
00091c   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 4)
00091e   6f04     movwf	0x4, 0x1           	MOVWF	(_ep_bdt + 4), B
000920   d002     bra	0x926                	BRA	_00182_DS_
                                           _00181_DS_:
                                           ;	.line	185; ep0.c	ep0_init();
000922   ec80     call	0x1700, 0           	CALL	_ep0_init
000924   f00b
                                           _00182_DS_:
                                           ;	.line	188; ep0.c	if(GET_DEVICE_STATE() == CONFIGURATION_PENDING_STATE)
000926   505f     movf	0x5f, 0, 0          	MOVF	_usb_device_state, W
000928   0a06     xorlw	0x6                	XORLW	0x06
00092a   e001     bz	0x92e                 	BZ	_00216_DS_
00092c   d0cc     bra	0xac6                	BRA	_00195_DS_
                                           _00216_DS_:
                                           ;	.line	193; ep0.c	UEP1  = 0; UEP2  = 0; UEP3  = 0; UEP4  = 0;
00092e   6a71     clrf	0x71, 0             	CLRF	_UEP1
000930   6a72     clrf	0x72, 0             	CLRF	_UEP2
000932   6a73     clrf	0x73, 0             	CLRF	_UEP3
000934   6a74     clrf	0x74, 0             	CLRF	_UEP4
                                           ;	.line	194; ep0.c	UEP5  = 0; UEP6  = 0; UEP7  = 0; UEP8  = 0;
000936   6a75     clrf	0x75, 0             	CLRF	_UEP5
000938   6a76     clrf	0x76, 0             	CLRF	_UEP6
00093a   6a77     clrf	0x77, 0             	CLRF	_UEP7
00093c   6a78     clrf	0x78, 0             	CLRF	_UEP8
                                           ;	.line	195; ep0.c	UEP9  = 0; UEP10 = 0; UEP11 = 0; UEP12 = 0;
00093e   6a79     clrf	0x79, 0             	CLRF	_UEP9
000940   6a7a     clrf	0x7a, 0             	CLRF	_UEP10
000942   6a7b     clrf	0x7b, 0             	CLRF	_UEP11
000944   6a7c     clrf	0x7c, 0             	CLRF	_UEP12
                                           ;	.line	196; ep0.c	UEP13 = 0; UEP14 = 0; UEP15 = 0;
000946   6a7d     clrf	0x7d, 0             	CLRF	_UEP13
000948   6a7e     clrf	0x7e, 0             	CLRF	_UEP14
00094a   6a7f     clrf	0x7f, 0             	CLRF	_UEP15
                                           ;	.line	199; ep0.c	if(coming_cfg <= FLASH_CONFIGURATION)
00094c   0e03     movlw	0x3                	MOVLW	0x03
00094e   0100     movlb	0                  	BANKSEL	_coming_cfg
000950   5da4     subwf	0xa4, 0, 0x1       	SUBWF	_coming_cfg, W, B
000952   e21d     bc	0x98e                 	BC	_00184_DS_
                                           ;	.line	202; ep0.c	ep_init  = boot_ep_init;
000954   0ea4     movlw	0xa4               	MOVLW	LOW(_boot_ep_init)
000956   0100     movlb	0                  	BANKSEL	_ep_init
000958   6f84     movwf	0x84, 0x1          	MOVWF	_ep_init, B
00095a   0e04     movlw	0x4                	MOVLW	HIGH(_boot_ep_init)
                                           ; removed redundant BANKSEL
00095c   6f85     movwf	0x85, 0x1          	MOVWF	(_ep_init + 1), B
00095e   0e00     movlw	0                  	MOVLW	UPPER(_boot_ep_init)
                                           ; removed redundant BANKSEL
000960   6f86     movwf	0x86, 0x1          	MOVWF	(_ep_init + 2), B
                                           ;	.line	203; ep0.c	ep_in    = boot_ep_in;
000962   0e0e     movlw	0xe                	MOVLW	LOW(_boot_ep_in)
000964   0100     movlb	0                  	BANKSEL	_ep_in
000966   6f8d     movwf	0x8d, 0x1          	MOVWF	_ep_in, B
000968   0e05     movlw	0x5                	MOVLW	HIGH(_boot_ep_in)
                                           ; removed redundant BANKSEL
00096a   6f8e     movwf	0x8e, 0x1          	MOVWF	(_ep_in + 1), B
00096c   0e00     movlw	0                  	MOVLW	UPPER(_boot_ep_in)
                                           ; removed redundant BANKSEL
00096e   6f8f     movwf	0x8f, 0x1          	MOVWF	(_ep_in + 2), B
                                           ;	.line	204; ep0.c	ep_out   = boot_ep_out;
000970   0e78     movlw	0x78               	MOVLW	LOW(_boot_ep_out)
000972   0100     movlb	0                  	BANKSEL	_ep_out
000974   6f8a     movwf	0x8a, 0x1          	MOVWF	_ep_out, B
000976   0e05     movlw	0x5                	MOVLW	HIGH(_boot_ep_out)
                                           ; removed redundant BANKSEL
000978   6f8b     movwf	0x8b, 0x1          	MOVWF	(_ep_out + 1), B
00097a   0e00     movlw	0                  	MOVLW	UPPER(_boot_ep_out)
                                           ; removed redundant BANKSEL
00097c   6f8c     movwf	0x8c, 0x1          	MOVWF	(_ep_out + 2), B
                                           ;	.line	205; ep0.c	ep_setup = boot_ep_setup;
00097e   0eb2     movlw	0xb2               	MOVLW	LOW(_boot_ep_setup)
000980   0100     movlb	0                  	BANKSEL	_ep_setup
000982   6f87     movwf	0x87, 0x1          	MOVWF	_ep_setup, B
000984   0e05     movlw	0x5                	MOVLW	HIGH(_boot_ep_setup)
                                           ; removed redundant BANKSEL
000986   6f88     movwf	0x88, 0x1          	MOVWF	(_ep_setup + 1), B
000988   0e00     movlw	0                  	MOVLW	UPPER(_boot_ep_setup)
                                           ; removed redundant BANKSEL
00098a   6f89     movwf	0x89, 0x1          	MOVWF	(_ep_setup + 2), B
00098c   d03c     bra	0xa06                	BRA	_00185_DS_
                                           _00184_DS_:
                                           ;	.line	210; ep0.c	ep_init  = application_data.ep_init;
00098e   0e0a     movlw	0xa                	MOVLW	LOW(_application_data + 10)
000990   6ef6     movwf	0xf6, 0            	MOVWF	TBLPTRL
000992   0e20     movlw	0x20               	MOVLW	HIGH(_application_data + 10)
000994   6ef7     movwf	0xf7, 0            	MOVWF	TBLPTRH
000996   0e00     movlw	0                  	MOVLW	UPPER(_application_data + 10)
000998   6ef8     movwf	0xf8, 0            	MOVWF	TBLPTRU
00099a   0009     tblrd	*+                 	TBLRD*+	
00099c   cff5     movff	0xff5, 0x84        	MOVFF	TABLAT, _ep_init
00099e   f084
0009a0   0009     tblrd	*+                 	TBLRD*+	
0009a2   cff5     movff	0xff5, 0x85        	MOVFF	TABLAT, (_ep_init + 1)
0009a4   f085
0009a6   0009     tblrd	*+                 	TBLRD*+	
0009a8   cff5     movff	0xff5, 0x86        	MOVFF	TABLAT, (_ep_init + 2)
0009aa   f086
                                           ;	.line	211; ep0.c	ep_in    = application_data.ep_in;
0009ac   0e0d     movlw	0xd                	MOVLW	LOW(_application_data + 13)
0009ae   6ef6     movwf	0xf6, 0            	MOVWF	TBLPTRL
0009b0   0e20     movlw	0x20               	MOVLW	HIGH(_application_data + 13)
0009b2   6ef7     movwf	0xf7, 0            	MOVWF	TBLPTRH
0009b4   0e00     movlw	0                  	MOVLW	UPPER(_application_data + 13)
0009b6   6ef8     movwf	0xf8, 0            	MOVWF	TBLPTRU
0009b8   0009     tblrd	*+                 	TBLRD*+	
0009ba   cff5     movff	0xff5, 0x8d        	MOVFF	TABLAT, _ep_in
0009bc   f08d
0009be   0009     tblrd	*+                 	TBLRD*+	
0009c0   cff5     movff	0xff5, 0x8e        	MOVFF	TABLAT, (_ep_in + 1)
0009c2   f08e
0009c4   0009     tblrd	*+                 	TBLRD*+	
0009c6   cff5     movff	0xff5, 0x8f        	MOVFF	TABLAT, (_ep_in + 2)
0009c8   f08f
                                           ;	.line	212; ep0.c	ep_out   = application_data.ep_out;
0009ca   0e10     movlw	0x10               	MOVLW	LOW(_application_data + 16)
0009cc   6ef6     movwf	0xf6, 0            	MOVWF	TBLPTRL
0009ce   0e20     movlw	0x20               	MOVLW	HIGH(_application_data + 16)
0009d0   6ef7     movwf	0xf7, 0            	MOVWF	TBLPTRH
0009d2   0e00     movlw	0                  	MOVLW	UPPER(_application_data + 16)
0009d4   6ef8     movwf	0xf8, 0            	MOVWF	TBLPTRU
0009d6   0009     tblrd	*+                 	TBLRD*+	
0009d8   cff5     movff	0xff5, 0x8a        	MOVFF	TABLAT, _ep_out
0009da   f08a
0009dc   0009     tblrd	*+                 	TBLRD*+	
0009de   cff5     movff	0xff5, 0x8b        	MOVFF	TABLAT, (_ep_out + 1)
0009e0   f08b
0009e2   0009     tblrd	*+                 	TBLRD*+	
0009e4   cff5     movff	0xff5, 0x8c        	MOVFF	TABLAT, (_ep_out + 2)
0009e6   f08c
                                           ;	.line	213; ep0.c	ep_setup = application_data.ep_setup;
0009e8   0e13     movlw	0x13               	MOVLW	LOW(_application_data + 19)
0009ea   6ef6     movwf	0xf6, 0            	MOVWF	TBLPTRL
0009ec   0e20     movlw	0x20               	MOVLW	HIGH(_application_data + 19)
0009ee   6ef7     movwf	0xf7, 0            	MOVWF	TBLPTRH
0009f0   0e00     movlw	0                  	MOVLW	UPPER(_application_data + 19)
0009f2   6ef8     movwf	0xf8, 0            	MOVWF	TBLPTRU
0009f4   0009     tblrd	*+                 	TBLRD*+	
0009f6   cff5     movff	0xff5, 0x87        	MOVFF	TABLAT, _ep_setup
0009f8   f087
0009fa   0009     tblrd	*+                 	TBLRD*+	
0009fc   cff5     movff	0xff5, 0x88        	MOVFF	TABLAT, (_ep_setup + 1)
0009fe   f088
000a00   0009     tblrd	*+                 	TBLRD*+	
000a02   cff5     movff	0xff5, 0x89        	MOVFF	TABLAT, (_ep_setup + 2)
000a04   f089
                                           _00185_DS_:
                                           ;	.line	216; ep0.c	SET_ACTIVE_CONFIGURATION(coming_cfg);
000a06   c0a4     movff	0xa4, 0x5e         	MOVFF	_coming_cfg, _usb_active_cfg
000a08   f05e
000a0a   0100     movlb	0                  	BANKSEL	_coming_cfg
                                           ;	.line	218; ep0.c	if(coming_cfg == 0)
000a0c   51a4     movf	0xa4, 0, 0x1        	MOVF	_coming_cfg, W, B
000a0e   e103     bnz	0xa16                	BNZ	_00187_DS_
                                           ;	.line	220; ep0.c	SET_DEVICE_STATE(ADDRESS_STATE);
000a10   0e05     movlw	0x5                	MOVLW	0x05
000a12   6e5f     movwf	0x5f, 0            	MOVWF	_usb_device_state
000a14   d058     bra	0xac6                	BRA	_00195_DS_
                                           _00187_DS_:
                                           ;	.line	227; ep0.c	for(i = 15; i > 0; i--)
000a16   0e0f     movlw	0xf                	MOVLW	0x0f
000a18   0100     movlb	0                  	BANKSEL	_ep0_in_i_3_17
000a1a   6fa6     movwf	0xa6, 0x1          	MOVWF	_ep0_in_i_3_17, B
                                           _00191_DS_:
000a1c   0100     movlb	0                  	BANKSEL	_ep0_in_i_3_17
000a1e   51a6     movf	0xa6, 0, 0x1        	MOVF	_ep0_in_i_3_17, W, B
000a20   e003     bz	0xa28                 	BZ	_00197_DS_
000a22   0e01     movlw	0x1                	MOVLW	0x01
000a24   6e00     movwf	0, 0               	MOVWF	r0x00
000a26   d001     bra	0xa2a                	BRA	_00198_DS_
                                           _00197_DS_:
000a28   6a00     clrf	0, 0                	CLRF	r0x00
                                           _00198_DS_:
000a2a   5000     movf	0, 0, 0             	MOVF	r0x00, W
000a2c   b4d8     btfsc	0xd8, 0x2, 0       	BTFSC	STATUS, 2
000a2e   d049     bra	0xac2                	BRA	_00194_DS_
                                           ; ;multiply lit val:0x03 by variable _coming_cfg and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
000a30   0100     movlb	0                  	BANKSEL	_coming_cfg
                                           ;	.line	230; ep0.c	ep_init[coming_cfg][i]();
000a32   51a4     movf	0xa4, 0, 0x1        	MOVF	_coming_cfg, W, B
000a34   0d03     mullw	0x3                	MULLW	0x03
000a36   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
000a38   f000
000a3a   cff4     movff	0xff4, 0x1         	MOVFF	PRODH, r0x01
000a3c   f001
000a3e   0100     movlb	0                  	BANKSEL	_ep_init
000a40   5184     movf	0x84, 0, 0x1        	MOVF	_ep_init, W, B
000a42   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
000a44   5185     movf	0x85, 0, 0x1        	MOVF	(_ep_init + 1), W, B
000a46   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ; removed redundant BANKSEL
000a48   5186     movf	0x86, 0, 0x1        	MOVF	(_ep_init + 2), W, B
000a4a   6a02     clrf	0x2, 0              	CLRF	r0x02
000a4c   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
000a4e   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
000a50   ffe9
000a52   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
000a54   fff3
000a56   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
000a58   ec9b     call	0x1736, 0           	CALL	__gptrget3
000a5a   f00b
000a5c   6e00     movwf	0, 0               	MOVWF	r0x00
000a5e   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
000a60   f001
000a62   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
000a64   f002
                                           ; ;multiply lit val:0x03 by variable _ep0_in_i_3_17 and store in r0x03
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
000a66   0100     movlb	0                  	BANKSEL	_ep0_in_i_3_17
000a68   51a6     movf	0xa6, 0, 0x1        	MOVF	_ep0_in_i_3_17, W, B
000a6a   0d03     mullw	0x3                	MULLW	0x03
000a6c   cff3     movff	0xff3, 0x3         	MOVFF	PRODL, r0x03
000a6e   f003
000a70   cff4     movff	0xff4, 0x4         	MOVFF	PRODH, r0x04
000a72   f004
000a74   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
000a76   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
000a78   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
000a7a   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
000a7c   6ae8     clrf	0xe8, 0             	CLRF	WREG
000a7e   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
000a80   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
000a82   ffe9
000a84   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
000a86   fff3
000a88   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
000a8a   ec9b     call	0x1736, 0           	CALL	__gptrget3
000a8c   f00b
000a8e   6e00     movwf	0, 0               	MOVWF	r0x00
000a90   cff3     movff	0xff3, 0x1         	MOVFF	PRODL, r0x01
000a92   f001
000a94   cff4     movff	0xff4, 0x2         	MOVFF	PRODH, r0x02
000a96   f002
000a98   cff2     movff	0xff2, 0xfe5       	MOVFF	INTCON, POSTDEC1
000a9a   ffe5
000a9c   9ef2     bcf	0xf2, 0x7, 0         	BCF	INTCON, 7
000a9e   0005     push                     	PUSH	
000aa0   0ebc     movlw	0xbc               	MOVLW	LOW(_00218_DS_)
000aa2   6efd     movwf	0xfd, 0            	MOVWF	TOSL
000aa4   0e0a     movlw	0xa                	MOVLW	HIGH(_00218_DS_)
000aa6   6efe     movwf	0xfe, 0            	MOVWF	TOSH
000aa8   0e00     movlw	0                  	MOVLW	UPPER(_00218_DS_)
000aaa   6eff     movwf	0xff, 0            	MOVWF	TOSU
000aac   50e4     movf	0xe4, 0, 0          	MOVF	PREINC1, W
000aae   6ef2     movwf	0xf2, 0            	MOVWF	INTCON
000ab0   c002     movff	0x2, 0xffb         	MOVFF	r0x02, PCLATU
000ab2   fffb
000ab4   c001     movff	0x1, 0xffa         	MOVFF	r0x01, PCLATH
000ab6   fffa
000ab8   5000     movf	0, 0, 0             	MOVF	r0x00, W
000aba   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00218_DS_:
000abc   0100     movlb	0                  	BANKSEL	_ep0_in_i_3_17
                                           ;	.line	227; ep0.c	for(i = 15; i > 0; i--)
000abe   07a6     decf	0xa6, 0x1, 0x1      	DECF	_ep0_in_i_3_17, F, B
000ac0   d7ad     bra	0xa1c                	BRA	_00191_DS_
                                           _00194_DS_:
                                           ;	.line	233; ep0.c	SET_DEVICE_STATE(CONFIGURED_STATE);
000ac2   0e07     movlw	0x7                	MOVLW	0x07
000ac4   6e5f     movwf	0x5f, 0            	MOVWF	_usb_device_state
                                           _00195_DS_:
000ac6   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
000ac8   f004
000aca   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
000acc   f003
000ace   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
000ad0   f002
000ad2   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
000ad4   f001
000ad6   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
000ad8   f000
000ada   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_ep0__ep0_init	code
                                           _ep0_init:
                                           ;	.line	144; ep0.c	void ep0_init(void)
001700   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
001702   ffe5
001704   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
001706   ffe5
001708   0100     movlb	0                  	BANKSEL	_ep0_state
                                           ;	.line	146; ep0.c	ep0_state = WAIT_SETUP;
00170a   6ba3     clrf	0xa3, 0x1           	CLRF	_ep0_state, B
                                           ;	.line	147; ep0.c	EP_OUT_BD(0).Cnt = EP0_BUFFER_SIZE;
00170c   0e08     movlw	0x8                	MOVLW	0x08
00170e   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 1)
001710   6f01     movwf	0x1, 0x1           	MOVWF	(_ep_bdt + 1), B
                                           ;	.line	148; ep0.c	EP_OUT_BD(0).ADR = (uchar __data *)&SetupBuffer;
001712   0e40     movlw	0x40               	MOVLW	LOW(_SetupBuffer)
001714   6e00     movwf	0, 0               	MOVWF	r0x00
001716   0e05     movlw	0x5                	MOVLW	HIGH(_SetupBuffer)
001718   6e01     movwf	0x1, 0             	MOVWF	r0x01
00171a   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           ; removed redundant BANKSEL
00171c   6f02     movwf	0x2, 0x1           	MOVWF	(_ep_bdt + 2), B
00171e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
                                           ; removed redundant BANKSEL
001720   6f03     movwf	0x3, 0x1           	MOVWF	(_ep_bdt + 3), B
                                           ;	.line	149; ep0.c	EP_OUT_BD(0).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
001722   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
001724   6f00     movwf	0, 0x1             	MOVWF	_ep_bdt, B
                                           ; removed redundant BANKSEL
                                           ;	.line	150; ep0.c	EP_IN_BD(0).Stat.uc = BDS_UCPU;
001726   6b04     clrf	0x4, 0x1            	CLRF	(_ep_bdt + 4), B
                                           ;	.line	151; ep0.c	UEP0 = EPINEN_EN | EPOUTEN_EN | EPHSHK_EN;
001728   0e16     movlw	0x16               	MOVLW	0x16
00172a   6e70     movwf	0x70, 0            	MOVWF	_UEP0
00172c   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
00172e   f001
001730   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
001732   f000
001734   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_ep0__ep0_usb_std_request	code
                                           _ep0_usb_std_request:
                                           ;	.line	47; ep0.c	uchar ep0_usb_std_request(void)
000642   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
000644   ffe5
000646   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
000648   ffe5
00064a   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00064c   ffe5
00064e   0100     movlb	0                  	BANKSEL	_ep0_usb_std_request_unknown_request_1_1
                                           ;	.line	52; ep0.c	unknown_request = FALSE;
000650   6ba5     clrf	0xa5, 0x1           	CLRF	_ep0_usb_std_request_unknown_request_1_1, B
000652   0105     movlb	0x5                	BANKSEL	_SetupBuffer
                                           ;	.line	54; ep0.c	if(SetupBuffer.request_type != STANDARD) 
000654   5140     movf	0x40, 0, 0x1        	MOVF	_SetupBuffer, W, B
000656   38e8     swapf	0xe8, 0, 0         	SWAPF	WREG, W
000658   40e8     rrncf	0xe8, 0, 0         	RRNCF	WREG, W
00065a   0b03     andlw	0x3                	ANDLW	0x03
00065c   6e00     movwf	0, 0               	MOVWF	r0x00
00065e   5000     movf	0, 0, 0             	MOVF	r0x00, W
000660   e002     bz	0x666                 	BZ	_00106_DS_
                                           ;	.line	56; ep0.c	return FALSE;
000662   6ae8     clrf	0xe8, 0             	CLRF	WREG
000664   d112     bra	0x88a                	BRA	_00126_DS_
                                           _00106_DS_:
                                           ;	.line	59; ep0.c	switch(SetupBuffer.bRequest)
000666   ee05     lfsr	0, 0x541            	LFSR	0x00, (_SetupBuffer + 1)
000668   f041
00066a   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
00066c   f000
00066e   5000     movf	0, 0, 0             	MOVF	r0x00, W
000670   e101     bnz	0x674                	BNZ	_00144_DS_
000672   d103     bra	0x87a                	BRA	_00125_DS_
                                           _00144_DS_:
000674   5000     movf	0, 0, 0             	MOVF	r0x00, W
000676   0a01     xorlw	0x1                	XORLW	0x01
000678   e101     bnz	0x67c                	BNZ	_00146_DS_
00067a   d0ff     bra	0x87a                	BRA	_00125_DS_
                                           _00146_DS_:
00067c   5000     movf	0, 0, 0             	MOVF	r0x00, W
00067e   0a03     xorlw	0x3                	XORLW	0x03
000680   e101     bnz	0x684                	BNZ	_00148_DS_
000682   d0fb     bra	0x87a                	BRA	_00125_DS_
                                           _00148_DS_:
000684   5000     movf	0, 0, 0             	MOVF	r0x00, W
000686   0a05     xorlw	0x5                	XORLW	0x05
000688   e101     bnz	0x68c                	BNZ	_00150_DS_
00068a   d0ce     bra	0x828                	BRA	_00117_DS_
                                           _00150_DS_:
00068c   5000     movf	0, 0, 0             	MOVF	r0x00, W
00068e   0a06     xorlw	0x6                	XORLW	0x06
000690   e01c     bz	0x6ca                 	BZ	_00109_DS_
000692   5000     movf	0, 0, 0             	MOVF	r0x00, W
000694   0a08     xorlw	0x8                	XORLW	0x08
000696   e00d     bz	0x6b2                 	BZ	_00108_DS_
000698   5000     movf	0, 0, 0             	MOVF	r0x00, W
00069a   0a09     xorlw	0x9                	XORLW	0x09
00069c   e101     bnz	0x6a0                	BNZ	_00156_DS_
00069e   d0c7     bra	0x82e                	BRA	_00118_DS_
                                           _00156_DS_:
0006a0   5000     movf	0, 0, 0             	MOVF	r0x00, W
0006a2   0a0a     xorlw	0xa                	XORLW	0x0a
0006a4   e101     bnz	0x6a8                	BNZ	_00158_DS_
0006a6   d0e9     bra	0x87a                	BRA	_00125_DS_
                                           _00158_DS_:
0006a8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0006aa   0a0b     xorlw	0xb                	XORLW	0x0b
0006ac   e101     bnz	0x6b0                	BNZ	_00160_DS_
0006ae   d0e5     bra	0x87a                	BRA	_00125_DS_
                                           _00160_DS_:
0006b0   d0e1     bra	0x874                	BRA	_00124_DS_
                                           _00108_DS_:
                                           ;	.line	67; ep0.c	sourceData = &GET_ACTIVE_CONFIGURATION();
0006b2   0e00     movlw	0                  	MOVLW	HIGH(_usb_active_cfg)
0006b4   0100     movlb	0                  	BANKSEL	(_sourceData + 1)
0006b6   6f91     movwf	0x91, 0x1          	MOVWF	(_sourceData + 1), B
0006b8   0e5e     movlw	0x5e               	MOVLW	LOW(_usb_active_cfg)
                                           ; removed redundant BANKSEL
0006ba   6f90     movwf	0x90, 0x1          	MOVWF	_sourceData, B
0006bc   0e80     movlw	0x80               	MOVLW	0x80
                                           ; removed redundant BANKSEL
0006be   6f92     movwf	0x92, 0x1          	MOVWF	(_sourceData + 2), B
                                           ;	.line	68; ep0.c	num_bytes_to_be_send = 1;
0006c0   0e01     movlw	0x1                	MOVLW	0x01
0006c2   0100     movlb	0                  	BANKSEL	_num_bytes_to_be_send
0006c4   6f98     movwf	0x98, 0x1          	MOVWF	_num_bytes_to_be_send, B
                                           ; removed redundant BANKSEL
0006c6   6b99     clrf	0x99, 0x1           	CLRF	(_num_bytes_to_be_send + 1), B
                                           ;	.line	69; ep0.c	break;
0006c8   d0d8     bra	0x87a                	BRA	_00125_DS_
                                           _00109_DS_:
                                           ;	.line	72; ep0.c	switch(SetupBuffer.bDescType)
0006ca   ee05     lfsr	0, 0x543            	LFSR	0x00, (_SetupBuffer + 3)
0006cc   f043
0006ce   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
0006d0   f000
0006d2   0e01     movlw	0x1                	MOVLW	0x01
0006d4   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0006d6   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
0006d8   d0a3     bra	0x820                	BRA	_00113_DS_
0006da   0e04     movlw	0x4                	MOVLW	0x04
0006dc   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
0006de   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
0006e0   d09f     bra	0x820                	BRA	_00113_DS_
0006e2   0600     decf	0, 0x1, 0           	DECF	r0x00, F
0006e4   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
0006e6   ffe5
0006e8   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
0006ea   ffe5
0006ec   6a04     clrf	0x4, 0              	CLRF	r0x04
0006ee   3400     rlcf	0, 0, 0             	RLCF	r0x00, W
0006f0   3604     rlcf	0x4, 0x1, 0         	RLCF	r0x04, F
0006f2   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
0006f4   3604     rlcf	0x4, 0x1, 0         	RLCF	r0x04, F
0006f6   0bfc     andlw	0xfc               	ANDLW	0xfc
0006f8   6e03     movwf	0x3, 0             	MOVWF	r0x03
0006fa   0e00     movlw	0                  	MOVLW	UPPER(_00163_DS_)
0006fc   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
0006fe   0e07     movlw	0x7                	MOVLW	HIGH(_00163_DS_)
000700   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
000702   0e1a     movlw	0x1a               	MOVLW	LOW(_00163_DS_)
000704   2603     addwf	0x3, 0x1, 0        	ADDWF	r0x03, F
000706   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
000708   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
00070a   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
00070c   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
00070e   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
000710   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
000712   f004
000714   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
000716   f003
000718   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00163_DS_:
00071a   ef93     goto	0x726               	GOTO	_00110_DS_
00071c   f003
00071e   efaa     goto	0x754               	GOTO	_00111_DS_
000720   f003
000722   efe0     goto	0x7c0               	GOTO	_00112_DS_
000724   f003
                                           _00110_DS_:
                                           ;	.line	77; ep0.c	sourceData = (uchar *) device_descriptor;
000726   c078     movff	0x78, 0x90         	MOVFF	_device_descriptor, _sourceData
000728   f090
00072a   c079     movff	0x79, 0x91         	MOVFF	(_device_descriptor + 1), (_sourceData + 1)
00072c   f091
00072e   c07a     movff	0x7a, 0x92         	MOVFF	(_device_descriptor + 2), (_sourceData + 2)
000730   f092
                                           ;	.line	78; ep0.c	num_bytes_to_be_send = device_descriptor->bLength;
000732   c078     movff	0x78, 0            	MOVFF	_device_descriptor, r0x00
000734   f000
000736   c079     movff	0x79, 0x1          	MOVFF	(_device_descriptor + 1), r0x01
000738   f001
00073a   c07a     movff	0x7a, 0x2          	MOVFF	(_device_descriptor + 2), r0x02
00073c   f002
00073e   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
000740   ffe9
000742   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
000744   fff3
000746   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
000748   ecdd     call	0x17ba, 0           	CALL	__gptrget1
00074a   f00b
                                           ; =DF= MOVFF: SRC op r0x00 replaced by WREG
00074c   0100     movlb	0                  	BANKSEL	_num_bytes_to_be_send
00074e   6f98     movwf	0x98, 0x1          	MOVWF	_num_bytes_to_be_send, B
                                           ; removed redundant BANKSEL
000750   6b99     clrf	0x99, 0x1           	CLRF	(_num_bytes_to_be_send + 1), B
                                           ;	.line	79; ep0.c	break;
000752   d093     bra	0x87a                	BRA	_00125_DS_
                                           _00111_DS_:
                                           ;	.line	82; ep0.c	sourceData = configuration_descriptor[SetupBuffer.bDescIndex];
000754   ee05     lfsr	0, 0x542            	LFSR	0x00, (_SetupBuffer + 2)
000756   f042
000758   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
00075a   f000
                                           ; ;multiply lit val:0x03 by variable r0x00 and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
00075c   5000     movf	0, 0, 0             	MOVF	r0x00, W
00075e   0d03     mullw	0x3                	MULLW	0x03
000760   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
000762   f000
000764   cff4     movff	0xff4, 0x1         	MOVFF	PRODH, r0x01
000766   f001
000768   0100     movlb	0                  	BANKSEL	_configuration_descriptor
00076a   517b     movf	0x7b, 0, 0x1        	MOVF	_configuration_descriptor, W, B
00076c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
00076e   517c     movf	0x7c, 0, 0x1        	MOVF	(_configuration_descriptor + 1), W, B
000770   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ; removed redundant BANKSEL
000772   517d     movf	0x7d, 0, 0x1        	MOVF	(_configuration_descriptor + 2), W, B
000774   6a02     clrf	0x2, 0              	CLRF	r0x02
000776   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
000778   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
00077a   ffe9
00077c   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
00077e   fff3
000780   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
000782   ec9b     call	0x1736, 0           	CALL	__gptrget3
000784   f00b
000786   0100     movlb	0                  	BANKSEL	_sourceData
000788   6f90     movwf	0x90, 0x1          	MOVWF	_sourceData, B
00078a   cff3     movff	0xff3, 0x91        	MOVFF	PRODL, (_sourceData + 1)
00078c   f091
00078e   cff4     movff	0xff4, 0x92        	MOVFF	PRODH, (_sourceData + 2)
000790   f092
                                           ;	.line	83; ep0.c	num_bytes_to_be_send = ((USB_Configuration_Descriptor*)sourceData)->wTotalLength;
000792   c090     movff	0x90, 0            	MOVFF	_sourceData, r0x00
000794   f000
000796   c091     movff	0x91, 0x1          	MOVFF	(_sourceData + 1), r0x01
000798   f001
00079a   c092     movff	0x92, 0x2          	MOVFF	(_sourceData + 2), r0x02
00079c   f002
00079e   0e02     movlw	0x2                	MOVLW	0x02
0007a0   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
0007a2   0e00     movlw	0                  	MOVLW	0x00
0007a4   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
0007a6   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0007a8   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0007aa   ffe9
0007ac   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0007ae   fff3
0007b0   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0007b2   ecb6     call	0x176c, 0           	CALL	__gptrget2
0007b4   f00b
0007b6   0100     movlb	0                  	BANKSEL	_num_bytes_to_be_send
0007b8   6f98     movwf	0x98, 0x1          	MOVWF	_num_bytes_to_be_send, B
0007ba   cff3     movff	0xff3, 0x99        	MOVFF	PRODL, (_num_bytes_to_be_send + 1)
0007bc   f099
                                           ;	.line	84; ep0.c	break;
0007be   d05d     bra	0x87a                	BRA	_00125_DS_
                                           _00112_DS_:
                                           ;	.line	87; ep0.c	sourceData = string_descriptor[SetupBuffer.bDescIndex];
0007c0   ee05     lfsr	0, 0x542            	LFSR	0x00, (_SetupBuffer + 2)
0007c2   f042
0007c4   cfef     movff	0xfef, 0           	MOVFF	INDF0, r0x00
0007c6   f000
                                           ; ;multiply lit val:0x03 by variable r0x00 and store in r0x00
                                           ; ;Unrolled 8 X 8 multiplication
                                           ; ;FIXME: the function does not support result==WREG
0007c8   5000     movf	0, 0, 0             	MOVF	r0x00, W
0007ca   0d03     mullw	0x3                	MULLW	0x03
0007cc   cff3     movff	0xff3, 0           	MOVFF	PRODL, r0x00
0007ce   f000
0007d0   cff4     movff	0xff4, 0x1         	MOVFF	PRODH, r0x01
0007d2   f001
0007d4   0100     movlb	0                  	BANKSEL	_string_descriptor
0007d6   517e     movf	0x7e, 0, 0x1        	MOVF	_string_descriptor, W, B
0007d8   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
                                           ; removed redundant BANKSEL
0007da   517f     movf	0x7f, 0, 0x1        	MOVF	(_string_descriptor + 1), W, B
0007dc   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
                                           ; removed redundant BANKSEL
0007de   5180     movf	0x80, 0, 0x1        	MOVF	(_string_descriptor + 2), W, B
0007e0   6a02     clrf	0x2, 0              	CLRF	r0x02
0007e2   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
0007e4   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
0007e6   ffe9
0007e8   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
0007ea   fff3
0007ec   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0007ee   ec9b     call	0x1736, 0           	CALL	__gptrget3
0007f0   f00b
0007f2   0100     movlb	0                  	BANKSEL	_sourceData
0007f4   6f90     movwf	0x90, 0x1          	MOVWF	_sourceData, B
0007f6   cff3     movff	0xff3, 0x91        	MOVFF	PRODL, (_sourceData + 1)
0007f8   f091
0007fa   cff4     movff	0xff4, 0x92        	MOVFF	PRODH, (_sourceData + 2)
0007fc   f092
                                           ;	.line	88; ep0.c	num_bytes_to_be_send = sourceData[0];
0007fe   c090     movff	0x90, 0            	MOVFF	_sourceData, r0x00
000800   f000
000802   c091     movff	0x91, 0x1          	MOVFF	(_sourceData + 1), r0x01
000804   f001
000806   c092     movff	0x92, 0x2          	MOVFF	(_sourceData + 2), r0x02
000808   f002
00080a   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
00080c   ffe9
00080e   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
000810   fff3
000812   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
000814   ecdd     call	0x17ba, 0           	CALL	__gptrget1
000816   f00b
                                           ; =DF= MOVFF: SRC op r0x00 replaced by WREG
000818   0100     movlb	0                  	BANKSEL	_num_bytes_to_be_send
00081a   6f98     movwf	0x98, 0x1          	MOVWF	_num_bytes_to_be_send, B
                                           ; removed redundant BANKSEL
00081c   6b99     clrf	0x99, 0x1           	CLRF	(_num_bytes_to_be_send + 1), B
                                           ;	.line	89; ep0.c	break;
00081e   d02d     bra	0x87a                	BRA	_00125_DS_
                                           _00113_DS_:
                                           ;	.line	93; ep0.c	unknown_request = TRUE;
000820   0e01     movlw	0x1                	MOVLW	0x01
000822   0100     movlb	0                  	BANKSEL	_ep0_usb_std_request_unknown_request_1_1
000824   6fa5     movwf	0xa5, 0x1          	MOVWF	_ep0_usb_std_request_unknown_request_1_1, B
                                           ;	.line	96; ep0.c	break;
000826   d029     bra	0x87a                	BRA	_00125_DS_
                                           _00117_DS_:
                                           ;	.line	107; ep0.c	SET_DEVICE_STATE(ADDRESS_PENDING_STATE);
000828   0e04     movlw	0x4                	MOVLW	0x04
00082a   6e5f     movwf	0x5f, 0            	MOVWF	_usb_device_state
                                           ;	.line	108; ep0.c	break;
00082c   d026     bra	0x87a                	BRA	_00125_DS_
                                           _00118_DS_:
                                           ;	.line	112; ep0.c	if(device_descriptor->bNumConfigurations >= SetupBuffer.bConfigurationValue)
00082e   c078     movff	0x78, 0            	MOVFF	_device_descriptor, r0x00
000830   f000
000832   c079     movff	0x79, 0x1          	MOVFF	(_device_descriptor + 1), r0x01
000834   f001
000836   c07a     movff	0x7a, 0x2          	MOVFF	(_device_descriptor + 2), r0x02
000838   f002
00083a   0e11     movlw	0x11               	MOVLW	0x11
00083c   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
00083e   0e00     movlw	0                  	MOVLW	0x00
000840   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
000842   2202     addwfc	0x2, 0x1, 0       	ADDWFC	r0x02, F
000844   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
000846   ffe9
000848   c001     movff	0x1, 0xff3         	MOVFF	r0x01, PRODL
00084a   fff3
00084c   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00084e   ecdd     call	0x17ba, 0           	CALL	__gptrget1
000850   f00b
000852   6e00     movwf	0, 0               	MOVWF	r0x00
000854   ee05     lfsr	0, 0x542            	LFSR	0x00, (_SetupBuffer + 2)
000856   f042
000858   cfef     movff	0xfef, 0x1         	MOVFF	INDF0, r0x01
00085a   f001
00085c   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
00085e   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
000860   e305     bnc	0x86c                	BNC	_00120_DS_
                                           ;	.line	114; ep0.c	coming_cfg = SetupBuffer.bConfigurationValue;
000862   cfef     movff	0xfef, 0xa4        	MOVFF	INDF0, _coming_cfg
000864   f0a4
                                           ;	.line	115; ep0.c	SET_DEVICE_STATE(CONFIGURATION_PENDING_STATE);
000866   0e06     movlw	0x6                	MOVLW	0x06
000868   6e5f     movwf	0x5f, 0            	MOVWF	_usb_device_state
00086a   d007     bra	0x87a                	BRA	_00125_DS_
                                           _00120_DS_:
                                           ;	.line	121; ep0.c	unknown_request = TRUE;
00086c   0e01     movlw	0x1                	MOVLW	0x01
00086e   0100     movlb	0                  	BANKSEL	_ep0_usb_std_request_unknown_request_1_1
000870   6fa5     movwf	0xa5, 0x1          	MOVWF	_ep0_usb_std_request_unknown_request_1_1, B
                                           ;	.line	124; ep0.c	break;
000872   d003     bra	0x87a                	BRA	_00125_DS_
                                           _00124_DS_:
                                           ;	.line	137; ep0.c	unknown_request = TRUE;
000874   0e01     movlw	0x1                	MOVLW	0x01
000876   0100     movlb	0                  	BANKSEL	_ep0_usb_std_request_unknown_request_1_1
000878   6fa5     movwf	0xa5, 0x1          	MOVWF	_ep0_usb_std_request_unknown_request_1_1, B
                                           _00125_DS_:
00087a   0100     movlb	0                  	BANKSEL	_ep0_usb_std_request_unknown_request_1_1
                                           ;	.line	140; ep0.c	return !unknown_request;
00087c   51a5     movf	0xa5, 0, 0x1        	MOVF	_ep0_usb_std_request_unknown_request_1_1, W, B
00087e   80d8     bsf	0xd8, 0, 0           	BSF	STATUS, 0
000880   66e8     tstfsz	0xe8, 0           	TSTFSZ	WREG
000882   90d8     bcf	0xd8, 0, 0           	BCF	STATUS, 0
000884   6a00     clrf	0, 0                	CLRF	r0x00
000886   3600     rlcf	0, 0x1, 0           	RLCF	r0x00, F
000888   5000     movf	0, 0, 0             	MOVF	r0x00, W
                                           _00126_DS_:
00088a   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00088c   f002
00088e   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
000890   f001
000892   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
000894   f000
000896   0012     return	0                 	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	 1538 (0x0602) bytes ( 1.17%)
                                           ;           	  769 (0x0301) words
                                           ; udata size:	   25 (0x0019) bytes ( 1.40%)
                                           ; access size:	    5 (0x0005) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue Apr 14 19:33:59 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _ep1_init
                                           	global _ep1_out
                                           	global _ep1_OutBuffer
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _ep_bdt
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _device_descriptor
                                           	extern _configuration_descriptor
                                           	extern _string_descriptor
                                           	extern _ep_init
                                           	extern _ep_in
                                           	extern _ep_out
                                           	extern _ep_setup
                                           	extern _ep2_num_bytes_to_send
                                           	extern _ep2_source_data
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _prepare_ep2_in
                                           	extern _erase_block
                                           	extern _write_block
                                           	extern _delay10ktcy
                                           	extern __mulint
                                           	extern __mullong
                                           	extern _section_descriptor
                                           	extern _boot_device_descriptor
                                           	extern _boot_configuration_descriptor
                                           	extern _boot_string_descriptor
                                           	extern _str0
                                           	extern _str1
                                           	extern _str2
                                           	extern _str3
                                           	extern _boot_ep_init
                                           	extern _boot_ep_in
                                           	extern _boot_ep_out
                                           	extern _boot_ep_setup
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCL	equ	0xff9
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           FSR0L	equ	0xfe9
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           r0x05	res	1
                                           r0x06	res	1
                                           r0x07	res	1
                                           r0x08	res	1
                                           r0x09	res	1
                                           
                                           udata_ep1_0	udata
                                           iTemp0	res	1
                                           
                                           
                                           ustat_ep1_00	udata	0X0500
                                           _ep1_OutBuffer	res	64
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_ep1__ep1_out	code
                                           _ep1_out:
                                           ;	.line	44; ep1.c	void ep1_out(void)
000cf0   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
000cf2   ffe5
000cf4   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
000cf6   ffd9
000cf8   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
000cfa   ffe5
000cfc   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
000cfe   ffe5
000d00   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
000d02   ffe5
000d04   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
000d06   ffe5
000d08   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
000d0a   ffe5
000d0c   c005     movff	0x5, 0xfe5         	MOVFF	r0x05, POSTDEC1
000d0e   ffe5
000d10   c006     movff	0x6, 0xfe5         	MOVFF	r0x06, POSTDEC1
000d12   ffe5
000d14   c007     movff	0x7, 0xfe5         	MOVFF	r0x07, POSTDEC1
000d16   ffe5
                                           ;	.line	47; ep1.c	if(EP_OUT_BD(1).Cnt >= 1)
000d18   c409     movff	0x409, 0xa8        	MOVFF	(_ep_bdt + 9), (iTemp0 + 1)
000d1a   f0a8
000d1c   0e01     movlw	0x1                	MOVLW	0x01
000d1e   0100     movlb	0                  	BANKSEL	(iTemp0 + 1)
000d20   5da8     subwf	0xa8, 0, 0x1       	SUBWF	(iTemp0 + 1), W, B
000d22   a0d8     btfss	0xd8, 0, 0         	BTFSS	STATUS, 0
000d24   d0c1     bra	0xea8                	BRA	_00124_DS_
                                           ;	.line	49; ep1.c	switch(ep1_OutBuffer[0])
000d26   c500     movff	0x500, 0           	MOVFF	_ep1_OutBuffer, r0x00
000d28   f000
000d2a   0e06     movlw	0x6                	MOVLW	0x06
000d2c   5c00     subwf	0, 0, 0            	SUBWF	r0x00, W
000d2e   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
000d30   d0a7     bra	0xe80                	BRA	_00118_DS_
000d32   c008     movff	0x8, 0xfe5         	MOVFF	r0x08, POSTDEC1
000d34   ffe5
000d36   c009     movff	0x9, 0xfe5         	MOVFF	r0x09, POSTDEC1
000d38   ffe5
000d3a   6a09     clrf	0x9, 0              	CLRF	r0x09
000d3c   3400     rlcf	0, 0, 0             	RLCF	r0x00, W
000d3e   3609     rlcf	0x9, 0x1, 0         	RLCF	r0x09, F
000d40   34e8     rlcf	0xe8, 0, 0          	RLCF	WREG, W
000d42   3609     rlcf	0x9, 0x1, 0         	RLCF	r0x09, F
000d44   0bfc     andlw	0xfc               	ANDLW	0xfc
000d46   6e08     movwf	0x8, 0             	MOVWF	r0x08
000d48   0e00     movlw	0                  	MOVLW	UPPER(_00133_DS_)
000d4a   6efb     movwf	0xfb, 0            	MOVWF	PCLATU
000d4c   0e0d     movlw	0xd                	MOVLW	HIGH(_00133_DS_)
000d4e   6efa     movwf	0xfa, 0            	MOVWF	PCLATH
000d50   0e68     movlw	0x68               	MOVLW	LOW(_00133_DS_)
000d52   2608     addwf	0x8, 0x1, 0        	ADDWF	r0x08, F
000d54   5009     movf	0x9, 0, 0           	MOVF	r0x09, W
000d56   22fa     addwfc	0xfa, 0x1, 0      	ADDWFC	PCLATH, F
000d58   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
000d5a   2afb     incf	0xfb, 0x1, 0        	INCF	PCLATU, F
000d5c   5008     movf	0x8, 0, 0           	MOVF	r0x08, W
000d5e   cfe4     movff	0xfe4, 0x9         	MOVFF	PREINC1, r0x09
000d60   f009
000d62   cfe4     movff	0xfe4, 0x8         	MOVFF	PREINC1, r0x08
000d64   f008
000d66   6ef9     movwf	0xf9, 0            	MOVWF	PCL
                                           _00133_DS_:
000d68   efc0     goto	0xd80               	GOTO	_00109_DS_
000d6a   f006
000d6c   efc9     goto	0xd92               	GOTO	_00110_DS_
000d6e   f006
000d70   efd8     goto	0xdb0               	GOTO	_00111_DS_
000d72   f006
000d74   ef2c     goto	0xe58               	GOTO	_00112_DS_
000d76   f007
000d78   ef2d     goto	0xe5a               	GOTO	_00113_DS_
000d7a   f007
000d7c   ef32     goto	0xe64               	GOTO	_00117_DS_
000d7e   f007
                                           _00109_DS_:
                                           ;	.line	53; ep1.c	TBLPTRL = ep1_OutBuffer[1];
000d80   c501     movff	0x501, 0xff6       	MOVFF	(_ep1_OutBuffer + 1), _TBLPTRL
000d82   fff6
                                           ;	.line	54; ep1.c	TBLPTRH = ep1_OutBuffer[2];
000d84   c502     movff	0x502, 0xff7       	MOVFF	(_ep1_OutBuffer + 2), _TBLPTRH
000d86   fff7
                                           ;	.line	55; ep1.c	TBLPTRU = ep1_OutBuffer[3];
000d88   c503     movff	0x503, 0xff8       	MOVFF	(_ep1_OutBuffer + 3), _TBLPTRU
000d8a   fff8
                                           ;	.line	56; ep1.c	erase_block();
000d8c   eccc     call	0x1798, 0           	CALL	_erase_block
000d8e   f00b
                                           ;	.line	57; ep1.c	break;
000d90   d07f     bra	0xe90                	BRA	_00119_DS_
                                           _00110_DS_:
                                           ;	.line	60; ep1.c	TBLPTRL = ep1_OutBuffer[1];
000d92   c501     movff	0x501, 0xff6       	MOVFF	(_ep1_OutBuffer + 1), _TBLPTRL
000d94   fff6
                                           ;	.line	61; ep1.c	TBLPTRH = ep1_OutBuffer[2];
000d96   c502     movff	0x502, 0xff7       	MOVFF	(_ep1_OutBuffer + 2), _TBLPTRH
000d98   fff7
                                           ;	.line	62; ep1.c	TBLPTRU = ep1_OutBuffer[3];
000d9a   c503     movff	0x503, 0xff8       	MOVFF	(_ep1_OutBuffer + 3), _TBLPTRU
000d9c   fff8
                                           ;	.line	63; ep1.c	write_block((__data uchar *)&(ep1_OutBuffer[4]));
000d9e   0e05     movlw	0x5                	MOVLW	HIGH(_ep1_OutBuffer + 4)
000da0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000da2   0e04     movlw	0x4                	MOVLW	LOW(_ep1_OutBuffer + 4)
000da4   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000da6   ec2e     call	0x165c, 0           	CALL	_write_block
000da8   f00b
000daa   0e02     movlw	0x2                	MOVLW	0x02
000dac   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
                                           ;	.line	64; ep1.c	break;
000dae   d070     bra	0xe90                	BRA	_00119_DS_
                                           _00111_DS_:
                                           ;	.line	67; ep1.c	ep2_num_bytes_to_send = EP2_BUFFER_SIZE;
000db0   0e40     movlw	0x40               	MOVLW	0x40
000db2   0100     movlb	0                  	BANKSEL	_ep2_num_bytes_to_send
000db4   6f9a     movwf	0x9a, 0x1          	MOVWF	_ep2_num_bytes_to_send, B
                                           ; removed redundant BANKSEL
000db6   6b9b     clrf	0x9b, 0x1           	CLRF	(_ep2_num_bytes_to_send + 1), B
                                           ;	.line	69; ep1.c	ep2_source_data = (uchar __code *) (ep1_OutBuffer[1] + ep1_OutBuffer[2] * 256 + ep1_OutBuffer[3] * 65536);
000db8   c501     movff	0x501, 0           	MOVFF	(_ep1_OutBuffer + 1), r0x00
000dba   f000
000dbc   6a01     clrf	0x1, 0              	CLRF	r0x01
000dbe   c502     movff	0x502, 0x2         	MOVFF	(_ep1_OutBuffer + 2), r0x02
000dc0   f002
000dc2   6a03     clrf	0x3, 0              	CLRF	r0x03
000dc4   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
000dc6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000dc8   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
000dca   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000dcc   0e01     movlw	0x1                	MOVLW	0x01
000dce   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000dd0   0e00     movlw	0                  	MOVLW	0x00
000dd2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000dd4   ec55     call	0x14aa, 0           	CALL	__mulint
000dd6   f00a
000dd8   6e02     movwf	0x2, 0             	MOVWF	r0x02
000dda   cff3     movff	0xff3, 0x3         	MOVFF	PRODL, r0x03
000ddc   f003
000dde   0e04     movlw	0x4                	MOVLW	0x04
000de0   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
000de2   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
000de4   2600     addwf	0, 0x1, 0          	ADDWF	r0x00, F
000de6   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
000de8   2201     addwfc	0x1, 0x1, 0       	ADDWFC	r0x01, F
000dea   c503     movff	0x503, 0x2         	MOVFF	(_ep1_OutBuffer + 3), r0x02
000dec   f002
000dee   6a03     clrf	0x3, 0              	CLRF	r0x03
000df0   6a04     clrf	0x4, 0              	CLRF	r0x04
000df2   6a05     clrf	0x5, 0              	CLRF	r0x05
000df4   5005     movf	0x5, 0, 0           	MOVF	r0x05, W
000df6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000df8   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
000dfa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000dfc   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
000dfe   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000e00   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
000e02   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000e04   0e00     movlw	0                  	MOVLW	0x00
000e06   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000e08   0e01     movlw	0x1                	MOVLW	0x01
000e0a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000e0c   0e00     movlw	0                  	MOVLW	0x00
000e0e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000e10   0e00     movlw	0                  	MOVLW	0x00
000e12   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
000e14   ec6e     call	0xadc, 0            	CALL	__mullong
000e16   f005
000e18   6e02     movwf	0x2, 0             	MOVWF	r0x02
000e1a   cff3     movff	0xff3, 0x3         	MOVFF	PRODL, r0x03
000e1c   f003
000e1e   cff4     movff	0xff4, 0x4         	MOVFF	PRODH, r0x04
000e20   f004
000e22   cfe9     movff	0xfe9, 0x5         	MOVFF	FSR0L, r0x05
000e24   f005
000e26   0e08     movlw	0x8                	MOVLW	0x08
000e28   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
000e2a   6ae8     clrf	0xe8, 0             	CLRF	WREG
000e2c   be01     btfsc	0x1, 0x7, 0        	BTFSC	r0x01, 7
000e2e   0eff     movlw	0xff               	MOVLW	0xff
000e30   6e06     movwf	0x6, 0             	MOVWF	r0x06
000e32   6e07     movwf	0x7, 0             	MOVWF	r0x07
000e34   5000     movf	0, 0, 0             	MOVF	r0x00, W
000e36   2602     addwf	0x2, 0x1, 0        	ADDWF	r0x02, F
000e38   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
000e3a   2203     addwfc	0x3, 0x1, 0       	ADDWFC	r0x03, F
000e3c   5006     movf	0x6, 0, 0           	MOVF	r0x06, W
000e3e   2204     addwfc	0x4, 0x1, 0       	ADDWFC	r0x04, F
000e40   5007     movf	0x7, 0, 0           	MOVF	r0x07, W
000e42   2205     addwfc	0x5, 0x1, 0       	ADDWFC	r0x05, F
000e44   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
000e46   0100     movlb	0                  	BANKSEL	(_ep2_source_data + 2)
000e48   6f95     movwf	0x95, 0x1          	MOVWF	(_ep2_source_data + 2), B
000e4a   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
                                           ; removed redundant BANKSEL
000e4c   6f94     movwf	0x94, 0x1          	MOVWF	(_ep2_source_data + 1), B
000e4e   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
                                           ; removed redundant BANKSEL
000e50   6f93     movwf	0x93, 0x1          	MOVWF	_ep2_source_data, B
                                           ;	.line	70; ep1.c	prepare_ep2_in();
000e52   eca5     call	0x154a, 0           	CALL	_prepare_ep2_in
000e54   f00a
                                           ;	.line	71; ep1.c	break;
000e56   d01c     bra	0xe90                	BRA	_00119_DS_
                                           _00112_DS_:
                                           ;	.line	74; ep1.c	break;
000e58   d01b     bra	0xe90                	BRA	_00119_DS_
                                           _00113_DS_:
                                           ;	.line	77; ep1.c	delay10ktcy(10);
000e5a   0e0a     movlw	0xa                	MOVLW	0x0a
000e5c   ecf5     call	0x5ea, 0            	CALL	_delay10ktcy
000e5e   f002
000e60   00ff     reset                    	reset 
                                           ;	.line	79; ep1.c	break;
000e62   d016     bra	0xe90                	BRA	_00119_DS_
                                           _00117_DS_:
                                           ;	.line	82; ep1.c	ep2_num_bytes_to_send = sizeof(section_descriptor);
000e64   0e16     movlw	0x16               	MOVLW	0x16
000e66   0100     movlb	0                  	BANKSEL	_ep2_num_bytes_to_send
000e68   6f9a     movwf	0x9a, 0x1          	MOVWF	_ep2_num_bytes_to_send, B
                                           ; removed redundant BANKSEL
000e6a   6b9b     clrf	0x9b, 0x1           	CLRF	(_ep2_num_bytes_to_send + 1), B
                                           ;	.line	83; ep1.c	ep2_source_data = (uchar __code *) section_descriptor;
000e6c   0ebc     movlw	0xbc               	MOVLW	LOW(_section_descriptor)
000e6e   0100     movlb	0                  	BANKSEL	_ep2_source_data
000e70   6f93     movwf	0x93, 0x1          	MOVWF	_ep2_source_data, B
000e72   0e05     movlw	0x5                	MOVLW	HIGH(_section_descriptor)
                                           ; removed redundant BANKSEL
000e74   6f94     movwf	0x94, 0x1          	MOVWF	(_ep2_source_data + 1), B
000e76   0e00     movlw	0                  	MOVLW	UPPER(_section_descriptor)
                                           ; removed redundant BANKSEL
000e78   6f95     movwf	0x95, 0x1          	MOVWF	(_ep2_source_data + 2), B
                                           ;	.line	84; ep1.c	prepare_ep2_in();
000e7a   eca5     call	0x154a, 0           	CALL	_prepare_ep2_in
000e7c   f00a
                                           ;	.line	85; ep1.c	break;
000e7e   d008     bra	0xe90                	BRA	_00119_DS_
                                           _00118_DS_:
                                           ;	.line	90; ep1.c	EP_OUT_BD(1).Cnt = EP1_BUFFER_SIZE;
000e80   0e40     movlw	0x40               	MOVLW	0x40
000e82   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 9)
000e84   6f09     movwf	0x9, 0x1           	MOVWF	(_ep_bdt + 9), B
                                           ; removed redundant BANKSEL
                                           ;	.line	91; ep1.c	EP_OUT_BD(1).ADR = (uchar __data *)&ep1_OutBuffer;
000e86   6b0a     clrf	0xa, 0x1            	CLRF	(_ep_bdt + 10), B
000e88   0e05     movlw	0x5                	MOVLW	0x05
                                           ; removed redundant BANKSEL
000e8a   6f0b     movwf	0xb, 0x1           	MOVWF	(_ep_bdt + 11), B
                                           ;	.line	92; ep1.c	EP_OUT_BD(1).Stat.uc = BDS_USIE | BDS_BSTALL;
000e8c   0e84     movlw	0x84               	MOVLW	0x84
                                           ; removed redundant BANKSEL
000e8e   6f08     movwf	0x8, 0x1           	MOVWF	(_ep_bdt + 8), B
                                           _00119_DS_:
                                           ;	.line	95; ep1.c	EP_OUT_BD(1).Cnt = EP1_BUFFER_SIZE;
000e90   0e40     movlw	0x40               	MOVLW	0x40
000e92   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 9)
000e94   6f09     movwf	0x9, 0x1           	MOVWF	(_ep_bdt + 9), B
                                           ; removed redundant BANKSEL
                                           ;	.line	96; ep1.c	if(EP_OUT_BD(1).Stat.DTS == 0)
000e96   bd08     btfsc	0x8, 0x6, 0x1      	BTFSC	(_ep_bdt + 8), 6, B
000e98   d003     bra	0xea0                	BRA	_00121_DS_
                                           ;	.line	98; ep1.c	EP_OUT_BD(1).Stat.uc = BDS_USIE | BDS_DAT1 | BDS_DTSEN;
000e9a   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
000e9c   6f08     movwf	0x8, 0x1           	MOVWF	(_ep_bdt + 8), B
000e9e   d00c     bra	0xeb8                	BRA	_00126_DS_
                                           _00121_DS_:
                                           ;	.line	102; ep1.c	EP_OUT_BD(1).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
000ea0   0e88     movlw	0x88               	MOVLW	0x88
000ea2   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 8)
000ea4   6f08     movwf	0x8, 0x1           	MOVWF	(_ep_bdt + 8), B
000ea6   d008     bra	0xeb8                	BRA	_00126_DS_
                                           _00124_DS_:
                                           ;	.line	107; ep1.c	EP_OUT_BD(1).Cnt = EP1_BUFFER_SIZE;
000ea8   0e40     movlw	0x40               	MOVLW	0x40
000eaa   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 9)
000eac   6f09     movwf	0x9, 0x1           	MOVWF	(_ep_bdt + 9), B
                                           ; removed redundant BANKSEL
                                           ;	.line	108; ep1.c	EP_OUT_BD(1).ADR = (uchar __data *)&ep1_OutBuffer;
000eae   6b0a     clrf	0xa, 0x1            	CLRF	(_ep_bdt + 10), B
000eb0   0e05     movlw	0x5                	MOVLW	0x05
                                           ; removed redundant BANKSEL
000eb2   6f0b     movwf	0xb, 0x1           	MOVWF	(_ep_bdt + 11), B
                                           ;	.line	109; ep1.c	EP_OUT_BD(1).Stat.uc = BDS_USIE | BDS_BSTALL;
000eb4   0e84     movlw	0x84               	MOVLW	0x84
                                           ; removed redundant BANKSEL
000eb6   6f08     movwf	0x8, 0x1           	MOVWF	(_ep_bdt + 8), B
                                           _00126_DS_:
000eb8   cfe4     movff	0xfe4, 0x7         	MOVFF	PREINC1, r0x07
000eba   f007
000ebc   cfe4     movff	0xfe4, 0x6         	MOVFF	PREINC1, r0x06
000ebe   f006
000ec0   cfe4     movff	0xfe4, 0x5         	MOVFF	PREINC1, r0x05
000ec2   f005
000ec4   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
000ec6   f004
000ec8   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
000eca   f003
000ecc   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
000ece   f002
000ed0   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
000ed2   f001
000ed4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
000ed6   f000
000ed8   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
000eda   ffd9
000edc   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_ep1__ep1_init	code
                                           _ep1_init:
                                           ;	.line	38; ep1.c	EP_OUT_BD(1).Cnt = EP1_BUFFER_SIZE;
001846   0e40     movlw	0x40               	MOVLW	0x40
001848   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 9)
00184a   6f09     movwf	0x9, 0x1           	MOVWF	(_ep_bdt + 9), B
                                           ; removed redundant BANKSEL
                                           ;	.line	39; ep1.c	EP_OUT_BD(1).ADR = (uchar __data *)&ep1_OutBuffer;
00184c   6b0a     clrf	0xa, 0x1            	CLRF	(_ep_bdt + 10), B
00184e   0e05     movlw	0x5                	MOVLW	0x05
                                           ; removed redundant BANKSEL
001850   6f0b     movwf	0xb, 0x1           	MOVWF	(_ep_bdt + 11), B
                                           ;	.line	40; ep1.c	EP_OUT_BD(1).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
001852   0e88     movlw	0x88               	MOVLW	0x88
                                           ; removed redundant BANKSEL
001854   6f08     movwf	0x8, 0x1           	MOVWF	(_ep_bdt + 8), B
                                           ;	.line	41; ep1.c	UEP1 = EPHSHK_EN | EPOUTEN_EN | EPCONDIS_EN;       // Init EP1 as an OUT EP
001856   0e1c     movlw	0x1c               	MOVLW	0x1c
001858   6e71     movwf	0x71, 0            	MOVWF	_UEP1
00185a   0012     return	0                 	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  516 (0x0204) bytes ( 0.39%)
                                           ;           	  258 (0x0102) words
                                           ; udata size:	   65 (0x0041) bytes ( 3.63%)
                                           ; access size:	   10 (0x000a) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue Apr 14 19:33:59 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _ep2_init
                                           	global _prepare_ep2_in
                                           	global _ep2_in
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _ep_bdt
                                           	extern _usb_device_state
                                           	extern _usb_active_cfg
                                           	extern _usb_active_alt_setting
                                           	extern _device_descriptor
                                           	extern _configuration_descriptor
                                           	extern _string_descriptor
                                           	extern _ep_init
                                           	extern _ep_in
                                           	extern _ep_out
                                           	extern _ep_setup
                                           	extern _ep2_num_bytes_to_send
                                           	extern _ep2_source_data
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _fill_in_buffer
                                           	extern _section_descriptor
                                           	extern _boot_device_descriptor
                                           	extern _boot_configuration_descriptor
                                           	extern _boot_string_descriptor
                                           	extern _str0
                                           	extern _str1
                                           	extern _str2
                                           	extern _str3
                                           	extern _boot_ep_init
                                           	extern _boot_ep_in
                                           	extern _boot_ep_out
                                           	extern _boot_ep_setup
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           r0x02	res	1
                                           r0x03	res	1
                                           r0x04	res	1
                                           
                                           udata_ep2_0	udata
                                           _last_send_was_null	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_ep2__ep2_in	code
                                           _ep2_in:
                                           ;	.line	61; ep2.c	void ep2_in(void)
001404   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
001406   ffe5
001408   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00140a   ffe5
00140c   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
00140e   ffe5
001410   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
001412   ffe5
001414   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
001416   ffe5
001418   0100     movlb	0                  	BANKSEL	_ep2_num_bytes_to_send
                                           ;	.line	64; ep2.c	if((ep2_num_bytes_to_send == 0) && last_send_was_null)
00141a   519a     movf	0x9a, 0, 0x1        	MOVF	_ep2_num_bytes_to_send, W, B
                                           ; removed redundant BANKSEL
00141c   119b     iorwf	0x9b, 0, 0x1       	IORWF	(_ep2_num_bytes_to_send + 1), W, B
00141e   e104     bnz	0x1428               	BNZ	_00122_DS_
                                           ; #	MOVF	_last_send_was_null, W, B
                                           ; #	BTFSC	STATUS, 2
                                           ; #	GOTO	_00122_DS_
                                           ; #	GOTO	_00127_DS_
                                           ; #	MOVLW	0x00
                                           ; ;     peep 1 - test/jump to test/skip
001420   0100     movlb	0                  	BANKSEL	_last_send_was_null
                                           ;	.line	68; ep2.c	return;
001422   51a8     movf	0xa8, 0, 0x1        	MOVF	_last_send_was_null, W, B
                                           ;	.line	70; ep2.c	last_send_was_null = (ep2_num_bytes_to_send < EP2_BUFFER_SIZE);
001424   a4d8     btfss	0xd8, 0x2, 0       	BTFSS	STATUS, 2
001426   d036     bra	0x1494               	BRA	_00127_DS_
                                           _00122_DS_:
001428   0e00     movlw	0                  	MOVLW	0x00
00142a   0100     movlb	0                  	BANKSEL	(_ep2_num_bytes_to_send + 1)
00142c   5d9b     subwf	0x9b, 0, 0x1       	SUBWF	(_ep2_num_bytes_to_send + 1), W, B
00142e   e102     bnz	0x1434               	BNZ	_00133_DS_
001430   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
001432   5d9a     subwf	0x9a, 0, 0x1       	SUBWF	_ep2_num_bytes_to_send, W, B
                                           _00133_DS_:
001434   70d8     btg	0xd8, 0, 0           	BTG	STATUS, 0
001436   0100     movlb	0                  	BANKSEL	_last_send_was_null
001438   6ba8     clrf	0xa8, 0x1           	CLRF	_last_send_was_null, B
00143a   37a8     rlcf	0xa8, 0x1, 0x1      	RLCF	_last_send_was_null, F, B
                                           ; #	MOVF	_ep2_num_bytes_to_send, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 9c - Removed redundant move
00143c   0100     movlb	0                  	BANKSEL	_ep2_num_bytes_to_send
                                           ;	.line	71; ep2.c	EP_IN_BD(2).Cnt = ep2_num_bytes_to_send;
00143e   519a     movf	0x9a, 0, 0x1        	MOVF	_ep2_num_bytes_to_send, W, B
001440   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 21)
001442   6f15     movwf	0x15, 0x1          	MOVWF	(_ep_bdt + 21), B
                                           ;	.line	72; ep2.c	fill_in_buffer(2, &ep2_source_data, EP2_BUFFER_SIZE, &ep2_num_bytes_to_send);
001444   0e00     movlw	0                  	MOVLW	HIGH(_ep2_source_data)
001446   6e01     movwf	0x1, 0             	MOVWF	r0x01
001448   0e93     movlw	0x93               	MOVLW	LOW(_ep2_source_data)
00144a   6e00     movwf	0, 0               	MOVWF	r0x00
00144c   0e80     movlw	0x80               	MOVLW	0x80
00144e   6e02     movwf	0x2, 0             	MOVWF	r0x02
001450   0e00     movlw	0                  	MOVLW	HIGH(_ep2_num_bytes_to_send)
001452   6e04     movwf	0x4, 0             	MOVWF	r0x04
001454   0e9a     movlw	0x9a               	MOVLW	LOW(_ep2_num_bytes_to_send)
001456   6e03     movwf	0x3, 0             	MOVWF	r0x03
001458   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ; ;     peep 2 - Removed redundant move
00145a   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00145c   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00145e   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001460   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
001462   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001464   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
001466   0e40     movlw	0x40               	MOVLW	0x40
001468   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00146a   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
00146c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00146e   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
001470   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001472   5000     movf	0, 0, 0             	MOVF	r0x00, W
001474   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
001476   0e02     movlw	0x2                	MOVLW	0x02
001478   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00147a   ec6f     call	0xede, 0            	CALL	_fill_in_buffer
00147c   f007
00147e   0e09     movlw	0x9                	MOVLW	0x09
001480   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
001482   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 20)
                                           ;	.line	73; ep2.c	if(EP_IN_BD(2).Stat.DTS == 0)
001484   bd14     btfsc	0x14, 0x6, 0x1     	BTFSC	(_ep_bdt + 20), 6, B
001486   d003     bra	0x148e               	BRA	_00125_DS_
                                           ;	.line	75; ep2.c	EP_IN_BD(2).Stat.uc = BDS_USIE | BDS_DAT1 | BDS_DTSEN;
001488   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
00148a   6f14     movwf	0x14, 0x1          	MOVWF	(_ep_bdt + 20), B
00148c   d003     bra	0x1494               	BRA	_00127_DS_
                                           _00125_DS_:
                                           ;	.line	79; ep2.c	EP_IN_BD(2).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
00148e   0e88     movlw	0x88               	MOVLW	0x88
001490   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 20)
001492   6f14     movwf	0x14, 0x1          	MOVWF	(_ep_bdt + 20), B
                                           _00127_DS_:
001494   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
001496   f004
001498   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
00149a   f003
00149c   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
00149e   f002
0014a0   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0014a2   f001
0014a4   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0014a6   f000
0014a8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_ep2__prepare_ep2_in	code
                                           _prepare_ep2_in:
                                           ;	.line	44; ep2.c	void prepare_ep2_in(void)
00154a   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
00154c   ffe5
00154e   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
001550   ffe5
001552   c002     movff	0x2, 0xfe5         	MOVFF	r0x02, POSTDEC1
001554   ffe5
001556   c003     movff	0x3, 0xfe5         	MOVFF	r0x03, POSTDEC1
001558   ffe5
00155a   c004     movff	0x4, 0xfe5         	MOVFF	r0x04, POSTDEC1
00155c   ffe5
                                           ;	.line	47; ep2.c	last_send_was_null = (ep2_num_bytes_to_send < EP2_BUFFER_SIZE);
00155e   0e00     movlw	0                  	MOVLW	0x00
001560   0100     movlb	0                  	BANKSEL	(_ep2_num_bytes_to_send + 1)
001562   5d9b     subwf	0x9b, 0, 0x1       	SUBWF	(_ep2_num_bytes_to_send + 1), W, B
001564   e102     bnz	0x156a               	BNZ	_00116_DS_
001566   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
001568   5d9a     subwf	0x9a, 0, 0x1       	SUBWF	_ep2_num_bytes_to_send, W, B
                                           _00116_DS_:
00156a   70d8     btg	0xd8, 0, 0           	BTG	STATUS, 0
00156c   0100     movlb	0                  	BANKSEL	_last_send_was_null
00156e   6ba8     clrf	0xa8, 0x1           	CLRF	_last_send_was_null, B
001570   37a8     rlcf	0xa8, 0x1, 0x1      	RLCF	_last_send_was_null, F, B
                                           ; #	MOVF	_ep2_num_bytes_to_send, W, B
                                           ; #	MOVWF	r0x00
                                           ; #	MOVF	r0x00, W
                                           ; ;     peep 9c - Removed redundant move
001572   0100     movlb	0                  	BANKSEL	_ep2_num_bytes_to_send
                                           ;	.line	48; ep2.c	EP_IN_BD(2).Cnt = ep2_num_bytes_to_send;
001574   519a     movf	0x9a, 0, 0x1        	MOVF	_ep2_num_bytes_to_send, W, B
001576   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 21)
001578   6f15     movwf	0x15, 0x1          	MOVWF	(_ep_bdt + 21), B
                                           ;	.line	49; ep2.c	EP_IN_BD(2).ADR = (uchar __data *)&ep2_InBuffer;
00157a   0e40     movlw	0x40               	MOVLW	0x40
                                           ; removed redundant BANKSEL
00157c   6f16     movwf	0x16, 0x1          	MOVWF	(_ep_bdt + 22), B
00157e   0e05     movlw	0x5                	MOVLW	0x05
                                           ; removed redundant BANKSEL
001580   6f17     movwf	0x17, 0x1          	MOVWF	(_ep_bdt + 23), B
                                           ;	.line	50; ep2.c	fill_in_buffer(2, &ep2_source_data, EP2_BUFFER_SIZE, &ep2_num_bytes_to_send);
001582   0e00     movlw	0                  	MOVLW	HIGH(_ep2_source_data)
001584   6e01     movwf	0x1, 0             	MOVWF	r0x01
001586   0e93     movlw	0x93               	MOVLW	LOW(_ep2_source_data)
001588   6e00     movwf	0, 0               	MOVWF	r0x00
00158a   0e80     movlw	0x80               	MOVLW	0x80
00158c   6e02     movwf	0x2, 0             	MOVWF	r0x02
00158e   0e00     movlw	0                  	MOVLW	HIGH(_ep2_num_bytes_to_send)
001590   6e04     movwf	0x4, 0             	MOVWF	r0x04
001592   0e9a     movlw	0x9a               	MOVLW	LOW(_ep2_num_bytes_to_send)
001594   6e03     movwf	0x3, 0             	MOVWF	r0x03
001596   0e80     movlw	0x80               	MOVLW	0x80
                                           ; #	MOVWF	r0x05
                                           ; #	MOVF	r0x05, W
                                           ; ;     peep 2 - Removed redundant move
001598   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00159a   5004     movf	0x4, 0, 0           	MOVF	r0x04, W
00159c   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
00159e   5003     movf	0x3, 0, 0           	MOVF	r0x03, W
0015a0   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0015a2   6ae5     clrf	0xe5, 0             	CLRF	POSTDEC1
0015a4   0e40     movlw	0x40               	MOVLW	0x40
0015a6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0015a8   5002     movf	0x2, 0, 0           	MOVF	r0x02, W
0015aa   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0015ac   5001     movf	0x1, 0, 0           	MOVF	r0x01, W
0015ae   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0015b0   5000     movf	0, 0, 0             	MOVF	r0x00, W
0015b2   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0015b4   0e02     movlw	0x2                	MOVLW	0x02
0015b6   6ee5     movwf	0xe5, 0            	MOVWF	POSTDEC1
0015b8   ec6f     call	0xede, 0            	CALL	_fill_in_buffer
0015ba   f007
0015bc   0e09     movlw	0x9                	MOVLW	0x09
0015be   26e1     addwf	0xe1, 0x1, 0       	ADDWF	FSR1L, F
0015c0   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 20)
                                           ;	.line	51; ep2.c	if(EP_IN_BD(2).Stat.DTS == 0)
0015c2   bd14     btfsc	0x14, 0x6, 0x1     	BTFSC	(_ep_bdt + 20), 6, B
0015c4   d003     bra	0x15cc               	BRA	_00110_DS_
                                           ;	.line	53; ep2.c	EP_IN_BD(2).Stat.uc = BDS_USIE | BDS_DAT1 | BDS_DTSEN;
0015c6   0ec8     movlw	0xc8               	MOVLW	0xc8
                                           ; removed redundant BANKSEL
0015c8   6f14     movwf	0x14, 0x1          	MOVWF	(_ep_bdt + 20), B
0015ca   d003     bra	0x15d2               	BRA	_00112_DS_
                                           _00110_DS_:
                                           ;	.line	57; ep2.c	EP_IN_BD(2).Stat.uc = BDS_USIE | BDS_DAT0 | BDS_DTSEN;
0015cc   0e88     movlw	0x88               	MOVLW	0x88
0015ce   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 20)
0015d0   6f14     movwf	0x14, 0x1          	MOVWF	(_ep_bdt + 20), B
                                           _00112_DS_:
0015d2   cfe4     movff	0xfe4, 0x4         	MOVFF	PREINC1, r0x04
0015d4   f004
0015d6   cfe4     movff	0xfe4, 0x3         	MOVFF	PREINC1, r0x03
0015d8   f003
0015da   cfe4     movff	0xfe4, 0x2         	MOVFF	PREINC1, r0x02
0015dc   f002
0015de   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0015e0   f001
0015e2   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0015e4   f000
0015e6   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_ep2__ep2_init	code
                                           _ep2_init:
                                           ;	.line	40; ep2.c	EP_IN_BD(2).Stat.uc = BDS_UCPU | BDS_DAT1 | BDS_DTSEN;
001884   0e48     movlw	0x48               	MOVLW	0x48
001886   0104     movlb	0x4                	BANKSEL	(_ep_bdt + 20)
001888   6f14     movwf	0x14, 0x1          	MOVWF	(_ep_bdt + 20), B
                                           ;	.line	41; ep2.c	UEP2 = EPHSHK_EN | EPINEN_EN | EPCONDIS_EN;       // Init EP2 as an IN EP
00188a   0e1a     movlw	0x1a               	MOVLW	0x1a
00188c   6e72     movwf	0x72, 0            	MOVWF	_UEP2
00188e   0012     return	0                 	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  336 (0x0150) bytes ( 0.26%)
                                           ;           	  168 (0x00a8) words
                                           ; udata size:	    1 (0x0001) bytes ( 0.06%)
                                           ; access size:	    5 (0x0005) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue Apr 14 19:33:59 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _ep2_source_data
                                           	global _ep2_num_bytes_to_send
                                           	global _write_block
                                           	global _erase_block
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           	extern _section_descriptor
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           INDF0	equ	0xfef
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PLUSW2	equ	0xfdb
                                           
                                           
                                           ; Internal registers
                                           .registers	udata_ovr	0x0000
                                           r0x00	res	1
                                           r0x01	res	1
                                           
                                           udata_flash_0	udata
                                           _ep2_num_bytes_to_send	res	2
                                           
                                           udata_flash_1	udata
                                           _ep2_source_data	res	3
                                           
                                           udata_flash_2	udata
                                           _write_block_i_1_1	res	1
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block
                                           S_flash__erase_block	code
                                           _erase_block:
                                           ;	.line	78; flash.c	void erase_block()
001798   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00179a   ffe5
00179c   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
00179e   ffd9
0017a0   8ea6     bsf	0xa6, 0x7, 0         	bsf _EECON1, 7
0017a2   9ca6     bcf	0xa6, 0x6, 0         	bcf _EECON1, 6
0017a4   84a6     bsf	0xa6, 0x2, 0         	bsf _EECON1, 2
0017a6   88a6     bsf	0xa6, 0x4, 0         	bsf _EECON1, 4
0017a8   9ef2     bcf	0xf2, 0x7, 0         	bcf _INTCON, 7
0017aa   0e55     movlw	0x55               	movlw 0x55
0017ac   6ea7     movwf	0xa7, 0            	movwf _EECON2
0017ae   0eaa     movlw	0xaa               	movlw 0xaa
0017b0   6ea7     movwf	0xa7, 0            	movwf _EECON2
0017b2   82a6     bsf	0xa6, 0x1, 0         	bsf _EECON1, 1
                                           	
0017b4   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0017b6   ffd9
0017b8   0012     return	0                 	RETURN	
                                           
                                           ; ; Starting pCode block
                                           S_flash__write_block	code
                                           _write_block:
                                           ;	.line	32; flash.c	void write_block(__data uchar *src)
00165c   cfd9     movff	0xfd9, 0xfe5       	MOVFF	FSR2L, POSTDEC1
00165e   ffe5
001660   cfe1     movff	0xfe1, 0xfd9       	MOVFF	FSR1L, FSR2L
001662   ffd9
001664   c000     movff	0, 0xfe5           	MOVFF	r0x00, POSTDEC1
001666   ffe5
001668   c001     movff	0x1, 0xfe5         	MOVFF	r0x01, POSTDEC1
00166a   ffe5
00166c   0e02     movlw	0x2                	MOVLW	0x02
00166e   cfdb     movff	0xfdb, 0           	MOVFF	PLUSW2, r0x00
001670   f000
001672   0e03     movlw	0x3                	MOVLW	0x03
001674   cfdb     movff	0xfdb, 0x1         	MOVFF	PLUSW2, r0x01
001676   f001
001678   000a     tblrd	*-                 	tblrd*-
                                           	
00167a   0100     movlb	0                  	BANKSEL	_write_block_i_1_1
                                           ;	.line	43; flash.c	for(i = 0; i < 32; i++)
00167c   6ba9     clrf	0xa9, 0x1           	CLRF	_write_block_i_1_1, B
                                           _00105_DS_:
00167e   0e20     movlw	0x20               	MOVLW	0x20
001680   0100     movlb	0                  	BANKSEL	_write_block_i_1_1
001682   5da9     subwf	0xa9, 0, 0x1       	SUBWF	_write_block_i_1_1, W, B
001684   e20d     bc	0x16a0                	BC	_00108_DS_
                                           ;	.line	45; flash.c	TABLAT = *src;
001686   c000     movff	0, 0xfe9           	MOVFF	r0x00, FSR0L
001688   ffe9
00168a   c001     movff	0x1, 0xfea         	MOVFF	r0x01, FSR0H
00168c   ffea
00168e   cfef     movff	0xfef, 0xff5       	MOVFF	INDF0, _TABLAT
001690   fff5
                                           ;	.line	47; flash.c	src++;
001692   2a00     incf	0, 0x1, 0           	INCF	r0x00, F
001694   b0d8     btfsc	0xd8, 0, 0         	BTFSC	STATUS, 0
001696   2a01     incf	0x1, 0x1, 0         	INCF	r0x01, F
001698   000f     tblwt	+*                 	tblwt+*
                                           	
00169a   0100     movlb	0                  	BANKSEL	_write_block_i_1_1
                                           ;	.line	43; flash.c	for(i = 0; i < 32; i++)
00169c   2ba9     incf	0xa9, 0x1, 0x1      	INCF	_write_block_i_1_1, F, B
00169e   d7ef     bra	0x167e               	BRA	_00105_DS_
                                           _00108_DS_:
0016a0   8ea6     bsf	0xa6, 0x7, 0         	bsf _EECON1, 7
0016a2   9ca6     bcf	0xa6, 0x6, 0         	bcf _EECON1, 6
0016a4   84a6     bsf	0xa6, 0x2, 0         	bsf _EECON1, 2
0016a6   9ef2     bcf	0xf2, 0x7, 0         	bcf _INTCON, 7
0016a8   0e55     movlw	0x55               	movlw 0x55
0016aa   6ea7     movwf	0xa7, 0            	movwf _EECON2
0016ac   0eaa     movlw	0xaa               	movlw 0xaa
0016ae   6ea7     movwf	0xa7, 0            	movwf _EECON2
0016b0   82a6     bsf	0xa6, 0x1, 0         	bsf _EECON1, 1
                                           	
0016b2   cfe4     movff	0xfe4, 0x1         	MOVFF	PREINC1, r0x01
0016b4   f001
0016b6   cfe4     movff	0xfe4, 0           	MOVFF	PREINC1, r0x00
0016b8   f000
0016ba   cfe4     movff	0xfe4, 0xfd9       	MOVFF	PREINC1, FSR2L
0016bc   ffd9
0016be   0012     return	0                 	RETURN	
                                           
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  142 (0x008e) bytes ( 0.11%)
                                           ;           	   71 (0x0047) words
                                           ; udata size:	    6 (0x0006) bytes ( 0.33%)
                                           ; access size:	    2 (0x0002) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue Apr 14 19:33:59 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           	__config 0x300000, 0xe0
                                           	__config 0x300001, 0x3e
                                           	__config 0x300002, 0xf8
                                           	__config 0x300003, 0xe0
                                           	__config 0x300005, 0xfc
                                           	__config 0x300006, 0x9a
                                           	__config 0x300008, 0xff
                                           	__config 0x300009, 0xff
                                           	__config 0x30000a, 0xfe
                                           	__config 0x30000b, 0x9f
                                           	__config 0x30000c, 0xff
                                           	__config 0x30000d, 0xff
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _section_descriptor
                                           
                                           ;--------------------------------------------------------
                                           ; extern variables in this module
                                           ;--------------------------------------------------------
                                           	extern _SPPDATAbits
                                           	extern _SPPCFGbits
                                           	extern _SPPEPSbits
                                           	extern _SPPCONbits
                                           	extern _UFRMLbits
                                           	extern _UFRMHbits
                                           	extern _UIRbits
                                           	extern _UIEbits
                                           	extern _UEIRbits
                                           	extern _UEIEbits
                                           	extern _USTATbits
                                           	extern _UCONbits
                                           	extern _UADDRbits
                                           	extern _UCFGbits
                                           	extern _UEP0bits
                                           	extern _UEP1bits
                                           	extern _UEP2bits
                                           	extern _UEP3bits
                                           	extern _UEP4bits
                                           	extern _UEP5bits
                                           	extern _UEP6bits
                                           	extern _UEP7bits
                                           	extern _UEP8bits
                                           	extern _UEP9bits
                                           	extern _UEP10bits
                                           	extern _UEP11bits
                                           	extern _UEP12bits
                                           	extern _UEP13bits
                                           	extern _UEP14bits
                                           	extern _UEP15bits
                                           	extern _PORTAbits
                                           	extern _PORTBbits
                                           	extern _PORTCbits
                                           	extern _PORTDbits
                                           	extern _PORTEbits
                                           	extern _LATAbits
                                           	extern _LATBbits
                                           	extern _LATCbits
                                           	extern _LATDbits
                                           	extern _LATEbits
                                           	extern _TRISAbits
                                           	extern _TRISBbits
                                           	extern _TRISCbits
                                           	extern _TRISDbits
                                           	extern _TRISEbits
                                           	extern _OSCTUNEbits
                                           	extern _PIE1bits
                                           	extern _PIR1bits
                                           	extern _IPR1bits
                                           	extern _PIE2bits
                                           	extern _PIR2bits
                                           	extern _IPR2bits
                                           	extern _EECON1bits
                                           	extern _RCSTAbits
                                           	extern _TXSTAbits
                                           	extern _T3CONbits
                                           	extern _CMCONbits
                                           	extern _CVRCONbits
                                           	extern _ECCP1ASbits
                                           	extern _ECCP1DELbits
                                           	extern _BAUDCONbits
                                           	extern _CCP2CONbits
                                           	extern _CCP1CONbits
                                           	extern _ADCON2bits
                                           	extern _ADCON1bits
                                           	extern _ADCON0bits
                                           	extern _SSPCON2bits
                                           	extern _SSPCON1bits
                                           	extern _SSPSTATbits
                                           	extern _T2CONbits
                                           	extern _T1CONbits
                                           	extern _RCONbits
                                           	extern _WDTCONbits
                                           	extern _HLVDCONbits
                                           	extern _OSCCONbits
                                           	extern _T0CONbits
                                           	extern _STATUSbits
                                           	extern _FSR2Hbits
                                           	extern _BSRbits
                                           	extern _FSR1Hbits
                                           	extern _FSR0Hbits
                                           	extern _INTCON3bits
                                           	extern _INTCON2bits
                                           	extern _INTCONbits
                                           	extern _TBLPTRUbits
                                           	extern _PCLATHbits
                                           	extern _PCLATUbits
                                           	extern _STKPTRbits
                                           	extern _TOSUbits
                                           	extern _ep2_num_bytes_to_send
                                           	extern _ep2_source_data
                                           	extern _SPPDATA
                                           	extern _SPPCFG
                                           	extern _SPPEPS
                                           	extern _SPPCON
                                           	extern _UFRML
                                           	extern _UFRMH
                                           	extern _UIR
                                           	extern _UIE
                                           	extern _UEIR
                                           	extern _UEIE
                                           	extern _USTAT
                                           	extern _UCON
                                           	extern _UADDR
                                           	extern _UCFG
                                           	extern _UEP0
                                           	extern _UEP1
                                           	extern _UEP2
                                           	extern _UEP3
                                           	extern _UEP4
                                           	extern _UEP5
                                           	extern _UEP6
                                           	extern _UEP7
                                           	extern _UEP8
                                           	extern _UEP9
                                           	extern _UEP10
                                           	extern _UEP11
                                           	extern _UEP12
                                           	extern _UEP13
                                           	extern _UEP14
                                           	extern _UEP15
                                           	extern _PORTA
                                           	extern _PORTB
                                           	extern _PORTC
                                           	extern _PORTD
                                           	extern _PORTE
                                           	extern _LATA
                                           	extern _LATB
                                           	extern _LATC
                                           	extern _LATD
                                           	extern _LATE
                                           	extern _TRISA
                                           	extern _TRISB
                                           	extern _TRISC
                                           	extern _TRISD
                                           	extern _TRISE
                                           	extern _OSCTUNE
                                           	extern _PIE1
                                           	extern _PIR1
                                           	extern _IPR1
                                           	extern _PIE2
                                           	extern _PIR2
                                           	extern _IPR2
                                           	extern _EECON1
                                           	extern _EECON2
                                           	extern _EEDATA
                                           	extern _EEADR
                                           	extern _RCSTA
                                           	extern _TXSTA
                                           	extern _TXREG
                                           	extern _RCREG
                                           	extern _SPBRG
                                           	extern _SPBRGH
                                           	extern _T3CON
                                           	extern _TMR3L
                                           	extern _TMR3H
                                           	extern _CMCON
                                           	extern _CVRCON
                                           	extern _ECCP1AS
                                           	extern _ECCP1DEL
                                           	extern _BAUDCON
                                           	extern _CCP2CON
                                           	extern _CCPR2L
                                           	extern _CCPR2H
                                           	extern _CCP1CON
                                           	extern _CCPR1L
                                           	extern _CCPR1H
                                           	extern _ADCON2
                                           	extern _ADCON1
                                           	extern _ADCON0
                                           	extern _ADRESL
                                           	extern _ADRESH
                                           	extern _SSPCON2
                                           	extern _SSPCON1
                                           	extern _SSPSTAT
                                           	extern _SSPADD
                                           	extern _SSPBUF
                                           	extern _T2CON
                                           	extern _PR2
                                           	extern _TMR2
                                           	extern _T1CON
                                           	extern _TMR1L
                                           	extern _TMR1H
                                           	extern _RCON
                                           	extern _WDTCON
                                           	extern _HLVDCON
                                           	extern _OSCCON
                                           	extern _T0CON
                                           	extern _TMR0L
                                           	extern _TMR0H
                                           	extern _STATUS
                                           	extern _FSR2L
                                           	extern _FSR2H
                                           	extern _PLUSW2
                                           	extern _PREINC2
                                           	extern _POSTDEC2
                                           	extern _POSTINC2
                                           	extern _INDF2
                                           	extern _BSR
                                           	extern _FSR1L
                                           	extern _FSR1H
                                           	extern _PLUSW1
                                           	extern _PREINC1
                                           	extern _POSTDEC1
                                           	extern _POSTINC1
                                           	extern _INDF1
                                           	extern _WREG
                                           	extern _FSR0L
                                           	extern _FSR0H
                                           	extern _PLUSW0
                                           	extern _PREINC0
                                           	extern _POSTDEC0
                                           	extern _POSTINC0
                                           	extern _INDF0
                                           	extern _INTCON3
                                           	extern _INTCON2
                                           	extern _INTCON
                                           	extern _PRODL
                                           	extern _PRODH
                                           	extern _TABLAT
                                           	extern _TBLPTRL
                                           	extern _TBLPTRH
                                           	extern _TBLPTRU
                                           	extern _PCL
                                           	extern _PCLATH
                                           	extern _PCLATU
                                           	extern _STKPTR
                                           	extern _TOSL
                                           	extern _TOSH
                                           	extern _TOSU
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; I code from now on!
                                           ; ; Starting pCode block for Ival
                                           	code
                                           _section_descriptor:
0005bc   0103     movlb	0x3                	DB	0x03, 0x01, 0x00, 0x00, 0x00, 0xff, 0x1f, 0x00, 0x03, 0x00, 0x20, 0x00
0005be   0000     nop                      
0005c0   ff00     dw	0xff00  ;unknown opcode 
0005c2   001f     dw	0x1f  ;unknown opcode 
0005c4   0003     sleep                    
0005c6   0020     dw	0x20  ;unknown opcode 
0005c8   7fff     btg	0xff, 0x7, 0x1       	DB	0xff, 0x7f, 0x00, 0x01, 0x00, 0x00, 0x30, 0x0d, 0x00, 0x30
0005ca   0100     movlb	0                  
0005cc   0000     nop                      
0005ce   0d30     mullw	0x30               
0005d0   3000     rrcf	0, 0, 0             
                                           
                                           
                                           ; Statistics:
                                           ; code size:	    6 (0x0006) bytes ( 0.00%)
                                           ;           	    3 (0x0003) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
                                           ;--------------------------------------------------------
                                           ; File Created by SDCC : FreeWare ANSI-C Compiler
                                           ; Version 2.6.1 #4482 (Mar 15 2009)
                                           ; This file generated Tue Apr 14 19:33:59 2009
                                           ;--------------------------------------------------------
                                           ; PIC16 port for the Microchip 16-bit core micros
                                           ;--------------------------------------------------------
                                           	list	p=18f4550
                                           
                                           	radix dec
                                           
                                           ;--------------------------------------------------------
                                           ; public variables in this module
                                           ;--------------------------------------------------------
                                           	global _high_priority_isr
                                           	global _low_priority_isr
                                           ;--------------------------------------------------------
                                           ;	Equates to used internal registers
                                           ;--------------------------------------------------------
                                           STATUS	equ	0xfd8
                                           PCLATH	equ	0xffa
                                           PCLATU	equ	0xffb
                                           WREG	equ	0xfe8
                                           BSR	equ	0xfe0
                                           FSR0L	equ	0xfe9
                                           FSR0H	equ	0xfea
                                           FSR1L	equ	0xfe1
                                           FSR2L	equ	0xfd9
                                           POSTDEC1	equ	0xfe5
                                           PREINC1	equ	0xfe4
                                           PRODL	equ	0xff3
                                           PRODH	equ	0xff4
                                           
                                           ;--------------------------------------------------------
                                           ; global & static initialisations
                                           ;--------------------------------------------------------
                                           ; ; Starting pCode block
                                           S_interrupt_iface__high_priority_isr	code	0X002020
                                           _high_priority_isr:
                                           ;	.line	28; interrupt_iface.c	void high_priority_isr(void) interrupt 1
002020   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
002022   ffe5
002024   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
002026   ffe5
002028   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00202a   ffe5
00202c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00202e   ffe5
002030   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
002032   ffe5
002034   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
002036   ffe5
002038   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00203a   ffe5
00203c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00203e   ffe5
002040   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
002042   ffe5
                                           ;	.line	30; interrupt_iface.c	}
002044   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
002046   fffb
002048   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00204a   fffa
00204c   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
00204e   ffea
002050   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
002052   ffe9
002054   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
002056   fff4
002058   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00205a   fff3
00205c   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
00205e   ffe0
002060   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
002062   ffd8
002064   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
002066   ffe8
002068   0010     retfie	0                 	RETFIE	
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_interrupt_iface_ivec_0x1_high_priority_isr	code	0X000008
                                           ivec_0x1_high_priority_isr:
000008   ef10     goto	0x2020              	GOTO	_high_priority_isr
00000a   f010
                                           
                                           ; ; Starting pCode block
                                           S_interrupt_iface__low_priority_isr	code	0X004000
                                           _low_priority_isr:
                                           ;	.line	33; interrupt_iface.c	void low_priority_isr(void) interrupt 2
004000   cfe8     movff	0xfe8, 0xfe5       	MOVFF	WREG, POSTDEC1
004002   ffe5
004004   cfd8     movff	0xfd8, 0xfe5       	MOVFF	STATUS, POSTDEC1
004006   ffe5
004008   cfe0     movff	0xfe0, 0xfe5       	MOVFF	BSR, POSTDEC1
00400a   ffe5
00400c   cff3     movff	0xff3, 0xfe5       	MOVFF	PRODL, POSTDEC1
00400e   ffe5
004010   cff4     movff	0xff4, 0xfe5       	MOVFF	PRODH, POSTDEC1
004012   ffe5
004014   cfe9     movff	0xfe9, 0xfe5       	MOVFF	FSR0L, POSTDEC1
004016   ffe5
004018   cfea     movff	0xfea, 0xfe5       	MOVFF	FSR0H, POSTDEC1
00401a   ffe5
00401c   cffa     movff	0xffa, 0xfe5       	MOVFF	PCLATH, POSTDEC1
00401e   ffe5
004020   cffb     movff	0xffb, 0xfe5       	MOVFF	PCLATU, POSTDEC1
004022   ffe5
                                           ;	.line	35; interrupt_iface.c	}
004024   cfe4     movff	0xfe4, 0xffb       	MOVFF	PREINC1, PCLATU
004026   fffb
004028   cfe4     movff	0xfe4, 0xffa       	MOVFF	PREINC1, PCLATH
00402a   fffa
00402c   cfe4     movff	0xfe4, 0xfea       	MOVFF	PREINC1, FSR0H
00402e   ffea
004030   cfe4     movff	0xfe4, 0xfe9       	MOVFF	PREINC1, FSR0L
004032   ffe9
004034   cfe4     movff	0xfe4, 0xff4       	MOVFF	PREINC1, PRODH
004036   fff4
004038   cfe4     movff	0xfe4, 0xff3       	MOVFF	PREINC1, PRODL
00403a   fff3
00403c   cfe4     movff	0xfe4, 0xfe0       	MOVFF	PREINC1, BSR
00403e   ffe0
004040   cfe4     movff	0xfe4, 0xfd8       	MOVFF	PREINC1, STATUS
004042   ffd8
004044   cfe4     movff	0xfe4, 0xfe8       	MOVFF	PREINC1, WREG
004046   ffe8
004048   0010     retfie	0                 	RETFIE	
                                           
                                           ; ; Starting pCode block for absolute section
                                           ; ;-----------------------------------------
                                           S_interrupt_iface_ivec_0x2_low_priority_isr	code	0X000018
                                           ivec_0x2_low_priority_isr:
000018   ef00     goto	0x4000              	GOTO	_low_priority_isr
00001a   f020
                                           
                                           ; I code from now on!
                                           
                                           
                                           ; Statistics:
                                           ; code size:	  152 (0x0098) bytes ( 0.12%)
                                           ;           	   76 (0x004c) words
                                           ; udata size:	    0 (0x0000) bytes ( 0.00%)
                                           ; access size:	    0 (0x0000) bytes
                                           
                                           
                                           	end
